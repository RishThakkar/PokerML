-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_mult_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    kernel_data_V_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1285 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_2286 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_3287 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_4 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_6 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_7 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_8 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_9 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_10 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_12 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_13 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_14 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_15 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_16 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_17 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_18 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_19 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_20 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_21 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_22 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_23 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_24 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_25 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_26 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_mult_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_FFFFB800 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111011100000000000";
    constant ap_const_lv32_1800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001100000000000";
    constant ap_const_lv32_3000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln129_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal outidx3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outidx3_ce0 : STD_LOGIC;
    signal outidx3_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal w2_V_ce0 : STD_LOGIC;
    signal w2_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_index30_reg_194 : STD_LOGIC_VECTOR (6 downto 0);
    signal in_index_0_i_i29_reg_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_0_i28_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_1_i26_reg_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_2_i24_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_3_i22_reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_020_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_V_019_reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_V_018_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_V_017_reg_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln139_fu_558_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_index_fu_562_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal w_index_reg_831 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln148_fu_688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln148_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln129_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_981_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_reg_985 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln728_fu_816_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln728_reg_990 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_w_index30_phi_fu_198_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_222 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_0_V_1_phi_fu_466_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_1_V_1_phi_fu_448_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_2_V_1_phi_fu_430_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_3_V_1_phi_fu_412_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_fu_734_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_acc_3_V_1_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_acc_2_V_1_reg_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_acc_1_V_1_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_acc_0_V_1_reg_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_20_37_i_reg_480 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_20_25_i_reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_20_13_i_reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_20_01_i_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln133_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_index_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln148_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_710_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_14_fu_717_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_721_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_316 : BOOLEAN;
    signal ap_condition_285 : BOOLEAN;
    signal ap_condition_40 : BOOLEAN;

    component myproject_axi_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_axi_mul_mul_6s_16s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_mult_s_outidx3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_mult_s_w2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    outidx3_U : component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_mult_s_outidx3
    generic map (
        DataWidth => 2,
        AddressRange => 108,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outidx3_address0,
        ce0 => outidx3_ce0,
        q0 => outidx3_q0);

    w2_V_U : component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_mult_s_w2_V
    generic map (
        DataWidth => 6,
        AddressRange => 108,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w2_V_address0,
        ce0 => w2_V_ce0,
        q0 => w2_V_q0);

    myproject_axi_mux_42_32_1_1_U31 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => acc_0_V_020_reg_352,
        din1 => acc_1_V_019_reg_366,
        din2 => acc_2_V_018_reg_380,
        din3 => acc_3_V_017_reg_394,
        din4 => out_index_reg_985,
        dout => tmp_fu_721_p6);

    myproject_axi_mul_mul_6s_16s_20_1_1_U32 : component myproject_axi_mul_mul_6s_16s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 16,
        dout_WIDTH => 20)
    port map (
        din0 => w2_V_q0,
        din1 => ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222,
        dout => mul_ln728_fu_816_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_return_0_preg <= ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_return_1_preg <= ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_return_2_preg <= ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_return_3_preg <= ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    acc_0_V_020_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                acc_0_V_020_reg_352 <= ap_phi_mux_acc_0_V_1_phi_fu_466_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_0_V_020_reg_352 <= ap_const_lv32_FFFFB800;
            end if; 
        end if;
    end process;

    acc_1_V_019_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                acc_1_V_019_reg_366 <= ap_phi_mux_acc_1_V_1_phi_fu_448_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_1_V_019_reg_366 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    acc_2_V_018_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                acc_2_V_018_reg_380 <= ap_phi_mux_acc_2_V_1_phi_fu_430_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_2_V_018_reg_380 <= ap_const_lv32_1800;
            end if; 
        end if;
    end process;

    acc_3_V_017_reg_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                acc_3_V_017_reg_394 <= ap_phi_mux_acc_3_V_1_phi_fu_412_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_3_V_017_reg_394 <= ap_const_lv32_3000;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_40)) then
                if ((ap_const_boolean_1 = ap_condition_285)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_26;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_19)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_25;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_18)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_24;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_17)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_23;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_16)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_22;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_15)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_21;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_14)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_20;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_13)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_19;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_12)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_18;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_11)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_17;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_10)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_16;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_F)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_15;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_E)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_14;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_D)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_13;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_C)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_12;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_B)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_11;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_A)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_10;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_9)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_9;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_8)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_8;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_7)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_7;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_6)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_6;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_5)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_5;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_4)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_4;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_3)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_3287;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_2)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_2286;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_1)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_1285;
                elsif ((trunc_ln139_fu_558_p1 = ap_const_lv5_0)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= kernel_data_V_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_222 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_222;
                end if;
            end if; 
        end if;
    end process;

    in_index_0_i_i29_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_index_0_i_i29_reg_208 <= select_ln148_reg_976;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                in_index_0_i_i29_reg_208 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_20_0_i28_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                p_Val2_20_0_i28_reg_296 <= ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_20_0_i28_reg_296 <= ap_const_lv32_FFFFB800;
            end if; 
        end if;
    end process;

    p_Val2_20_1_i26_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                p_Val2_20_1_i26_reg_310 <= ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_20_1_i26_reg_310 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_20_2_i24_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                p_Val2_20_2_i24_reg_324 <= ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_20_2_i24_reg_324 <= ap_const_lv32_1800;
            end if; 
        end if;
    end process;

    p_Val2_20_3_i22_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                p_Val2_20_3_i22_reg_338 <= ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_20_3_i22_reg_338 <= ap_const_lv32_3000;
            end if; 
        end if;
    end process;

    w_index30_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                w_index30_reg_194 <= w_index_reg_831;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                w_index30_reg_194 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln129_reg_981 <= icmp_ln129_fu_696_p2;
                icmp_ln129_reg_981_pp0_iter1_reg <= icmp_ln129_reg_981;
                mul_ln728_reg_990 <= mul_ln728_fu_816_p2;
                out_index_reg_985 <= outidx3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln148_reg_976 <= select_ln148_fu_688_p3;
                w_index_reg_831 <= w_index_fu_562_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    acc_0_V_fu_734_p2 <= std_logic_vector(signed(sext_ln728_14_fu_717_p1) + signed(tmp_fu_721_p6));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_285_assign_proc : process(trunc_ln139_fu_558_p1)
    begin
                ap_condition_285 <= ((trunc_ln139_fu_558_p1 = ap_const_lv5_1A) or ((trunc_ln139_fu_558_p1 = ap_const_lv5_1B) or ((trunc_ln139_fu_558_p1 = ap_const_lv5_1C) or ((trunc_ln139_fu_558_p1 = ap_const_lv5_1D) or ((trunc_ln139_fu_558_p1 = ap_const_lv5_1E) or (trunc_ln139_fu_558_p1 = ap_const_lv5_1F))))));
    end process;


    ap_condition_316_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_316 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_40_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_40 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_11001, icmp_ln129_reg_981_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_acc_0_V_1_phi_fu_466_p8_assign_proc : process(acc_0_V_020_reg_352, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_acc_0_V_1_reg_462)
    begin
        if ((out_index_reg_985 = ap_const_lv2_0)) then 
            ap_phi_mux_acc_0_V_1_phi_fu_466_p8 <= acc_0_V_fu_734_p2;
        elsif (((out_index_reg_985 = ap_const_lv2_1) or (out_index_reg_985 = ap_const_lv2_2) or (out_index_reg_985 = ap_const_lv2_3))) then 
            ap_phi_mux_acc_0_V_1_phi_fu_466_p8 <= acc_0_V_020_reg_352;
        else 
            ap_phi_mux_acc_0_V_1_phi_fu_466_p8 <= ap_phi_reg_pp0_iter2_acc_0_V_1_reg_462;
        end if; 
    end process;


    ap_phi_mux_acc_1_V_1_phi_fu_448_p8_assign_proc : process(acc_1_V_019_reg_366, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_acc_1_V_1_reg_444)
    begin
        if ((out_index_reg_985 = ap_const_lv2_1)) then 
            ap_phi_mux_acc_1_V_1_phi_fu_448_p8 <= acc_0_V_fu_734_p2;
        elsif (((out_index_reg_985 = ap_const_lv2_0) or (out_index_reg_985 = ap_const_lv2_2) or (out_index_reg_985 = ap_const_lv2_3))) then 
            ap_phi_mux_acc_1_V_1_phi_fu_448_p8 <= acc_1_V_019_reg_366;
        else 
            ap_phi_mux_acc_1_V_1_phi_fu_448_p8 <= ap_phi_reg_pp0_iter2_acc_1_V_1_reg_444;
        end if; 
    end process;


    ap_phi_mux_acc_2_V_1_phi_fu_430_p8_assign_proc : process(acc_2_V_018_reg_380, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_acc_2_V_1_reg_426)
    begin
        if ((out_index_reg_985 = ap_const_lv2_2)) then 
            ap_phi_mux_acc_2_V_1_phi_fu_430_p8 <= acc_0_V_fu_734_p2;
        elsif (((out_index_reg_985 = ap_const_lv2_0) or (out_index_reg_985 = ap_const_lv2_1) or (out_index_reg_985 = ap_const_lv2_3))) then 
            ap_phi_mux_acc_2_V_1_phi_fu_430_p8 <= acc_2_V_018_reg_380;
        else 
            ap_phi_mux_acc_2_V_1_phi_fu_430_p8 <= ap_phi_reg_pp0_iter2_acc_2_V_1_reg_426;
        end if; 
    end process;


    ap_phi_mux_acc_3_V_1_phi_fu_412_p8_assign_proc : process(acc_3_V_017_reg_394, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_acc_3_V_1_reg_408)
    begin
        if (((out_index_reg_985 = ap_const_lv2_0) or (out_index_reg_985 = ap_const_lv2_1) or (out_index_reg_985 = ap_const_lv2_2))) then 
            ap_phi_mux_acc_3_V_1_phi_fu_412_p8 <= acc_3_V_017_reg_394;
        elsif ((out_index_reg_985 = ap_const_lv2_3)) then 
            ap_phi_mux_acc_3_V_1_phi_fu_412_p8 <= acc_0_V_fu_734_p2;
        else 
            ap_phi_mux_acc_3_V_1_phi_fu_412_p8 <= ap_phi_reg_pp0_iter2_acc_3_V_1_reg_408;
        end if; 
    end process;


    ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6_assign_proc : process(in_index_0_i_i29_reg_208, select_ln148_reg_976, icmp_ln129_reg_981, ap_condition_316)
    begin
        if ((ap_const_boolean_1 = ap_condition_316)) then
            if ((icmp_ln129_reg_981 = ap_const_lv1_1)) then 
                ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6 <= ap_const_lv32_0;
            elsif ((icmp_ln129_reg_981 = ap_const_lv1_0)) then 
                ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6 <= select_ln148_reg_976;
            else 
                ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6 <= in_index_0_i_i29_reg_208;
            end if;
        else 
            ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6 <= in_index_0_i_i29_reg_208;
        end if; 
    end process;


    ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8_assign_proc : process(p_Val2_20_0_i28_reg_296, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_p_Val2_20_01_i_reg_534)
    begin
        if ((out_index_reg_985 = ap_const_lv2_0)) then 
            ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8 <= acc_0_V_fu_734_p2;
        elsif (((out_index_reg_985 = ap_const_lv2_1) or (out_index_reg_985 = ap_const_lv2_2) or (out_index_reg_985 = ap_const_lv2_3))) then 
            ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8 <= p_Val2_20_0_i28_reg_296;
        else 
            ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8 <= ap_phi_reg_pp0_iter2_p_Val2_20_01_i_reg_534;
        end if; 
    end process;


    ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8_assign_proc : process(p_Val2_20_1_i26_reg_310, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_p_Val2_20_13_i_reg_516)
    begin
        if ((out_index_reg_985 = ap_const_lv2_1)) then 
            ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8 <= acc_0_V_fu_734_p2;
        elsif (((out_index_reg_985 = ap_const_lv2_0) or (out_index_reg_985 = ap_const_lv2_2) or (out_index_reg_985 = ap_const_lv2_3))) then 
            ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8 <= p_Val2_20_1_i26_reg_310;
        else 
            ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8 <= ap_phi_reg_pp0_iter2_p_Val2_20_13_i_reg_516;
        end if; 
    end process;


    ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8_assign_proc : process(p_Val2_20_2_i24_reg_324, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_p_Val2_20_25_i_reg_498)
    begin
        if ((out_index_reg_985 = ap_const_lv2_2)) then 
            ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8 <= acc_0_V_fu_734_p2;
        elsif (((out_index_reg_985 = ap_const_lv2_0) or (out_index_reg_985 = ap_const_lv2_1) or (out_index_reg_985 = ap_const_lv2_3))) then 
            ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8 <= p_Val2_20_2_i24_reg_324;
        else 
            ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8 <= ap_phi_reg_pp0_iter2_p_Val2_20_25_i_reg_498;
        end if; 
    end process;


    ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8_assign_proc : process(p_Val2_20_3_i22_reg_338, out_index_reg_985, acc_0_V_fu_734_p2, ap_phi_reg_pp0_iter2_p_Val2_20_37_i_reg_480)
    begin
        if (((out_index_reg_985 = ap_const_lv2_0) or (out_index_reg_985 = ap_const_lv2_1) or (out_index_reg_985 = ap_const_lv2_2))) then 
            ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8 <= p_Val2_20_3_i22_reg_338;
        elsif ((out_index_reg_985 = ap_const_lv2_3)) then 
            ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8 <= acc_0_V_fu_734_p2;
        else 
            ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8 <= ap_phi_reg_pp0_iter2_p_Val2_20_37_i_reg_480;
        end if; 
    end process;


    ap_phi_mux_w_index30_phi_fu_198_p6_assign_proc : process(w_index30_reg_194, w_index_reg_831, icmp_ln129_reg_981, ap_condition_316)
    begin
        if ((ap_const_boolean_1 = ap_condition_316)) then
            if ((icmp_ln129_reg_981 = ap_const_lv1_1)) then 
                ap_phi_mux_w_index30_phi_fu_198_p6 <= ap_const_lv7_0;
            elsif ((icmp_ln129_reg_981 = ap_const_lv1_0)) then 
                ap_phi_mux_w_index30_phi_fu_198_p6 <= w_index_reg_831;
            else 
                ap_phi_mux_w_index30_phi_fu_198_p6 <= w_index30_reg_194;
            end if;
        else 
            ap_phi_mux_w_index30_phi_fu_198_p6 <= w_index30_reg_194;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_222 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_acc_0_V_1_reg_462 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_acc_1_V_1_reg_444 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_acc_2_V_1_reg_426 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_acc_3_V_1_reg_408 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_p_Val2_20_01_i_reg_534 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_p_Val2_20_13_i_reg_516 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_p_Val2_20_25_i_reg_498 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_p_Val2_20_37_i_reg_480 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln129_fu_696_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_fu_696_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_981_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_return_0 <= ap_phi_mux_p_Val2_20_01_i_phi_fu_538_p8(21 downto 6);
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_981_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_return_1 <= ap_phi_mux_p_Val2_20_13_i_phi_fu_520_p8(21 downto 6);
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_981_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_return_2 <= ap_phi_mux_p_Val2_20_25_i_phi_fu_502_p8(21 downto 6);
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_981_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_981_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_return_3 <= ap_phi_mux_p_Val2_20_37_i_phi_fu_484_p8(21 downto 6);
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;

    icmp_ln129_fu_696_p2 <= "1" when (ap_phi_mux_w_index30_phi_fu_198_p6 = ap_const_lv7_6B) else "0";
    icmp_ln148_fu_682_p2 <= "1" when (signed(in_index_fu_676_p2) > signed(ap_const_lv32_1A)) else "0";
    in_index_fu_676_p2 <= std_logic_vector(unsigned(ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6) + unsigned(ap_const_lv32_1));
    outidx3_address0 <= zext_ln133_fu_552_p1(7 - 1 downto 0);

    outidx3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outidx3_ce0 <= ap_const_logic_1;
        else 
            outidx3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln148_fu_688_p3 <= 
        ap_const_lv32_0 when (icmp_ln148_fu_682_p2(0) = '1') else 
        in_index_fu_676_p2;
        sext_ln728_14_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_710_p3),32));

    shl_ln_fu_710_p3 <= (mul_ln728_reg_990 & ap_const_lv1_0);
    trunc_ln139_fu_558_p1 <= ap_phi_mux_in_index_0_i_i29_phi_fu_212_p6(5 - 1 downto 0);
    w2_V_address0 <= zext_ln133_fu_552_p1(7 - 1 downto 0);

    w2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_V_ce0 <= ap_const_logic_1;
        else 
            w2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_562_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(ap_phi_mux_w_index30_phi_fu_198_p6));
    zext_ln133_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index30_phi_fu_198_p6),64));
end behav;
