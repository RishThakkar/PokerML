-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv12_F04 : STD_LOGIC_VECTOR (11 downto 0) := "111100000100";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_2_4 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_5 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_6 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_7 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_12 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_13 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_14 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_2_15 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal line_buffer_Array_V_2_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal line_buffer_Array_V_2_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal line_buffer_Array_V_2_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal line_buffer_Array_V_2_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_3_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln241_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal and_ln191_4_reg_952 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_150 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln241_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op154 : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln241_reg_915_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln241_fu_178_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln241_reg_919 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_0_V_4_reg_924 : STD_LOGIC_VECTOR (5 downto 0);
    signal io_acc_block_signal_op21 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_V_4_reg_931 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_2_V_4_reg_938 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_3_V_4_reg_945 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln191_4_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_fu_370_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_reg_956 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_fu_378_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_reg_962 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_fu_386_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_reg_968 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_fu_394_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_reg_974 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_980 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_12_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_12_reg_986 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_9_fu_413_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_9_reg_992 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_9_fu_421_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_9_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_9_fu_429_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_9_reg_1004 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_9_fu_437_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_9_reg_1010 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_14_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_14_reg_1022 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_11_fu_456_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_11_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_11_fu_464_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_11_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_11_fu_472_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_11_reg_1040 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_11_fu_480_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_11_reg_1046 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_2_reg_1052 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_16_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_16_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_13_fu_499_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_13_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_13_fu_507_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_13_reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_13_fu_515_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_13_reg_1076 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_13_fu_523_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_13_reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_18_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_18_reg_1088 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_19_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_19_reg_1094 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln227_fu_566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln227_reg_1104 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln216_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln222_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln222_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_24_fu_650_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_24_reg_1118 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_28_fu_684_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_28_reg_1123 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_31_fu_718_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_31_reg_1128 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_33_fu_752_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_33_reg_1133 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_154_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_fu_548_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln220_fu_592_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_1_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln191_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_4_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_5_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_6_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_3_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln227_fu_560_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln222_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_fu_624_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_17_fu_636_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_13_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_22_fu_629_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_fu_647_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_19_fu_658_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_21_fu_670_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_15_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_26_fu_663_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_4_fu_681_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_23_fu_692_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_25_fu_704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_17_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_30_fu_697_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_5_fu_715_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_27_fu_726_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_29_fu_738_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_20_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_32_fu_731_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_6_fu_749_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_777_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_777_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_777_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_813_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_813_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_813_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_813_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_849_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_849_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_849_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_849_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_885_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_885_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_885_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_318 : BOOLEAN;
    signal ap_condition_313 : BOOLEAN;
    signal ap_condition_303 : BOOLEAN;
    signal ap_condition_796 : BOOLEAN;
    signal ap_condition_263 : BOOLEAN;
    signal ap_condition_801 : BOOLEAN;

    component myproject_axi_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_line_bhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    line_buffer_Array_V_2_0_0_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_line_bhbi
    generic map (
        DataWidth => 6,
        AddressRange => 62,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv6_3D,
        ce0 => line_buffer_Array_V_2_0_0_ce0,
        we0 => line_buffer_Array_V_2_0_0_we0,
        d0 => tmp_data_0_V_4_reg_924,
        q0 => line_buffer_Array_V_2_0_0_q0);

    line_buffer_Array_V_2_0_1_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_line_bhbi
    generic map (
        DataWidth => 6,
        AddressRange => 62,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv6_3D,
        ce0 => line_buffer_Array_V_2_0_1_ce0,
        we0 => line_buffer_Array_V_2_0_1_we0,
        d0 => tmp_data_1_V_4_reg_931,
        q0 => line_buffer_Array_V_2_0_1_q0);

    line_buffer_Array_V_2_0_2_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_line_bhbi
    generic map (
        DataWidth => 6,
        AddressRange => 62,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv6_3D,
        ce0 => line_buffer_Array_V_2_0_2_ce0,
        we0 => line_buffer_Array_V_2_0_2_we0,
        d0 => tmp_data_2_V_4_reg_938,
        q0 => line_buffer_Array_V_2_0_2_q0);

    line_buffer_Array_V_2_0_3_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config5_s_line_bhbi
    generic map (
        DataWidth => 6,
        AddressRange => 62,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv6_3D,
        ce0 => line_buffer_Array_V_2_0_3_ce0,
        we0 => line_buffer_Array_V_2_0_3_we0,
        d0 => tmp_data_3_V_4_reg_945,
        q0 => line_buffer_Array_V_2_0_3_q0);

    myproject_axi_mux_42_32_1_1_U88 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_31_fu_777_p1,
        din1 => tmp_31_fu_777_p2,
        din2 => tmp_31_fu_777_p3,
        din3 => tmp_31_fu_777_p4,
        din4 => select_ln65_24_reg_1118,
        dout => tmp_31_fu_777_p6);

    myproject_axi_mux_42_32_1_1_U89 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_32_fu_813_p1,
        din1 => tmp_32_fu_813_p2,
        din2 => tmp_32_fu_813_p3,
        din3 => tmp_32_fu_813_p4,
        din4 => select_ln65_28_reg_1123,
        dout => tmp_32_fu_813_p6);

    myproject_axi_mux_42_32_1_1_U90 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_33_fu_849_p1,
        din1 => tmp_33_fu_849_p2,
        din2 => tmp_33_fu_849_p3,
        din3 => tmp_33_fu_849_p4,
        din4 => select_ln65_31_reg_1128,
        dout => tmp_33_fu_849_p6);

    myproject_axi_mux_42_32_1_1_U91 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_34_fu_885_p1,
        din1 => tmp_34_fu_885_p2,
        din2 => tmp_34_fu_885_p3,
        din3 => tmp_34_fu_885_p4,
        din4 => select_ln65_33_reg_1133,
        dout => tmp_34_fu_885_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln216_fu_586_p2 = ap_const_lv1_1) and (icmp_ln212_fu_542_p2 = ap_const_lv1_1) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_161 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_161 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_161;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_313)) then
                if ((ap_const_boolean_1 = ap_condition_318)) then 
                    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161 <= select_ln222_reg_1113;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_161;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
                indvar_flatten_reg_150 <= add_ln241_reg_919;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_150 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_303)) then
                if ((icmp_ln212_fu_542_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln212_fu_542_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln225_fu_548_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_796)) then
                if ((icmp_ln216_fu_586_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((icmp_ln216_fu_586_p2 = ap_const_lv1_0)) then 
                    pY_1 <= add_ln220_fu_592_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_801)) then 
                    sX_1 <= select_ln227_reg_1104;
                elsif ((ap_const_boolean_1 = ap_condition_263)) then 
                    sX_1 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln241_reg_919 <= add_ln241_fu_178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then
                and_ln191_4_reg_952 <= and_ln191_4_fu_364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_fu_364_p2))) then
                icmp_ln1496_12_reg_986 <= icmp_ln1496_12_fu_407_p2;
                icmp_ln1496_14_reg_1022 <= icmp_ln1496_14_fu_450_p2;
                icmp_ln1496_16_reg_1058 <= icmp_ln1496_16_fu_493_p2;
                icmp_ln1496_18_reg_1088 <= icmp_ln1496_18_fu_530_p2;
                icmp_ln1496_19_reg_1094 <= icmp_ln1496_19_fu_536_p2;
                icmp_ln1496_1_reg_1016 <= icmp_ln1496_1_fu_444_p2;
                icmp_ln1496_2_reg_1052 <= icmp_ln1496_2_fu_487_p2;
                icmp_ln1496_reg_980 <= icmp_ln1496_fu_401_p2;
                    pool_window_0_V_11_reg_1028(15 downto 10) <= pool_window_0_V_11_fu_456_p3(15 downto 10);
                    pool_window_0_V_13_reg_1064(15 downto 10) <= pool_window_0_V_13_fu_499_p3(15 downto 10);
                    pool_window_0_V_9_reg_992(15 downto 10) <= pool_window_0_V_9_fu_413_p3(15 downto 10);
                    pool_window_0_V_reg_956(15 downto 10) <= pool_window_0_V_fu_370_p3(15 downto 10);
                    pool_window_1_V_11_reg_1034(15 downto 10) <= pool_window_1_V_11_fu_464_p3(15 downto 10);
                    pool_window_1_V_13_reg_1070(15 downto 10) <= pool_window_1_V_13_fu_507_p3(15 downto 10);
                    pool_window_1_V_9_reg_998(15 downto 10) <= pool_window_1_V_9_fu_421_p3(15 downto 10);
                    pool_window_1_V_reg_962(15 downto 10) <= pool_window_1_V_fu_378_p3(15 downto 10);
                    pool_window_2_V_11_reg_1040(15 downto 10) <= pool_window_2_V_11_fu_472_p3(15 downto 10);
                    pool_window_2_V_13_reg_1076(15 downto 10) <= pool_window_2_V_13_fu_515_p3(15 downto 10);
                    pool_window_2_V_9_reg_1004(15 downto 10) <= pool_window_2_V_9_fu_429_p3(15 downto 10);
                    pool_window_2_V_reg_968(15 downto 10) <= pool_window_2_V_fu_386_p3(15 downto 10);
                    pool_window_3_V_11_reg_1046(15 downto 10) <= pool_window_3_V_11_fu_480_p3(15 downto 10);
                    pool_window_3_V_13_reg_1082(15 downto 10) <= pool_window_3_V_13_fu_523_p3(15 downto 10);
                    pool_window_3_V_9_reg_1010(15 downto 10) <= pool_window_3_V_9_fu_437_p3(15 downto 10);
                    pool_window_3_V_reg_974(15 downto 10) <= pool_window_3_V_fu_394_p3(15 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln212_reg_1100 <= icmp_ln212_fu_542_p2;
                icmp_ln241_reg_915 <= icmp_ln241_fu_172_p2;
                icmp_ln241_reg_915_pp0_iter1_reg <= icmp_ln241_reg_915;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_fu_542_p2 = ap_const_lv1_1))) then
                icmp_ln216_reg_1109 <= icmp_ln216_fu_586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then
                kernel_data_V_2_12 <= tmp_data_0_V_4_reg_924;
                kernel_data_V_2_13 <= tmp_data_1_V_4_reg_931;
                kernel_data_V_2_14 <= tmp_data_2_V_4_reg_938;
                kernel_data_V_2_15 <= tmp_data_3_V_4_reg_945;
                kernel_data_V_2_4 <= line_buffer_Array_V_2_0_0_q0;
                kernel_data_V_2_5 <= line_buffer_Array_V_2_0_1_q0;
                kernel_data_V_2_6 <= line_buffer_Array_V_2_0_2_q0;
                kernel_data_V_2_7 <= line_buffer_Array_V_2_0_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_reg_1100 = ap_const_lv1_1))) then
                sY_1 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_fu_542_p2 = ap_const_lv1_1) and (icmp_ln216_fu_586_p2 = ap_const_lv1_0) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then
                select_ln222_reg_1113 <= select_ln222_fu_610_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_fu_542_p2 = ap_const_lv1_0))) then
                select_ln227_reg_1104 <= select_ln227_fu_566_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_lv1_1 = and_ln191_4_reg_952))) then
                select_ln65_24_reg_1118 <= select_ln65_24_fu_650_p3;
                select_ln65_28_reg_1123 <= select_ln65_28_fu_684_p3;
                select_ln65_31_reg_1128 <= select_ln65_31_fu_718_p3;
                select_ln65_33_reg_1133 <= select_ln65_33_fu_752_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then
                tmp_data_0_V_4_reg_924 <= data_V_data_0_V_dout;
                tmp_data_1_V_4_reg_931 <= data_V_data_1_V_dout;
                tmp_data_2_V_4_reg_938 <= data_V_data_2_V_dout;
                tmp_data_3_V_4_reg_945 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    pool_window_0_V_reg_956(9 downto 0) <= "0000000000";
    pool_window_1_V_reg_962(9 downto 0) <= "0000000000";
    pool_window_2_V_reg_968(9 downto 0) <= "0000000000";
    pool_window_3_V_reg_974(9 downto 0) <= "0000000000";
    pool_window_0_V_9_reg_992(9 downto 0) <= "0000000000";
    pool_window_1_V_9_reg_998(9 downto 0) <= "0000000000";
    pool_window_2_V_9_reg_1004(9 downto 0) <= "0000000000";
    pool_window_3_V_9_reg_1010(9 downto 0) <= "0000000000";
    pool_window_0_V_11_reg_1028(9 downto 0) <= "0000000000";
    pool_window_1_V_11_reg_1034(9 downto 0) <= "0000000000";
    pool_window_2_V_11_reg_1040(9 downto 0) <= "0000000000";
    pool_window_3_V_11_reg_1046(9 downto 0) <= "0000000000";
    pool_window_0_V_13_reg_1064(9 downto 0) <= "0000000000";
    pool_window_1_V_13_reg_1070(9 downto 0) <= "0000000000";
    pool_window_2_V_13_reg_1076(9 downto 0) <= "0000000000";
    pool_window_3_V_13_reg_1082(9 downto 0) <= "0000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln241_fu_172_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_172_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_172_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln220_fu_592_p2 <= std_logic_vector(unsigned(pY_1) + unsigned(ap_const_lv32_1));
    add_ln222_fu_604_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_1_load) + unsigned(ap_const_lv32_1));
    add_ln225_fu_548_p2 <= std_logic_vector(unsigned(pX_1) + unsigned(ap_const_lv32_1));
    add_ln227_fu_560_p2 <= std_logic_vector(unsigned(sX_1) + unsigned(ap_const_lv32_1));
    add_ln241_fu_178_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_154_p4) + unsigned(ap_const_lv12_1));
    and_ln191_3_fu_358_p2 <= (icmp_ln191_6_fu_346_p2 and icmp_ln191_5_fu_336_p2);
    and_ln191_4_fu_364_p2 <= (and_ln191_fu_352_p2 and and_ln191_3_fu_358_p2);
    and_ln191_fu_352_p2 <= (icmp_ln191_fu_316_p2 and icmp_ln191_4_fu_326_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, io_acc_block_signal_op154)
    begin
                ap_block_pp0_stage0_01001 <= ((io_acc_block_signal_op154 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln191_4_reg_952));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, io_acc_block_signal_op154)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op154 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln191_4_reg_952));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, io_acc_block_signal_op154)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op154 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln191_4_reg_952));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln241_reg_915, io_acc_block_signal_op21)
    begin
                ap_block_pp0_stage1_11001 <= ((io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_reg_915 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln241_reg_915, io_acc_block_signal_op21)
    begin
                ap_block_pp0_stage1_subdone <= ((io_acc_block_signal_op21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_reg_915 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln241_reg_915, io_acc_block_signal_op21)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((io_acc_block_signal_op21 = ap_const_logic_0) and (icmp_ln241_reg_915 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(and_ln191_4_reg_952, io_acc_block_signal_op154)
    begin
                ap_block_state6_pp0_stage0_iter2 <= ((io_acc_block_signal_op154 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln191_4_reg_952));
    end process;


    ap_condition_263_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln212_fu_542_p2)
    begin
                ap_condition_263 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_fu_542_p2 = ap_const_lv1_1));
    end process;


    ap_condition_303_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_303 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_313_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_313 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_318_assign_proc : process(icmp_ln241_reg_915_pp0_iter1_reg, icmp_ln212_reg_1100, icmp_ln216_reg_1109)
    begin
                ap_condition_318 <= ((icmp_ln212_reg_1100 = ap_const_lv1_1) and (icmp_ln216_reg_1109 = ap_const_lv1_0) and (icmp_ln241_reg_915_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_796_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln212_fu_542_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_796 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_fu_542_p2 = ap_const_lv1_1) and (icmp_ln241_reg_915 = ap_const_lv1_0));
    end process;


    ap_condition_801_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln212_reg_1100)
    begin
                ap_condition_801 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln212_reg_1100 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln241_fu_172_p2)
    begin
        if ((icmp_ln241_fu_172_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_154_p4_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_reg_150, add_ln241_reg_919, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_154_p4 <= add_ln241_reg_919;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_154_p4 <= indvar_flatten_reg_150;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_161 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_sY_1_load_assign_proc : process(sY_1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln212_reg_1100, ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_reg_1100 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_sY_1_load <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_161;
        else 
            ap_sig_allocacmp_sY_1_load <= sY_1;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_915)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_915 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_915, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_915)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_915 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_915, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_915)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_915 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_915, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_915)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_915 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_915, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_12_fu_407_p2 <= "1" when (unsigned(pool_window_2_V_fu_386_p3) < unsigned(pool_window_3_V_fu_394_p3)) else "0";
    icmp_ln1496_13_fu_641_p2 <= "1" when (unsigned(select_ln65_fu_624_p3) < unsigned(select_ln65_17_fu_636_p3)) else "0";
    icmp_ln1496_14_fu_450_p2 <= "1" when (unsigned(pool_window_2_V_9_fu_429_p3) < unsigned(pool_window_3_V_9_fu_437_p3)) else "0";
    icmp_ln1496_15_fu_675_p2 <= "1" when (unsigned(select_ln65_19_fu_658_p3) < unsigned(select_ln65_21_fu_670_p3)) else "0";
    icmp_ln1496_16_fu_493_p2 <= "1" when (unsigned(pool_window_2_V_11_fu_472_p3) < unsigned(pool_window_3_V_11_fu_480_p3)) else "0";
    icmp_ln1496_17_fu_709_p2 <= "1" when (unsigned(select_ln65_23_fu_692_p3) < unsigned(select_ln65_25_fu_704_p3)) else "0";
    icmp_ln1496_18_fu_530_p2 <= "1" when (unsigned(pool_window_0_V_13_fu_499_p3) < unsigned(pool_window_1_V_13_fu_507_p3)) else "0";
    icmp_ln1496_19_fu_536_p2 <= "1" when (unsigned(pool_window_2_V_13_fu_515_p3) < unsigned(pool_window_3_V_13_fu_523_p3)) else "0";
    icmp_ln1496_1_fu_444_p2 <= "1" when (unsigned(pool_window_0_V_9_fu_413_p3) < unsigned(pool_window_1_V_9_fu_421_p3)) else "0";
    icmp_ln1496_20_fu_743_p2 <= "1" when (unsigned(select_ln65_27_fu_726_p3) < unsigned(select_ln65_29_fu_738_p3)) else "0";
    icmp_ln1496_2_fu_487_p2 <= "1" when (unsigned(pool_window_0_V_11_fu_456_p3) < unsigned(pool_window_1_V_11_fu_464_p3)) else "0";
    icmp_ln1496_fu_401_p2 <= "1" when (unsigned(pool_window_0_V_fu_370_p3) < unsigned(pool_window_1_V_fu_378_p3)) else "0";
    icmp_ln191_4_fu_326_p2 <= "1" when (ap_sig_allocacmp_sY_1_load = ap_const_lv32_1) else "0";
    icmp_ln191_5_fu_336_p2 <= "1" when (signed(pY_1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln191_6_fu_346_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln191_fu_316_p2 <= "1" when (sX_1 = ap_const_lv32_1) else "0";
    icmp_ln212_fu_542_p2 <= "1" when (pX_1 = ap_const_lv32_3D) else "0";
    icmp_ln216_fu_586_p2 <= "1" when (pY_1 = ap_const_lv32_3D) else "0";
    icmp_ln241_fu_172_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_154_p4 = ap_const_lv12_F04) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op154 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op21 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    line_buffer_Array_V_2_0_0_ce0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_0_we0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_1_ce0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_1_we0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_2_ce0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_2_we0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_3_ce0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_3_we0_assign_proc : process(icmp_ln241_reg_915, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_915 = ap_const_lv1_0))) then 
            line_buffer_Array_V_2_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pool_window_0_V_11_fu_456_p3 <= (kernel_data_V_2_6 & ap_const_lv10_0);
    pool_window_0_V_13_fu_499_p3 <= (kernel_data_V_2_7 & ap_const_lv10_0);
    pool_window_0_V_9_fu_413_p3 <= (kernel_data_V_2_5 & ap_const_lv10_0);
    pool_window_0_V_fu_370_p3 <= (kernel_data_V_2_4 & ap_const_lv10_0);
    pool_window_1_V_11_fu_464_p3 <= (line_buffer_Array_V_2_0_2_q0 & ap_const_lv10_0);
    pool_window_1_V_13_fu_507_p3 <= (line_buffer_Array_V_2_0_3_q0 & ap_const_lv10_0);
    pool_window_1_V_9_fu_421_p3 <= (line_buffer_Array_V_2_0_1_q0 & ap_const_lv10_0);
    pool_window_1_V_fu_378_p3 <= (line_buffer_Array_V_2_0_0_q0 & ap_const_lv10_0);
    pool_window_2_V_11_fu_472_p3 <= (kernel_data_V_2_14 & ap_const_lv10_0);
    pool_window_2_V_13_fu_515_p3 <= (kernel_data_V_2_15 & ap_const_lv10_0);
    pool_window_2_V_9_fu_429_p3 <= (kernel_data_V_2_13 & ap_const_lv10_0);
    pool_window_2_V_fu_386_p3 <= (kernel_data_V_2_12 & ap_const_lv10_0);
    pool_window_3_V_11_fu_480_p3 <= (tmp_data_2_V_4_reg_938 & ap_const_lv10_0);
    pool_window_3_V_13_fu_523_p3 <= (tmp_data_3_V_4_reg_945 & ap_const_lv10_0);
    pool_window_3_V_9_fu_437_p3 <= (tmp_data_1_V_4_reg_931 & ap_const_lv10_0);
    pool_window_3_V_fu_394_p3 <= (tmp_data_0_V_4_reg_924 & ap_const_lv10_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln191_4_reg_952)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_4_reg_952) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_31_fu_777_p6(21 downto 6);

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_952))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln191_4_reg_952)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_4_reg_952) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_32_fu_813_p6(21 downto 6);

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_952))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln191_4_reg_952)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_4_reg_952) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_33_fu_849_p6(21 downto 6);

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_952))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln191_4_reg_952)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_4_reg_952) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_34_fu_885_p6(21 downto 6);

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln191_4_reg_952, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_952))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln222_fu_610_p3 <= 
        ap_const_lv32_0 when (icmp_ln191_4_fu_326_p2(0) = '1') else 
        add_ln222_fu_604_p2;
    select_ln227_fu_566_p3 <= 
        ap_const_lv32_0 when (icmp_ln191_fu_316_p2(0) = '1') else 
        add_ln227_fu_560_p2;
    select_ln65_17_fu_636_p3 <= 
        pool_window_3_V_reg_974 when (icmp_ln1496_12_reg_986(0) = '1') else 
        pool_window_2_V_reg_968;
    select_ln65_19_fu_658_p3 <= 
        pool_window_1_V_9_reg_998 when (icmp_ln1496_1_reg_1016(0) = '1') else 
        pool_window_0_V_9_reg_992;
    select_ln65_21_fu_670_p3 <= 
        pool_window_3_V_9_reg_1010 when (icmp_ln1496_14_reg_1022(0) = '1') else 
        pool_window_2_V_9_reg_1004;
    select_ln65_22_fu_629_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_12_reg_986(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_23_fu_692_p3 <= 
        pool_window_1_V_11_reg_1034 when (icmp_ln1496_2_reg_1052(0) = '1') else 
        pool_window_0_V_11_reg_1028;
    select_ln65_24_fu_650_p3 <= 
        select_ln65_22_fu_629_p3 when (icmp_ln1496_13_fu_641_p2(0) = '1') else 
        zext_ln65_fu_647_p1;
    select_ln65_25_fu_704_p3 <= 
        pool_window_3_V_11_reg_1046 when (icmp_ln1496_16_reg_1058(0) = '1') else 
        pool_window_2_V_11_reg_1040;
    select_ln65_26_fu_663_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_14_reg_1022(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_27_fu_726_p3 <= 
        pool_window_1_V_13_reg_1070 when (icmp_ln1496_18_reg_1088(0) = '1') else 
        pool_window_0_V_13_reg_1064;
    select_ln65_28_fu_684_p3 <= 
        select_ln65_26_fu_663_p3 when (icmp_ln1496_15_fu_675_p2(0) = '1') else 
        zext_ln65_4_fu_681_p1;
    select_ln65_29_fu_738_p3 <= 
        pool_window_3_V_13_reg_1082 when (icmp_ln1496_19_reg_1094(0) = '1') else 
        pool_window_2_V_13_reg_1076;
    select_ln65_30_fu_697_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_16_reg_1058(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_31_fu_718_p3 <= 
        select_ln65_30_fu_697_p3 when (icmp_ln1496_17_fu_709_p2(0) = '1') else 
        zext_ln65_5_fu_715_p1;
    select_ln65_32_fu_731_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_19_reg_1094(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_33_fu_752_p3 <= 
        select_ln65_32_fu_731_p3 when (icmp_ln1496_20_fu_743_p2(0) = '1') else 
        zext_ln65_6_fu_749_p1;
    select_ln65_fu_624_p3 <= 
        pool_window_1_V_reg_962 when (icmp_ln1496_reg_980(0) = '1') else 
        pool_window_0_V_reg_956;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_31_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_reg_956),32));
    tmp_31_fu_777_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_reg_962),32));
    tmp_31_fu_777_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_reg_968),32));
    tmp_31_fu_777_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_reg_974),32));
    tmp_32_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_9_reg_992),32));
    tmp_32_fu_813_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_9_reg_998),32));
    tmp_32_fu_813_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_9_reg_1004),32));
    tmp_32_fu_813_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_9_reg_1010),32));
    tmp_33_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_11_reg_1028),32));
    tmp_33_fu_849_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_11_reg_1034),32));
    tmp_33_fu_849_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_11_reg_1040),32));
    tmp_33_fu_849_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_11_reg_1046),32));
    tmp_34_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_13_reg_1064),32));
    tmp_34_fu_885_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_13_reg_1070),32));
    tmp_34_fu_885_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_13_reg_1076),32));
    tmp_34_fu_885_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_13_reg_1082),32));
    zext_ln65_4_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_1_reg_1016),2));
    zext_ln65_5_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_2_reg_1052),2));
    zext_ln65_6_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_18_reg_1088),2));
    zext_ln65_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_reg_980),2));
end behav;
