-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    kernel_data_V_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_4 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_6 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_7 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_8 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_9 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_10 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_12 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_13 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_14 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_15 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_16 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_17 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_18 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_19 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_20 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_21 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_22 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_23 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_24 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_25 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_26 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_27 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_28 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_29 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_30 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_31 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_32 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_33 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_34 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_1_35 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_FFFFF800 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111100000000000";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv32_FFFFE800 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110100000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv8_8F : STD_LOGIC_VECTOR (7 downto 0) := "10001111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln129_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal outidx_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal outidx_ce0 : STD_LOGIC;
    signal outidx_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w6_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal w6_V_ce0 : STD_LOGIC;
    signal w6_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_index30_reg_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_index_0_i_i29_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_19_0_i28_reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_19_1_i26_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_19_2_i24_reg_379 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_19_3_i22_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_020_reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_V_019_reg_421 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_V_018_reg_435 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_V_017_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_index_fu_613_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_index_reg_915 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_index_fu_619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_index_reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln148_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln148_reg_930 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_935 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_935_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_935_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_935_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_935_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_reg_939 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_index_reg_939_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal out_index_reg_939_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal out_index_reg_939_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln139_fu_637_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal w6_V_load_reg_1128 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln148_fu_785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_fu_904_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_reg_1148 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_phi_mux_w_index30_phi_fu_234_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_259 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_259 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_0_V_1_phi_fu_521_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_1_V_1_phi_fu_503_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_2_V_1_phi_fu_485_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_acc_3_V_1_phi_fu_467_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_acc_3_V_1_reg_463 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_acc_2_V_1_reg_481 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_acc_1_V_1_reg_499 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_acc_0_V_1_reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_19_37_i_reg_535 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_19_25_i_reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_19_13_i_reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_19_01_i_reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln133_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_798_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_fu_805_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_809_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_904_ce : STD_LOGIC;
    signal ap_return_0_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_463 : BOOLEAN;
    signal ap_condition_430 : BOOLEAN;
    signal ap_condition_438 : BOOLEAN;

    component myproject_axi_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_axi_mul_mul_6s_16s_21_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_outidx IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_w6_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    outidx_U : component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_outidx
    generic map (
        DataWidth => 2,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outidx_address0,
        ce0 => outidx_ce0,
        q0 => outidx_q0);

    w6_V_U : component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_mult_s_w6_V
    generic map (
        DataWidth => 6,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w6_V_address0,
        ce0 => w6_V_ce0,
        q0 => w6_V_q0);

    myproject_axi_mux_42_32_1_1_U130 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => acc_0_V_020_reg_407,
        din1 => acc_1_V_019_reg_421,
        din2 => acc_2_V_018_reg_435,
        din3 => acc_3_V_017_reg_449,
        din4 => out_index_reg_939_pp0_iter4_reg,
        dout => tmp_fu_809_p6);

    myproject_axi_mul_mul_6s_16s_21_3_1_U131 : component myproject_axi_mul_mul_6s_16s_21_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 6,
        din1_WIDTH => 16,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => w6_V_load_reg_1128,
        din1 => ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259,
        ce => grp_fu_904_ce,
        dout => grp_fu_904_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_return_0_preg <= ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_return_1_preg <= ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_return_2_preg <= ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_return_3_preg <= ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8(21 downto 6);
                end if; 
            end if;
        end if;
    end process;


    acc_0_V_020_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                acc_0_V_020_reg_407 <= ap_phi_mux_acc_0_V_1_phi_fu_521_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_0_V_020_reg_407 <= ap_const_lv32_FFFFF800;
            end if; 
        end if;
    end process;

    acc_1_V_019_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                acc_1_V_019_reg_421 <= ap_phi_mux_acc_1_V_1_phi_fu_503_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_1_V_019_reg_421 <= ap_const_lv32_800;
            end if; 
        end if;
    end process;

    acc_2_V_018_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                acc_2_V_018_reg_435 <= ap_phi_mux_acc_2_V_1_phi_fu_485_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_2_V_018_reg_435 <= ap_const_lv32_FFFFE800;
            end if; 
        end if;
    end process;

    acc_3_V_017_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                acc_3_V_017_reg_449 <= ap_phi_mux_acc_3_V_1_phi_fu_467_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                acc_3_V_017_reg_449 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_438)) then
                if ((ap_const_boolean_1 = ap_condition_430)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_35;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_34;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_33;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_32;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1F)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_31;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1E)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_30;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1D)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_29;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1C)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_28;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1B)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_27;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1A)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_26;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_19)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_25;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_18)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_24;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_17)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_23;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_16)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_22;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_15)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_21;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_14)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_20;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_13)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_19;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_12)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_18;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_11)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_17;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_10)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_16;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_F)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_15;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_E)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_14;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_D)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_13;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_C)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_12;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_B)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_11;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_A)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_10;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_9)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_9;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_8)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_8;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_7)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_7;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_6)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_6;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_5)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_5;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_4)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_4;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_3)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_3;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_2)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_2;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_1)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_1;
                elsif ((trunc_ln139_fu_637_p1 = ap_const_lv6_0)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_259 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_259;
                end if;
            end if; 
        end if;
    end process;

    in_index_0_i_i29_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln129_reg_935 = ap_const_lv1_0))) then 
                in_index_0_i_i29_reg_244 <= select_ln148_fu_785_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                in_index_0_i_i29_reg_244 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_19_0_i28_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                p_Val2_19_0_i28_reg_351 <= ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_19_0_i28_reg_351 <= ap_const_lv32_FFFFF800;
            end if; 
        end if;
    end process;

    p_Val2_19_1_i26_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                p_Val2_19_1_i26_reg_365 <= ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_19_1_i26_reg_365 <= ap_const_lv32_800;
            end if; 
        end if;
    end process;

    p_Val2_19_2_i24_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                p_Val2_19_2_i24_reg_379 <= ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_19_2_i24_reg_379 <= ap_const_lv32_FFFFE800;
            end if; 
        end if;
    end process;

    p_Val2_19_3_i22_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_0))) then 
                p_Val2_19_3_i22_reg_393 <= ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_Val2_19_3_i22_reg_393 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    w_index30_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln129_reg_935 = ap_const_lv1_0))) then 
                w_index30_reg_230 <= w_index_reg_915;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                w_index30_reg_230 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_259 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_259;
                w_index_reg_915 <= w_index_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln129_reg_935 <= icmp_ln129_fu_631_p2;
                icmp_ln129_reg_935_pp0_iter1_reg <= icmp_ln129_reg_935;
                icmp_ln148_reg_930 <= icmp_ln148_fu_625_p2;
                in_index_reg_925 <= in_index_fu_619_p2;
                out_index_reg_939 <= outidx_q0;
                w6_V_load_reg_1128 <= w6_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln129_reg_935_pp0_iter2_reg <= icmp_ln129_reg_935_pp0_iter1_reg;
                icmp_ln129_reg_935_pp0_iter3_reg <= icmp_ln129_reg_935_pp0_iter2_reg;
                icmp_ln129_reg_935_pp0_iter4_reg <= icmp_ln129_reg_935_pp0_iter3_reg;
                mul_ln728_reg_1148 <= grp_fu_904_p2;
                out_index_reg_939_pp0_iter2_reg <= out_index_reg_939;
                out_index_reg_939_pp0_iter3_reg <= out_index_reg_939_pp0_iter2_reg;
                out_index_reg_939_pp0_iter4_reg <= out_index_reg_939_pp0_iter3_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    acc_0_V_fu_822_p2 <= std_logic_vector(signed(sext_ln728_fu_805_p1) + signed(tmp_fu_809_p6));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_430_assign_proc : process(trunc_ln139_fu_637_p1)
    begin
                ap_condition_430 <= ((trunc_ln139_fu_637_p1 = ap_const_lv6_23) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_24) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_25) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_26) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_27) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_28) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_29) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_2A) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_2B) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_2C) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_2D) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_2E) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_2F) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_30) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_31) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_32) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_33) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_34) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_35) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_36) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_37) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_38) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_39) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_3A) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_3B) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_3C) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_3D) or ((trunc_ln139_fu_637_p1 = ap_const_lv6_3E) or (trunc_ln139_fu_637_p1 = ap_const_lv6_3F)))))))))))))))))))))))))))));
    end process;


    ap_condition_438_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_438 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_463_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_463 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_11001, icmp_ln129_reg_935_pp0_iter4_reg, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_acc_0_V_1_phi_fu_521_p8_assign_proc : process(acc_0_V_020_reg_407, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_acc_0_V_1_reg_517)
    begin
        if ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0)) then 
            ap_phi_mux_acc_0_V_1_phi_fu_521_p8 <= acc_0_V_fu_822_p2;
        elsif (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3))) then 
            ap_phi_mux_acc_0_V_1_phi_fu_521_p8 <= acc_0_V_020_reg_407;
        else 
            ap_phi_mux_acc_0_V_1_phi_fu_521_p8 <= ap_phi_reg_pp0_iter5_acc_0_V_1_reg_517;
        end if; 
    end process;


    ap_phi_mux_acc_1_V_1_phi_fu_503_p8_assign_proc : process(acc_1_V_019_reg_421, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_acc_1_V_1_reg_499)
    begin
        if ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1)) then 
            ap_phi_mux_acc_1_V_1_phi_fu_503_p8 <= acc_0_V_fu_822_p2;
        elsif (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3))) then 
            ap_phi_mux_acc_1_V_1_phi_fu_503_p8 <= acc_1_V_019_reg_421;
        else 
            ap_phi_mux_acc_1_V_1_phi_fu_503_p8 <= ap_phi_reg_pp0_iter5_acc_1_V_1_reg_499;
        end if; 
    end process;


    ap_phi_mux_acc_2_V_1_phi_fu_485_p8_assign_proc : process(acc_2_V_018_reg_435, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_acc_2_V_1_reg_481)
    begin
        if ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2)) then 
            ap_phi_mux_acc_2_V_1_phi_fu_485_p8 <= acc_0_V_fu_822_p2;
        elsif (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3))) then 
            ap_phi_mux_acc_2_V_1_phi_fu_485_p8 <= acc_2_V_018_reg_435;
        else 
            ap_phi_mux_acc_2_V_1_phi_fu_485_p8 <= ap_phi_reg_pp0_iter5_acc_2_V_1_reg_481;
        end if; 
    end process;


    ap_phi_mux_acc_3_V_1_phi_fu_467_p8_assign_proc : process(acc_3_V_017_reg_449, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_acc_3_V_1_reg_463)
    begin
        if (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2))) then 
            ap_phi_mux_acc_3_V_1_phi_fu_467_p8 <= acc_3_V_017_reg_449;
        elsif ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3)) then 
            ap_phi_mux_acc_3_V_1_phi_fu_467_p8 <= acc_0_V_fu_822_p2;
        else 
            ap_phi_mux_acc_3_V_1_phi_fu_467_p8 <= ap_phi_reg_pp0_iter5_acc_3_V_1_reg_463;
        end if; 
    end process;


    ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6_assign_proc : process(in_index_0_i_i29_reg_244, icmp_ln129_reg_935, select_ln148_fu_785_p3, ap_condition_463)
    begin
        if ((ap_const_boolean_1 = ap_condition_463)) then
            if ((icmp_ln129_reg_935 = ap_const_lv1_1)) then 
                ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6 <= ap_const_lv32_0;
            elsif ((icmp_ln129_reg_935 = ap_const_lv1_0)) then 
                ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6 <= select_ln148_fu_785_p3;
            else 
                ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6 <= in_index_0_i_i29_reg_244;
            end if;
        else 
            ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6 <= in_index_0_i_i29_reg_244;
        end if; 
    end process;


    ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8_assign_proc : process(p_Val2_19_0_i28_reg_351, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_p_Val2_19_01_i_reg_589)
    begin
        if ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0)) then 
            ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8 <= acc_0_V_fu_822_p2;
        elsif (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3))) then 
            ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8 <= p_Val2_19_0_i28_reg_351;
        else 
            ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8 <= ap_phi_reg_pp0_iter5_p_Val2_19_01_i_reg_589;
        end if; 
    end process;


    ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8_assign_proc : process(p_Val2_19_1_i26_reg_365, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_p_Val2_19_13_i_reg_571)
    begin
        if ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1)) then 
            ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8 <= acc_0_V_fu_822_p2;
        elsif (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3))) then 
            ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8 <= p_Val2_19_1_i26_reg_365;
        else 
            ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8 <= ap_phi_reg_pp0_iter5_p_Val2_19_13_i_reg_571;
        end if; 
    end process;


    ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8_assign_proc : process(p_Val2_19_2_i24_reg_379, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_p_Val2_19_25_i_reg_553)
    begin
        if ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2)) then 
            ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8 <= acc_0_V_fu_822_p2;
        elsif (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3))) then 
            ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8 <= p_Val2_19_2_i24_reg_379;
        else 
            ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8 <= ap_phi_reg_pp0_iter5_p_Val2_19_25_i_reg_553;
        end if; 
    end process;


    ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8_assign_proc : process(p_Val2_19_3_i22_reg_393, out_index_reg_939_pp0_iter4_reg, acc_0_V_fu_822_p2, ap_phi_reg_pp0_iter5_p_Val2_19_37_i_reg_535)
    begin
        if (((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_0) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_1) or (out_index_reg_939_pp0_iter4_reg = ap_const_lv2_2))) then 
            ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8 <= p_Val2_19_3_i22_reg_393;
        elsif ((out_index_reg_939_pp0_iter4_reg = ap_const_lv2_3)) then 
            ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8 <= acc_0_V_fu_822_p2;
        else 
            ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8 <= ap_phi_reg_pp0_iter5_p_Val2_19_37_i_reg_535;
        end if; 
    end process;


    ap_phi_mux_w_index30_phi_fu_234_p6_assign_proc : process(w_index30_reg_230, w_index_reg_915, icmp_ln129_reg_935, ap_condition_463)
    begin
        if ((ap_const_boolean_1 = ap_condition_463)) then
            if ((icmp_ln129_reg_935 = ap_const_lv1_1)) then 
                ap_phi_mux_w_index30_phi_fu_234_p6 <= ap_const_lv8_0;
            elsif ((icmp_ln129_reg_935 = ap_const_lv1_0)) then 
                ap_phi_mux_w_index30_phi_fu_234_p6 <= w_index_reg_915;
            else 
                ap_phi_mux_w_index30_phi_fu_234_p6 <= w_index30_reg_230;
            end if;
        else 
            ap_phi_mux_w_index30_phi_fu_234_p6 <= w_index30_reg_230;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_259 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_acc_0_V_1_reg_517 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_acc_1_V_1_reg_499 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_acc_2_V_1_reg_481 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_acc_3_V_1_reg_463 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_p_Val2_19_01_i_reg_589 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_p_Val2_19_13_i_reg_571 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_p_Val2_19_25_i_reg_553 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_p_Val2_19_37_i_reg_535 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln129_fu_631_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_fu_631_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_935_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_return_0 <= ap_phi_mux_p_Val2_19_01_i_phi_fu_593_p8(21 downto 6);
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_935_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_return_1 <= ap_phi_mux_p_Val2_19_13_i_phi_fu_575_p8(21 downto 6);
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_935_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_return_2 <= ap_phi_mux_p_Val2_19_25_i_phi_fu_557_p8(21 downto 6);
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln129_reg_935_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln129_reg_935_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_return_3 <= ap_phi_mux_p_Val2_19_37_i_phi_fu_539_p8(21 downto 6);
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    grp_fu_904_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_904_ce <= ap_const_logic_1;
        else 
            grp_fu_904_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln129_fu_631_p2 <= "1" when (ap_phi_mux_w_index30_phi_fu_234_p6 = ap_const_lv8_8F) else "0";
    icmp_ln148_fu_625_p2 <= "1" when (signed(in_index_fu_619_p2) > signed(ap_const_lv32_23)) else "0";
    in_index_fu_619_p2 <= std_logic_vector(unsigned(ap_phi_mux_in_index_0_i_i29_phi_fu_248_p6) + unsigned(ap_const_lv32_1));
    outidx_address0 <= zext_ln133_fu_607_p1(8 - 1 downto 0);

    outidx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outidx_ce0 <= ap_const_logic_1;
        else 
            outidx_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln148_fu_785_p3 <= 
        ap_const_lv32_0 when (icmp_ln148_reg_930(0) = '1') else 
        in_index_reg_925;
        sext_ln728_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_798_p3),32));

    shl_ln_fu_798_p3 <= (mul_ln728_reg_1148 & ap_const_lv1_0);
    trunc_ln139_fu_637_p1 <= in_index_0_i_i29_reg_244(6 - 1 downto 0);
    w6_V_address0 <= zext_ln133_fu_607_p1(8 - 1 downto 0);

    w6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w6_V_ce0 <= ap_const_logic_1;
        else 
            w6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_613_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_w_index30_phi_fu_234_p6));
    zext_ln133_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index30_phi_fu_234_p6),64));
end behav;
