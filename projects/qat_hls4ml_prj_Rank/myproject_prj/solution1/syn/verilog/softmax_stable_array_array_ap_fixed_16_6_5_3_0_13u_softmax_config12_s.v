// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        data_V_data_8_V_dout,
        data_V_data_8_V_empty_n,
        data_V_data_8_V_read,
        data_V_data_9_V_dout,
        data_V_data_9_V_empty_n,
        data_V_data_9_V_read,
        data_V_data_10_V_dout,
        data_V_data_10_V_empty_n,
        data_V_data_10_V_read,
        data_V_data_11_V_dout,
        data_V_data_11_V_empty_n,
        data_V_data_11_V_read,
        data_V_data_12_V_dout,
        data_V_data_12_V_empty_n,
        data_V_data_12_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write,
        res_V_data_8_V_din,
        res_V_data_8_V_full_n,
        res_V_data_8_V_write,
        res_V_data_9_V_din,
        res_V_data_9_V_full_n,
        res_V_data_9_V_write,
        res_V_data_10_V_din,
        res_V_data_10_V_full_n,
        res_V_data_10_V_write,
        res_V_data_11_V_din,
        res_V_data_11_V_full_n,
        res_V_data_11_V_write,
        res_V_data_12_V_din,
        res_V_data_12_V_full_n,
        res_V_data_12_V_write,
        data_V_data_0_V_blk_n,
        data_V_data_1_V_blk_n,
        data_V_data_2_V_blk_n,
        data_V_data_3_V_blk_n,
        data_V_data_4_V_blk_n,
        data_V_data_5_V_blk_n,
        data_V_data_6_V_blk_n,
        data_V_data_7_V_blk_n,
        data_V_data_8_V_blk_n,
        data_V_data_9_V_blk_n,
        data_V_data_10_V_blk_n,
        data_V_data_11_V_blk_n,
        data_V_data_12_V_blk_n,
        res_V_data_0_V_blk_n,
        res_V_data_1_V_blk_n,
        res_V_data_2_V_blk_n,
        res_V_data_3_V_blk_n,
        res_V_data_4_V_blk_n,
        res_V_data_5_V_blk_n,
        res_V_data_6_V_blk_n,
        res_V_data_7_V_blk_n,
        res_V_data_8_V_blk_n,
        res_V_data_9_V_blk_n,
        res_V_data_10_V_blk_n,
        res_V_data_11_V_blk_n,
        res_V_data_12_V_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 13'd1;
parameter    ap_ST_fsm_pp0_stage1 = 13'd2;
parameter    ap_ST_fsm_pp0_stage2 = 13'd4;
parameter    ap_ST_fsm_pp0_stage3 = 13'd8;
parameter    ap_ST_fsm_pp0_stage4 = 13'd16;
parameter    ap_ST_fsm_pp0_stage5 = 13'd32;
parameter    ap_ST_fsm_pp0_stage6 = 13'd64;
parameter    ap_ST_fsm_pp0_stage7 = 13'd128;
parameter    ap_ST_fsm_pp0_stage8 = 13'd256;
parameter    ap_ST_fsm_pp0_stage9 = 13'd512;
parameter    ap_ST_fsm_pp0_stage10 = 13'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 13'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
input  [15:0] data_V_data_8_V_dout;
input   data_V_data_8_V_empty_n;
output   data_V_data_8_V_read;
input  [15:0] data_V_data_9_V_dout;
input   data_V_data_9_V_empty_n;
output   data_V_data_9_V_read;
input  [15:0] data_V_data_10_V_dout;
input   data_V_data_10_V_empty_n;
output   data_V_data_10_V_read;
input  [15:0] data_V_data_11_V_dout;
input   data_V_data_11_V_empty_n;
output   data_V_data_11_V_read;
input  [15:0] data_V_data_12_V_dout;
input   data_V_data_12_V_empty_n;
output   data_V_data_12_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;
output  [15:0] res_V_data_8_V_din;
input   res_V_data_8_V_full_n;
output   res_V_data_8_V_write;
output  [15:0] res_V_data_9_V_din;
input   res_V_data_9_V_full_n;
output   res_V_data_9_V_write;
output  [15:0] res_V_data_10_V_din;
input   res_V_data_10_V_full_n;
output   res_V_data_10_V_write;
output  [15:0] res_V_data_11_V_din;
input   res_V_data_11_V_full_n;
output   res_V_data_11_V_write;
output  [15:0] res_V_data_12_V_din;
input   res_V_data_12_V_full_n;
output   res_V_data_12_V_write;
output   data_V_data_0_V_blk_n;
output   data_V_data_1_V_blk_n;
output   data_V_data_2_V_blk_n;
output   data_V_data_3_V_blk_n;
output   data_V_data_4_V_blk_n;
output   data_V_data_5_V_blk_n;
output   data_V_data_6_V_blk_n;
output   data_V_data_7_V_blk_n;
output   data_V_data_8_V_blk_n;
output   data_V_data_9_V_blk_n;
output   data_V_data_10_V_blk_n;
output   data_V_data_11_V_blk_n;
output   data_V_data_12_V_blk_n;
output   res_V_data_0_V_blk_n;
output   res_V_data_1_V_blk_n;
output   res_V_data_2_V_blk_n;
output   res_V_data_3_V_blk_n;
output   res_V_data_4_V_blk_n;
output   res_V_data_5_V_blk_n;
output   res_V_data_6_V_blk_n;
output   res_V_data_7_V_blk_n;
output   res_V_data_8_V_blk_n;
output   res_V_data_9_V_blk_n;
output   res_V_data_10_V_blk_n;
output   res_V_data_11_V_blk_n;
output   res_V_data_12_V_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg data_V_data_8_V_read;
reg data_V_data_9_V_read;
reg data_V_data_10_V_read;
reg data_V_data_11_V_read;
reg data_V_data_12_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;
reg res_V_data_8_V_write;
reg res_V_data_9_V_write;
reg res_V_data_10_V_write;
reg res_V_data_11_V_write;
reg res_V_data_12_V_write;
reg data_V_data_0_V_blk_n;
reg data_V_data_1_V_blk_n;
reg data_V_data_2_V_blk_n;
reg data_V_data_3_V_blk_n;
reg data_V_data_4_V_blk_n;
reg data_V_data_5_V_blk_n;
reg data_V_data_6_V_blk_n;
reg data_V_data_7_V_blk_n;
reg data_V_data_8_V_blk_n;
reg data_V_data_9_V_blk_n;
reg data_V_data_10_V_blk_n;
reg data_V_data_11_V_blk_n;
reg data_V_data_12_V_blk_n;
reg res_V_data_0_V_blk_n;
reg res_V_data_1_V_blk_n;
reg res_V_data_2_V_blk_n;
reg res_V_data_3_V_blk_n;
reg res_V_data_4_V_blk_n;
reg res_V_data_5_V_blk_n;
reg res_V_data_6_V_blk_n;
reg res_V_data_7_V_blk_n;
reg res_V_data_8_V_blk_n;
reg res_V_data_9_V_blk_n;
reg res_V_data_10_V_blk_n;
reg res_V_data_11_V_blk_n;
reg res_V_data_12_V_blk_n;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state26_pp0_stage12_iter1;
wire    ap_block_state39_pp0_stage12_iter2;
wire    ap_block_pp0_stage12_11001;
reg   [9:0] exp_table1_address0;
reg    exp_table1_ce0;
wire   [16:0] exp_table1_q0;
wire   [9:0] invert_table2_address0;
reg    invert_table2_ce0;
wire   [17:0] invert_table2_q0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    io_acc_block_signal_op58;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_state27_pp0_stage0_iter2;
wire    ap_block_state40_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg  signed [15:0] data_array_0_V_reg_2250;
reg  signed [15:0] data_array_1_V_reg_2257;
reg  signed [15:0] data_array_2_V_reg_2264;
reg  signed [15:0] data_array_3_V_reg_2271;
reg  signed [15:0] data_array_4_V_reg_2278;
reg  signed [15:0] data_array_5_V_reg_2285;
reg  signed [15:0] data_array_6_V_reg_2292;
reg  signed [15:0] data_array_7_V_reg_2299;
reg  signed [15:0] data_array_8_V_reg_2306;
reg  signed [15:0] data_array_9_V_reg_2313;
reg  signed [15:0] data_array_10_V_reg_2320;
reg  signed [15:0] data_array_11_V_reg_2327;
reg  signed [15:0] data_array_12_V_reg_2334;
wire   [0:0] icmp_ln1496_fu_527_p2;
reg   [0:0] icmp_ln1496_reg_2341;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state15_pp0_stage1_iter1;
wire    ap_block_state28_pp0_stage1_iter2;
wire    ap_block_state41_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln1496_1_fu_531_p2;
reg   [0:0] icmp_ln1496_1_reg_2346;
wire   [0:0] icmp_ln1496_3_fu_535_p2;
reg   [0:0] icmp_ln1496_3_reg_2351;
wire   [0:0] icmp_ln1496_4_fu_539_p2;
reg   [0:0] icmp_ln1496_4_reg_2356;
wire   [0:0] icmp_ln1496_7_fu_543_p2;
reg   [0:0] icmp_ln1496_7_reg_2361;
wire   [0:0] icmp_ln1496_8_fu_547_p2;
reg   [0:0] icmp_ln1496_8_reg_2366;
wire   [15:0] select_ln65_2_fu_567_p3;
reg   [15:0] select_ln65_2_reg_2371;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state16_pp0_stage2_iter1;
wire    ap_block_state29_pp0_stage2_iter2;
wire    ap_block_state42_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire   [15:0] select_ln65_5_fu_591_p3;
reg   [15:0] select_ln65_5_reg_2377;
wire   [15:0] select_ln65_9_fu_615_p3;
reg   [15:0] select_ln65_9_reg_2383;
wire   [15:0] select_ln65_6_fu_627_p3;
reg   [15:0] select_ln65_6_reg_2389;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state17_pp0_stage3_iter1;
wire    ap_block_state30_pp0_stage3_iter2;
wire    ap_block_state43_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire   [15:0] select_ln65_10_fu_637_p3;
reg   [15:0] select_ln65_10_reg_2395;
wire   [15:0] x_max_V_fu_647_p3;
reg   [15:0] x_max_V_reg_2401;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state18_pp0_stage4_iter1;
wire    ap_block_state31_pp0_stage4_iter2;
wire    io_acc_block_signal_op496;
reg    ap_block_state44_pp0_stage4_iter3;
reg    ap_block_pp0_stage4_11001;
wire   [9:0] y_V_fu_1397_p3;
reg   [9:0] y_V_reg_2406;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state19_pp0_stage5_iter1;
wire    ap_block_state32_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
wire   [9:0] y_V_1_fu_1431_p3;
reg   [9:0] y_V_1_reg_2411;
wire   [9:0] y_V_2_fu_1465_p3;
reg   [9:0] y_V_2_reg_2416;
wire   [9:0] y_V_3_fu_1499_p3;
reg   [9:0] y_V_3_reg_2421;
wire   [9:0] y_V_4_fu_1533_p3;
reg   [9:0] y_V_4_reg_2426;
wire   [9:0] y_V_5_fu_1567_p3;
reg   [9:0] y_V_5_reg_2431;
wire   [9:0] y_V_6_fu_1601_p3;
reg   [9:0] y_V_6_reg_2436;
wire   [9:0] y_V_7_fu_1635_p3;
reg   [9:0] y_V_7_reg_2441;
wire   [9:0] y_V_8_fu_1669_p3;
reg   [9:0] y_V_8_reg_2446;
wire   [9:0] y_V_9_fu_1703_p3;
reg   [9:0] y_V_9_reg_2451;
wire   [9:0] y_V_10_fu_1737_p3;
reg   [9:0] y_V_10_reg_2456;
wire   [9:0] y_V_11_fu_1771_p3;
reg   [9:0] y_V_11_reg_2461;
wire   [9:0] y_V_12_fu_1805_p3;
reg   [9:0] y_V_12_reg_2466;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state20_pp0_stage6_iter1;
wire    ap_block_state33_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
reg   [16:0] exp_res_0_V_1_reg_2476;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state21_pp0_stage7_iter1;
wire    ap_block_state34_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_11001;
reg   [16:0] exp_res_0_V_1_reg_2476_pp0_iter1_reg;
reg   [16:0] exp_res_1_V_1_reg_2487;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state22_pp0_stage8_iter1;
wire    ap_block_state35_pp0_stage8_iter2;
wire    ap_block_pp0_stage8_11001;
reg   [16:0] exp_res_1_V_1_reg_2487_pp0_iter1_reg;
reg   [16:0] exp_res_2_V_1_reg_2498;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state23_pp0_stage9_iter1;
wire    ap_block_state36_pp0_stage9_iter2;
wire    ap_block_pp0_stage9_11001;
reg   [16:0] exp_res_2_V_1_reg_2498_pp0_iter1_reg;
reg   [16:0] exp_res_3_V_1_reg_2509;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state24_pp0_stage10_iter1;
wire    ap_block_state37_pp0_stage10_iter2;
wire    ap_block_pp0_stage10_11001;
reg   [16:0] exp_res_3_V_1_reg_2509_pp0_iter1_reg;
reg   [16:0] exp_res_4_V_1_reg_2520;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state25_pp0_stage11_iter1;
wire    ap_block_state38_pp0_stage11_iter2;
wire    ap_block_pp0_stage11_11001;
reg   [16:0] exp_res_4_V_1_reg_2520_pp0_iter1_reg;
reg   [16:0] exp_res_5_V_1_reg_2531;
reg   [16:0] exp_res_5_V_1_reg_2531_pp0_iter1_reg;
reg   [16:0] exp_res_6_V_1_reg_2541;
reg   [16:0] exp_res_6_V_1_reg_2541_pp0_iter2_reg;
reg   [16:0] exp_res_7_V_1_reg_2551;
reg   [16:0] exp_res_7_V_1_reg_2551_pp0_iter2_reg;
reg   [16:0] exp_res_8_V_1_reg_2561;
reg   [16:0] exp_res_8_V_1_reg_2561_pp0_iter2_reg;
reg   [16:0] exp_res_9_V_1_reg_2571;
reg   [16:0] exp_res_9_V_1_reg_2571_pp0_iter2_reg;
reg   [16:0] exp_res_10_V_1_reg_2581;
reg   [16:0] exp_res_10_V_1_reg_2581_pp0_iter2_reg;
reg   [16:0] exp_res_11_V_1_reg_2591;
reg   [16:0] exp_res_11_V_1_reg_2591_pp0_iter2_reg;
reg   [16:0] exp_res_12_V_1_reg_2601;
reg   [16:0] exp_res_12_V_1_reg_2601_pp0_iter2_reg;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_return;
reg  signed [17:0] p_Val2_19_reg_2606;
reg  signed [17:0] p_Val2_1_reg_2612;
wire  signed [17:0] p_Val2_23_fu_2003_p3;
reg  signed [17:0] p_Val2_23_reg_2618;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_return;
reg  signed [17:0] p_Val2_24_reg_2624;
wire   [9:0] y_V_13_fu_2099_p3;
reg   [9:0] y_V_13_reg_2630;
reg   [17:0] inv_exp_sum_V_reg_2640;
wire  signed [25:0] sext_ln241_fu_2111_p1;
reg  signed [25:0] sext_ln241_reg_2645;
wire   [25:0] zext_ln1118_fu_2115_p1;
reg   [15:0] tmp_data_0_V_reg_2655;
wire   [25:0] zext_ln1118_1_fu_2119_p1;
reg   [15:0] tmp_data_1_V_reg_2665;
wire   [25:0] zext_ln1118_2_fu_2123_p1;
reg   [15:0] tmp_data_2_V_reg_2675;
wire   [25:0] zext_ln1118_3_fu_2127_p1;
reg   [15:0] tmp_data_3_V_reg_2685;
wire   [25:0] zext_ln1118_4_fu_2131_p1;
reg   [15:0] tmp_data_4_V_reg_2695;
wire   [25:0] zext_ln1118_5_fu_2135_p1;
reg   [15:0] tmp_data_5_V_reg_2705;
wire   [25:0] zext_ln1118_6_fu_2139_p1;
reg   [15:0] tmp_data_6_V_reg_2715;
wire   [25:0] zext_ln1118_7_fu_2143_p1;
reg   [15:0] tmp_data_7_V_reg_2725;
wire   [25:0] zext_ln1118_8_fu_2147_p1;
reg   [15:0] tmp_data_8_V_reg_2735;
wire   [25:0] zext_ln1118_9_fu_2151_p1;
reg   [15:0] tmp_data_9_V_reg_2745;
wire   [25:0] zext_ln1118_10_fu_2155_p1;
reg   [15:0] tmp_data_10_V_reg_2755;
wire   [25:0] zext_ln1118_11_fu_2159_p1;
reg   [15:0] tmp_data_11_V_reg_2765;
wire   [25:0] zext_ln1118_12_fu_2163_p1;
reg   [15:0] tmp_data_12_V_reg_2775;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage4_subdone;
reg   [4:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_x_V_offset;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_ce;
wire    ap_block_state8_pp0_stage7_iter0_ignore_call302;
wire    ap_block_state21_pp0_stage7_iter1_ignore_call302;
wire    ap_block_state34_pp0_stage7_iter2_ignore_call302;
wire    ap_block_pp0_stage7_11001_ignoreCallOp331;
wire    ap_block_state9_pp0_stage8_iter0_ignore_call302;
wire    ap_block_state22_pp0_stage8_iter1_ignore_call302;
wire    ap_block_state35_pp0_stage8_iter2_ignore_call302;
wire    ap_block_pp0_stage8_11001_ignoreCallOp332;
wire    ap_block_state10_pp0_stage9_iter0_ignore_call302;
wire    ap_block_state23_pp0_stage9_iter1_ignore_call302;
wire    ap_block_state36_pp0_stage9_iter2_ignore_call302;
wire    ap_block_pp0_stage9_11001_ignoreCallOp334;
wire    ap_block_state11_pp0_stage10_iter0_ignore_call302;
wire    ap_block_state24_pp0_stage10_iter1_ignore_call302;
wire    ap_block_state37_pp0_stage10_iter2_ignore_call302;
wire    ap_block_pp0_stage10_11001_ignoreCallOp336;
wire    ap_block_state12_pp0_stage11_iter0_ignore_call303;
wire    ap_block_state25_pp0_stage11_iter1_ignore_call303;
wire    ap_block_state38_pp0_stage11_iter2_ignore_call303;
wire    ap_block_pp0_stage11_11001_ignoreCallOp339;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_done;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_idle;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ready;
reg    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ce;
wire    ap_block_state11_pp0_stage10_iter0_ignore_call318;
wire    ap_block_state24_pp0_stage10_iter1_ignore_call318;
wire    ap_block_state37_pp0_stage10_iter2_ignore_call318;
wire    ap_block_pp0_stage10_11001_ignoreCallOp338;
wire    ap_block_state12_pp0_stage11_iter0_ignore_call318;
wire    ap_block_state25_pp0_stage11_iter1_ignore_call318;
wire    ap_block_state38_pp0_stage11_iter2_ignore_call318;
wire    ap_block_pp0_stage11_11001_ignoreCallOp340;
wire    ap_block_state13_pp0_stage12_iter0_ignore_call318;
wire    ap_block_state26_pp0_stage12_iter1_ignore_call318;
wire    ap_block_state39_pp0_stage12_iter2_ignore_call318;
wire    ap_block_pp0_stage12_11001_ignoreCallOp355;
reg   [16:0] exp_res_0_V_fu_142;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
reg   [16:0] exp_res_1_V_fu_146;
reg   [16:0] exp_res_2_V_fu_150;
reg   [16:0] exp_res_3_V_fu_154;
reg   [16:0] exp_res_4_V_fu_158;
reg   [16:0] exp_res_5_V_fu_162;
reg   [16:0] exp_res_6_V_fu_166;
reg   [16:0] exp_res_7_V_fu_170;
reg   [16:0] exp_res_8_V_fu_174;
reg   [16:0] exp_res_9_V_fu_178;
reg   [16:0] exp_res_10_V_fu_182;
reg   [16:0] exp_res_11_V_fu_186;
reg   [16:0] exp_res_12_V_fu_190;
reg    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start_reg;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln225_fu_1813_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln225_1_fu_1817_p1;
wire   [63:0] zext_ln225_2_fu_1821_p1;
wire   [63:0] zext_ln225_3_fu_1825_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln225_4_fu_1829_p1;
wire   [63:0] zext_ln225_5_fu_1833_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln225_6_fu_1862_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln225_7_fu_1871_p1;
wire   [63:0] zext_ln225_8_fu_1880_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln225_9_fu_1889_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln225_10_fu_1898_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln225_11_fu_1907_p1;
wire   [63:0] zext_ln225_12_fu_1916_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln235_fu_2107_p1;
reg    ap_block_pp0_stage4_01001;
reg   [16:0] grp_fu_389_p0;
reg  signed [17:0] grp_fu_389_p1;
wire   [25:0] grp_fu_389_p2;
wire   [15:0] select_ln65_fu_551_p3;
wire   [15:0] select_ln65_1_fu_556_p3;
wire   [0:0] icmp_ln1496_2_fu_561_p2;
wire   [15:0] select_ln65_3_fu_575_p3;
wire   [15:0] select_ln65_4_fu_580_p3;
wire   [0:0] icmp_ln1496_5_fu_585_p2;
wire   [15:0] select_ln65_7_fu_599_p3;
wire   [15:0] select_ln65_8_fu_604_p3;
wire   [0:0] icmp_ln1496_9_fu_609_p2;
wire   [0:0] icmp_ln1496_6_fu_623_p2;
wire   [0:0] icmp_ln1496_10_fu_633_p2;
wire   [0:0] icmp_ln1496_11_fu_643_p2;
wire  signed [16:0] sext_ln703_fu_653_p1;
wire  signed [16:0] sext_ln703_1_fu_656_p1;
wire   [16:0] sub_ln1193_fu_659_p2;
wire   [0:0] tmp_28_fu_673_p3;
wire   [0:0] tmp_27_fu_665_p3;
wire   [0:0] xor_ln786_fu_681_p2;
wire   [0:0] xor_ln340_fu_699_p2;
wire  signed [16:0] sext_ln703_2_fu_711_p1;
wire   [16:0] sub_ln1193_1_fu_714_p2;
wire   [0:0] tmp_30_fu_728_p3;
wire   [0:0] tmp_29_fu_720_p3;
wire   [0:0] xor_ln786_1_fu_736_p2;
wire   [0:0] xor_ln340_1_fu_754_p2;
wire  signed [16:0] sext_ln703_3_fu_766_p1;
wire   [16:0] sub_ln1193_2_fu_769_p2;
wire   [0:0] tmp_32_fu_783_p3;
wire   [0:0] tmp_31_fu_775_p3;
wire   [0:0] xor_ln786_2_fu_791_p2;
wire   [0:0] xor_ln340_2_fu_809_p2;
wire  signed [16:0] sext_ln703_4_fu_821_p1;
wire   [16:0] sub_ln1193_3_fu_824_p2;
wire   [0:0] tmp_34_fu_838_p3;
wire   [0:0] tmp_33_fu_830_p3;
wire   [0:0] xor_ln786_3_fu_846_p2;
wire   [0:0] xor_ln340_3_fu_864_p2;
wire  signed [16:0] sext_ln703_5_fu_876_p1;
wire   [16:0] sub_ln1193_4_fu_879_p2;
wire   [0:0] tmp_36_fu_893_p3;
wire   [0:0] tmp_35_fu_885_p3;
wire   [0:0] xor_ln786_4_fu_901_p2;
wire   [0:0] xor_ln340_4_fu_919_p2;
wire  signed [16:0] sext_ln703_6_fu_931_p1;
wire   [16:0] sub_ln1193_5_fu_934_p2;
wire   [0:0] tmp_38_fu_948_p3;
wire   [0:0] tmp_37_fu_940_p3;
wire   [0:0] xor_ln786_5_fu_956_p2;
wire   [0:0] xor_ln340_5_fu_974_p2;
wire  signed [16:0] sext_ln703_7_fu_986_p1;
wire   [16:0] sub_ln1193_6_fu_989_p2;
wire   [0:0] tmp_40_fu_1003_p3;
wire   [0:0] tmp_39_fu_995_p3;
wire   [0:0] xor_ln786_6_fu_1011_p2;
wire   [0:0] xor_ln340_6_fu_1029_p2;
wire  signed [16:0] sext_ln703_8_fu_1041_p1;
wire   [16:0] sub_ln1193_7_fu_1044_p2;
wire   [0:0] tmp_42_fu_1058_p3;
wire   [0:0] tmp_41_fu_1050_p3;
wire   [0:0] xor_ln786_7_fu_1066_p2;
wire   [0:0] xor_ln340_7_fu_1084_p2;
wire  signed [16:0] sext_ln703_9_fu_1096_p1;
wire   [16:0] sub_ln1193_8_fu_1099_p2;
wire   [0:0] tmp_44_fu_1113_p3;
wire   [0:0] tmp_43_fu_1105_p3;
wire   [0:0] xor_ln786_8_fu_1121_p2;
wire   [0:0] xor_ln340_8_fu_1139_p2;
wire  signed [16:0] sext_ln703_10_fu_1151_p1;
wire   [16:0] sub_ln1193_9_fu_1154_p2;
wire   [0:0] tmp_46_fu_1168_p3;
wire   [0:0] tmp_45_fu_1160_p3;
wire   [0:0] xor_ln786_9_fu_1176_p2;
wire   [0:0] xor_ln340_9_fu_1194_p2;
wire  signed [16:0] sext_ln703_11_fu_1206_p1;
wire   [16:0] sub_ln1193_10_fu_1209_p2;
wire   [0:0] tmp_48_fu_1223_p3;
wire   [0:0] tmp_47_fu_1215_p3;
wire   [0:0] xor_ln786_10_fu_1231_p2;
wire   [0:0] xor_ln340_10_fu_1249_p2;
wire  signed [16:0] sext_ln703_12_fu_1261_p1;
wire   [16:0] sub_ln1193_11_fu_1264_p2;
wire   [0:0] tmp_50_fu_1278_p3;
wire   [0:0] tmp_49_fu_1270_p3;
wire   [0:0] xor_ln786_11_fu_1286_p2;
wire   [0:0] xor_ln340_11_fu_1304_p2;
wire  signed [16:0] sext_ln703_13_fu_1316_p1;
wire   [16:0] sub_ln1193_12_fu_1319_p2;
wire   [0:0] tmp_52_fu_1333_p3;
wire   [0:0] tmp_51_fu_1325_p3;
wire   [0:0] xor_ln786_12_fu_1341_p2;
wire   [0:0] xor_ln340_12_fu_1359_p2;
wire   [0:0] xor_ln340_13_fu_693_p2;
wire   [9:0] tmp_fu_1371_p4;
wire   [0:0] and_ln786_fu_687_p2;
wire   [0:0] or_ln340_fu_705_p2;
wire   [9:0] select_ln340_fu_1381_p3;
wire   [9:0] select_ln388_fu_1389_p3;
wire   [0:0] xor_ln340_14_fu_748_p2;
wire   [9:0] tmp_14_fu_1405_p4;
wire   [0:0] and_ln786_1_fu_742_p2;
wire   [0:0] or_ln340_1_fu_760_p2;
wire   [9:0] select_ln340_2_fu_1415_p3;
wire   [9:0] select_ln388_1_fu_1423_p3;
wire   [0:0] xor_ln340_15_fu_803_p2;
wire   [9:0] tmp_15_fu_1439_p4;
wire   [0:0] and_ln786_2_fu_797_p2;
wire   [0:0] or_ln340_2_fu_815_p2;
wire   [9:0] select_ln340_4_fu_1449_p3;
wire   [9:0] select_ln388_2_fu_1457_p3;
wire   [0:0] xor_ln340_16_fu_858_p2;
wire   [9:0] tmp_16_fu_1473_p4;
wire   [0:0] and_ln786_3_fu_852_p2;
wire   [0:0] or_ln340_3_fu_870_p2;
wire   [9:0] select_ln340_6_fu_1483_p3;
wire   [9:0] select_ln388_3_fu_1491_p3;
wire   [0:0] xor_ln340_17_fu_913_p2;
wire   [9:0] tmp_17_fu_1507_p4;
wire   [0:0] and_ln786_4_fu_907_p2;
wire   [0:0] or_ln340_4_fu_925_p2;
wire   [9:0] select_ln340_8_fu_1517_p3;
wire   [9:0] select_ln388_4_fu_1525_p3;
wire   [0:0] xor_ln340_18_fu_968_p2;
wire   [9:0] tmp_18_fu_1541_p4;
wire   [0:0] and_ln786_5_fu_962_p2;
wire   [0:0] or_ln340_5_fu_980_p2;
wire   [9:0] select_ln340_10_fu_1551_p3;
wire   [9:0] select_ln388_5_fu_1559_p3;
wire   [0:0] xor_ln340_19_fu_1023_p2;
wire   [9:0] tmp_19_fu_1575_p4;
wire   [0:0] and_ln786_6_fu_1017_p2;
wire   [0:0] or_ln340_6_fu_1035_p2;
wire   [9:0] select_ln340_12_fu_1585_p3;
wire   [9:0] select_ln388_6_fu_1593_p3;
wire   [0:0] xor_ln340_20_fu_1078_p2;
wire   [9:0] tmp_20_fu_1609_p4;
wire   [0:0] and_ln786_7_fu_1072_p2;
wire   [0:0] or_ln340_7_fu_1090_p2;
wire   [9:0] select_ln340_14_fu_1619_p3;
wire   [9:0] select_ln388_7_fu_1627_p3;
wire   [0:0] xor_ln340_21_fu_1133_p2;
wire   [9:0] tmp_21_fu_1643_p4;
wire   [0:0] and_ln786_8_fu_1127_p2;
wire   [0:0] or_ln340_8_fu_1145_p2;
wire   [9:0] select_ln340_16_fu_1653_p3;
wire   [9:0] select_ln388_8_fu_1661_p3;
wire   [0:0] xor_ln340_22_fu_1188_p2;
wire   [9:0] tmp_22_fu_1677_p4;
wire   [0:0] and_ln786_9_fu_1182_p2;
wire   [0:0] or_ln340_9_fu_1200_p2;
wire   [9:0] select_ln340_18_fu_1687_p3;
wire   [9:0] select_ln388_9_fu_1695_p3;
wire   [0:0] xor_ln340_23_fu_1243_p2;
wire   [9:0] tmp_23_fu_1711_p4;
wire   [0:0] and_ln786_10_fu_1237_p2;
wire   [0:0] or_ln340_10_fu_1255_p2;
wire   [9:0] select_ln340_20_fu_1721_p3;
wire   [9:0] select_ln388_10_fu_1729_p3;
wire   [0:0] xor_ln340_24_fu_1298_p2;
wire   [9:0] tmp_24_fu_1745_p4;
wire   [0:0] and_ln786_11_fu_1292_p2;
wire   [0:0] or_ln340_11_fu_1310_p2;
wire   [9:0] select_ln340_22_fu_1755_p3;
wire   [9:0] select_ln388_11_fu_1763_p3;
wire   [0:0] xor_ln340_25_fu_1353_p2;
wire   [9:0] tmp_25_fu_1779_p4;
wire   [0:0] and_ln786_12_fu_1347_p2;
wire   [0:0] or_ln340_12_fu_1365_p2;
wire   [9:0] select_ln340_24_fu_1789_p3;
wire   [9:0] select_ln388_12_fu_1797_p3;
wire  signed [18:0] lhs_V_fu_1925_p1;
wire  signed [18:0] rhs_V_fu_1928_p1;
wire   [18:0] ret_V_fu_1931_p2;
wire   [17:0] p_Val2_22_fu_1945_p2;
wire   [0:0] p_Result_20_fu_1949_p3;
wire   [0:0] p_Result_s_fu_1937_p3;
wire   [0:0] xor_ln786_13_fu_1957_p2;
wire   [0:0] xor_ln340_27_fu_1975_p2;
wire   [0:0] xor_ln340_26_fu_1969_p2;
wire   [0:0] underflow_fu_1963_p2;
wire   [0:0] or_ln340_13_fu_1981_p2;
wire   [17:0] select_ln340_26_fu_1987_p3;
wire   [17:0] select_ln388_13_fu_1995_p3;
wire  signed [18:0] lhs_V_1_fu_2011_p1;
wire  signed [18:0] rhs_V_1_fu_2014_p1;
wire   [18:0] ret_V_1_fu_2017_p2;
wire   [17:0] p_Val2_26_fu_2031_p2;
wire   [0:0] p_Result_22_fu_2035_p3;
wire   [0:0] p_Result_21_fu_2023_p3;
wire   [0:0] xor_ln786_14_fu_2043_p2;
wire   [0:0] xor_ln340_29_fu_2061_p2;
wire   [0:0] xor_ln340_28_fu_2055_p2;
wire   [9:0] tmp_26_fu_2073_p4;
wire   [0:0] underflow_1_fu_2049_p2;
wire   [0:0] or_ln340_14_fu_2067_p2;
wire   [9:0] select_ln340_28_fu_2083_p3;
wire   [9:0] select_ln388_14_fu_2091_p3;
reg    grp_fu_389_ce;
reg   [12:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start_reg = 1'b0;
end

softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s_exp_tabxdS #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table1_address0),
    .ce0(exp_table1_ce0),
    .q0(exp_table1_q0)
);

softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s_invert_yd2 #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table2_address0),
    .ce0(invert_table2_ce0),
    .q0(invert_table2_q0)
);

reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V(exp_res_0_V_fu_142),
    .x_1_V(exp_res_1_V_fu_146),
    .x_2_V(exp_res_2_V_fu_150),
    .x_3_V(exp_res_3_V_fu_154),
    .x_4_V(exp_res_4_V_fu_158),
    .x_5_V(exp_res_5_V_fu_162),
    .x_6_V(exp_res_6_V_fu_166),
    .x_7_V(exp_res_7_V_fu_170),
    .x_8_V(exp_res_8_V_fu_174),
    .x_9_V(exp_res_9_V_fu_178),
    .x_10_V(exp_res_10_V_fu_182),
    .x_11_V(exp_res_11_V_fu_186),
    .x_12_V(exp_res_12_V_fu_190),
    .x_V_offset(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_x_V_offset),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_ce)
);

reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start),
    .ap_done(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_done),
    .ap_idle(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_idle),
    .ap_ready(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ready),
    .x_8_V(exp_res_8_V_fu_174),
    .x_9_V(exp_res_9_V_fu_178),
    .x_10_V(exp_res_10_V_fu_182),
    .x_11_V(exp_res_11_V_fu_186),
    .x_12_V(exp_res_12_V_fu_190),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ce)
);

myproject_axi_mul_17ns_18s_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
myproject_axi_mul_17ns_18s_26_2_1_U1051(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_389_p0),
    .din1(grp_fu_389_p1),
    .ce(grp_fu_389_ce),
    .dout(grp_fu_389_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ready == 1'b1)) begin
            grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_array_0_V_reg_2250 <= data_V_data_0_V_dout;
        data_array_10_V_reg_2320 <= data_V_data_10_V_dout;
        data_array_11_V_reg_2327 <= data_V_data_11_V_dout;
        data_array_12_V_reg_2334 <= data_V_data_12_V_dout;
        data_array_1_V_reg_2257 <= data_V_data_1_V_dout;
        data_array_2_V_reg_2264 <= data_V_data_2_V_dout;
        data_array_3_V_reg_2271 <= data_V_data_3_V_dout;
        data_array_4_V_reg_2278 <= data_V_data_4_V_dout;
        data_array_5_V_reg_2285 <= data_V_data_5_V_dout;
        data_array_6_V_reg_2292 <= data_V_data_6_V_dout;
        data_array_7_V_reg_2299 <= data_V_data_7_V_dout;
        data_array_8_V_reg_2306 <= data_V_data_8_V_dout;
        data_array_9_V_reg_2313 <= data_V_data_9_V_dout;
        exp_res_6_V_1_reg_2541_pp0_iter2_reg <= exp_res_6_V_1_reg_2541;
        y_V_13_reg_2630 <= y_V_13_fu_2099_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_0_V_1_reg_2476 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        exp_res_0_V_1_reg_2476_pp0_iter1_reg <= exp_res_0_V_1_reg_2476;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_0_V_fu_142 <= exp_res_0_V_1_reg_2476;
        exp_res_1_V_fu_146 <= exp_res_1_V_1_reg_2487;
        exp_res_2_V_fu_150 <= exp_res_2_V_1_reg_2498;
        exp_res_3_V_fu_154 <= exp_res_3_V_1_reg_2509;
        exp_res_4_V_fu_158 <= exp_res_4_V_1_reg_2520;
        exp_res_5_V_1_reg_2531 <= exp_table1_q0;
        exp_res_5_V_fu_162 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_10_V_1_reg_2581 <= exp_table1_q0;
        exp_res_10_V_fu_182 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_10_V_1_reg_2581_pp0_iter2_reg <= exp_res_10_V_1_reg_2581;
        x_max_V_reg_2401 <= x_max_V_fu_647_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_res_11_V_1_reg_2591 <= exp_table1_q0;
        exp_res_11_V_fu_186 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_res_11_V_1_reg_2591_pp0_iter2_reg <= exp_res_11_V_1_reg_2591;
        y_V_10_reg_2456 <= y_V_10_fu_1737_p3;
        y_V_11_reg_2461 <= y_V_11_fu_1771_p3;
        y_V_12_reg_2466 <= y_V_12_fu_1805_p3;
        y_V_1_reg_2411 <= y_V_1_fu_1431_p3;
        y_V_2_reg_2416 <= y_V_2_fu_1465_p3;
        y_V_3_reg_2421 <= y_V_3_fu_1499_p3;
        y_V_4_reg_2426 <= y_V_4_fu_1533_p3;
        y_V_5_reg_2431 <= y_V_5_fu_1567_p3;
        y_V_6_reg_2436 <= y_V_6_fu_1601_p3;
        y_V_7_reg_2441 <= y_V_7_fu_1635_p3;
        y_V_8_reg_2446 <= y_V_8_fu_1669_p3;
        y_V_9_reg_2451 <= y_V_9_fu_1703_p3;
        y_V_reg_2406 <= y_V_fu_1397_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        exp_res_12_V_1_reg_2601 <= exp_table1_q0;
        exp_res_12_V_fu_190 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        exp_res_12_V_1_reg_2601_pp0_iter2_reg <= exp_res_12_V_1_reg_2601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_1_V_1_reg_2487 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        exp_res_1_V_1_reg_2487_pp0_iter1_reg <= exp_res_1_V_1_reg_2487;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_2_V_1_reg_2498 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        exp_res_2_V_1_reg_2498_pp0_iter1_reg <= exp_res_2_V_1_reg_2498;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_3_V_1_reg_2509 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        exp_res_3_V_1_reg_2509_pp0_iter1_reg <= exp_res_3_V_1_reg_2509;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_4_V_1_reg_2520 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        exp_res_4_V_1_reg_2520_pp0_iter1_reg <= exp_res_4_V_1_reg_2520;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        exp_res_5_V_1_reg_2531_pp0_iter1_reg <= exp_res_5_V_1_reg_2531;
        p_Val2_23_reg_2618 <= p_Val2_23_fu_2003_p3;
        p_Val2_24_reg_2624 <= grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_6_V_1_reg_2541 <= exp_table1_q0;
        exp_res_6_V_fu_166 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_7_V_1_reg_2551 <= exp_table1_q0;
        exp_res_7_V_fu_170 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_7_V_1_reg_2551_pp0_iter2_reg <= exp_res_7_V_1_reg_2551;
        icmp_ln1496_1_reg_2346 <= icmp_ln1496_1_fu_531_p2;
        icmp_ln1496_3_reg_2351 <= icmp_ln1496_3_fu_535_p2;
        icmp_ln1496_4_reg_2356 <= icmp_ln1496_4_fu_539_p2;
        icmp_ln1496_7_reg_2361 <= icmp_ln1496_7_fu_543_p2;
        icmp_ln1496_8_reg_2366 <= icmp_ln1496_8_fu_547_p2;
        icmp_ln1496_reg_2341 <= icmp_ln1496_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_8_V_1_reg_2561 <= exp_table1_q0;
        exp_res_8_V_fu_174 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_8_V_1_reg_2561_pp0_iter2_reg <= exp_res_8_V_1_reg_2561;
        inv_exp_sum_V_reg_2640 <= invert_table2_q0;
        select_ln65_2_reg_2371 <= select_ln65_2_fu_567_p3;
        select_ln65_5_reg_2377 <= select_ln65_5_fu_591_p3;
        select_ln65_9_reg_2383 <= select_ln65_9_fu_615_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_9_V_1_reg_2571 <= exp_table1_q0;
        exp_res_9_V_fu_178 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_9_V_1_reg_2571_pp0_iter2_reg <= exp_res_9_V_1_reg_2571;
        select_ln65_10_reg_2395 <= select_ln65_10_fu_637_p3;
        select_ln65_6_reg_2389 <= select_ln65_6_fu_627_p3;
        sext_ln241_reg_2645 <= sext_ln241_fu_2111_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_Val2_19_reg_2606 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_Val2_1_reg_2612 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_data_0_V_reg_2655 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_data_10_V_reg_2755 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_data_11_V_reg_2765 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_data_12_V_reg_2775 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_data_1_V_reg_2665 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_data_2_V_reg_2675 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_data_3_V_reg_2685 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_data_4_V_reg_2695 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_data_5_V_reg_2705 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_data_6_V_reg_2715 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_data_7_V_reg_2725 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_data_8_V_reg_2735 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_9_V_reg_2745 <= {{grp_fu_389_p2[25:10]}};
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_10_V_blk_n = data_V_data_10_V_empty_n;
    end else begin
        data_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_10_V_read = 1'b1;
    end else begin
        data_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_11_V_blk_n = data_V_data_11_V_empty_n;
    end else begin
        data_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_11_V_read = 1'b1;
    end else begin
        data_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_12_V_blk_n = data_V_data_12_V_empty_n;
    end else begin
        data_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_12_V_read = 1'b1;
    end else begin
        data_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n;
    end else begin
        data_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_8_V_read = 1'b1;
    end else begin
        data_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n;
    end else begin
        data_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_9_V_read = 1'b1;
    end else begin
        data_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_table1_address0 = zext_ln225_12_fu_1916_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_table1_address0 = zext_ln225_11_fu_1907_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_table1_address0 = zext_ln225_10_fu_1898_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_table1_address0 = zext_ln225_9_fu_1889_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_table1_address0 = zext_ln225_8_fu_1880_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_address0 = zext_ln225_7_fu_1871_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_6_fu_1862_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_5_fu_1833_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_4_fu_1829_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_3_fu_1825_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_2_fu_1821_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_1_fu_1817_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_fu_1813_p1;
    end else begin
        exp_table1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        exp_table1_ce0 = 1'b1;
    end else begin
        exp_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_389_ce = 1'b1;
    end else begin
        grp_fu_389_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_389_p0 = zext_ln1118_12_fu_2163_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_389_p0 = zext_ln1118_11_fu_2159_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_389_p0 = zext_ln1118_10_fu_2155_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_389_p0 = zext_ln1118_9_fu_2151_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_389_p0 = zext_ln1118_8_fu_2147_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_389_p0 = zext_ln1118_7_fu_2143_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_389_p0 = zext_ln1118_6_fu_2139_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_389_p0 = zext_ln1118_5_fu_2135_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_389_p0 = zext_ln1118_4_fu_2131_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_389_p0 = zext_ln1118_3_fu_2127_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_389_p0 = zext_ln1118_2_fu_2123_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_389_p0 = zext_ln1118_1_fu_2119_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_389_p0 = zext_ln1118_fu_2115_p1;
    end else begin
        grp_fu_389_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_389_p1 = sext_ln241_reg_2645;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_389_p1 = sext_ln241_fu_2111_p1;
    end else begin
        grp_fu_389_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp339) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp336) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp334) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp332) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp331) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_x_V_offset = 5'd4;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_x_V_offset = 5'd0;
        end else begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_x_V_offset = 'bx;
        end
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_436_x_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp355) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp340) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp338) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        invert_table2_ce0 = 1'b1;
    end else begin
        invert_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_10_V_blk_n = res_V_data_10_V_full_n;
    end else begin
        res_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_10_V_write = 1'b1;
    end else begin
        res_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_11_V_blk_n = res_V_data_11_V_full_n;
    end else begin
        res_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_11_V_write = 1'b1;
    end else begin
        res_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_12_V_blk_n = res_V_data_12_V_full_n;
    end else begin
        res_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_12_V_write = 1'b1;
    end else begin
        res_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_8_V_blk_n = res_V_data_8_V_full_n;
    end else begin
        res_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_8_V_write = 1'b1;
    end else begin
        res_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_9_V_blk_n = res_V_data_9_V_full_n;
    end else begin
        res_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_data_9_V_write = 1'b1;
    end else begin
        res_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln786_10_fu_1237_p2 = (xor_ln786_10_fu_1231_p2 & tmp_47_fu_1215_p3);

assign and_ln786_11_fu_1292_p2 = (xor_ln786_11_fu_1286_p2 & tmp_49_fu_1270_p3);

assign and_ln786_12_fu_1347_p2 = (xor_ln786_12_fu_1341_p2 & tmp_51_fu_1325_p3);

assign and_ln786_1_fu_742_p2 = (xor_ln786_1_fu_736_p2 & tmp_29_fu_720_p3);

assign and_ln786_2_fu_797_p2 = (xor_ln786_2_fu_791_p2 & tmp_31_fu_775_p3);

assign and_ln786_3_fu_852_p2 = (xor_ln786_3_fu_846_p2 & tmp_33_fu_830_p3);

assign and_ln786_4_fu_907_p2 = (xor_ln786_4_fu_901_p2 & tmp_35_fu_885_p3);

assign and_ln786_5_fu_962_p2 = (xor_ln786_5_fu_956_p2 & tmp_37_fu_940_p3);

assign and_ln786_6_fu_1017_p2 = (xor_ln786_6_fu_1011_p2 & tmp_39_fu_995_p3);

assign and_ln786_7_fu_1072_p2 = (xor_ln786_7_fu_1066_p2 & tmp_41_fu_1050_p3);

assign and_ln786_8_fu_1127_p2 = (xor_ln786_8_fu_1121_p2 & tmp_43_fu_1105_p3);

assign and_ln786_9_fu_1182_p2 = (xor_ln786_9_fu_1176_p2 & tmp_45_fu_1160_p3);

assign and_ln786_fu_687_p2 = (xor_ln786_fu_681_p2 & tmp_27_fu_665_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op58 == 1'b0) | (ap_start == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op58 == 1'b0) | (ap_start == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_ignoreCallOp336 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_ignoreCallOp338 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001_ignoreCallOp339 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001_ignoreCallOp340 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001_ignoreCallOp355 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((io_acc_block_signal_op496 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((io_acc_block_signal_op496 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((io_acc_block_signal_op496 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp331 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001_ignoreCallOp332 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001_ignoreCallOp334 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0_ignore_call303 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((io_acc_block_signal_op58 == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state20_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage7_iter1_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage8_iter1_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage9_iter1_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage10_iter1_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage10_iter1_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage11_iter1_ignore_call303 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage11_iter1_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage12_iter1_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage7_iter2_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage8_iter2_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage9_iter2_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage10_iter2_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage10_iter2_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage11_iter2_ignore_call303 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage11_iter2_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage12_iter2_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp0_stage4_iter3 = (io_acc_block_signal_op496 == 1'b0);
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start = grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_456_ap_start_reg;

assign icmp_ln1496_10_fu_633_p2 = (($signed(select_ln65_9_reg_2383) < $signed(data_array_12_V_reg_2334)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_643_p2 = (($signed(select_ln65_6_reg_2389) < $signed(select_ln65_10_reg_2395)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_531_p2 = (($signed(data_array_2_V_reg_2264) < $signed(data_array_3_V_reg_2271)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_561_p2 = (($signed(select_ln65_fu_551_p3) < $signed(select_ln65_1_fu_556_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_535_p2 = (($signed(data_array_4_V_reg_2278) < $signed(data_array_5_V_reg_2285)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_539_p2 = (($signed(data_array_6_V_reg_2292) < $signed(data_array_7_V_reg_2299)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_585_p2 = (($signed(select_ln65_3_fu_575_p3) < $signed(select_ln65_4_fu_580_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_623_p2 = (($signed(select_ln65_2_reg_2371) < $signed(select_ln65_5_reg_2377)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_543_p2 = (($signed(data_array_8_V_reg_2306) < $signed(data_array_9_V_reg_2313)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_547_p2 = (($signed(data_array_10_V_reg_2320) < $signed(data_array_11_V_reg_2327)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_609_p2 = (($signed(select_ln65_7_fu_599_p3) < $signed(select_ln65_8_fu_604_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_527_p2 = (($signed(data_array_0_V_reg_2250) < $signed(data_array_1_V_reg_2257)) ? 1'b1 : 1'b0);

assign invert_table2_address0 = zext_ln235_fu_2107_p1;

assign io_acc_block_signal_op496 = (res_V_data_9_V_full_n & res_V_data_8_V_full_n & res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_12_V_full_n & res_V_data_11_V_full_n & res_V_data_10_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op58 = (data_V_data_9_V_empty_n & data_V_data_8_V_empty_n & data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_12_V_empty_n & data_V_data_11_V_empty_n & data_V_data_10_V_empty_n & data_V_data_0_V_empty_n);

assign lhs_V_1_fu_2011_p1 = p_Val2_23_reg_2618;

assign lhs_V_fu_1925_p1 = p_Val2_19_reg_2606;

assign or_ln340_10_fu_1255_p2 = (xor_ln340_10_fu_1249_p2 | tmp_48_fu_1223_p3);

assign or_ln340_11_fu_1310_p2 = (xor_ln340_11_fu_1304_p2 | tmp_50_fu_1278_p3);

assign or_ln340_12_fu_1365_p2 = (xor_ln340_12_fu_1359_p2 | tmp_52_fu_1333_p3);

assign or_ln340_13_fu_1981_p2 = (xor_ln340_27_fu_1975_p2 | p_Result_20_fu_1949_p3);

assign or_ln340_14_fu_2067_p2 = (xor_ln340_29_fu_2061_p2 | p_Result_22_fu_2035_p3);

assign or_ln340_1_fu_760_p2 = (xor_ln340_1_fu_754_p2 | tmp_30_fu_728_p3);

assign or_ln340_2_fu_815_p2 = (xor_ln340_2_fu_809_p2 | tmp_32_fu_783_p3);

assign or_ln340_3_fu_870_p2 = (xor_ln340_3_fu_864_p2 | tmp_34_fu_838_p3);

assign or_ln340_4_fu_925_p2 = (xor_ln340_4_fu_919_p2 | tmp_36_fu_893_p3);

assign or_ln340_5_fu_980_p2 = (xor_ln340_5_fu_974_p2 | tmp_38_fu_948_p3);

assign or_ln340_6_fu_1035_p2 = (xor_ln340_6_fu_1029_p2 | tmp_40_fu_1003_p3);

assign or_ln340_7_fu_1090_p2 = (xor_ln340_7_fu_1084_p2 | tmp_42_fu_1058_p3);

assign or_ln340_8_fu_1145_p2 = (xor_ln340_8_fu_1139_p2 | tmp_44_fu_1113_p3);

assign or_ln340_9_fu_1200_p2 = (xor_ln340_9_fu_1194_p2 | tmp_46_fu_1168_p3);

assign or_ln340_fu_705_p2 = (xor_ln340_fu_699_p2 | tmp_28_fu_673_p3);

assign p_Result_20_fu_1949_p3 = p_Val2_22_fu_1945_p2[32'd17];

assign p_Result_21_fu_2023_p3 = ret_V_1_fu_2017_p2[32'd18];

assign p_Result_22_fu_2035_p3 = p_Val2_26_fu_2031_p2[32'd17];

assign p_Result_s_fu_1937_p3 = ret_V_fu_1931_p2[32'd18];

assign p_Val2_22_fu_1945_p2 = ($signed(p_Val2_1_reg_2612) + $signed(p_Val2_19_reg_2606));

assign p_Val2_23_fu_2003_p3 = ((or_ln340_13_fu_1981_p2[0:0] === 1'b1) ? select_ln340_26_fu_1987_p3 : select_ln388_13_fu_1995_p3);

assign p_Val2_26_fu_2031_p2 = ($signed(p_Val2_24_reg_2624) + $signed(p_Val2_23_reg_2618));

assign res_V_data_0_V_din = tmp_data_0_V_reg_2655;

assign res_V_data_10_V_din = tmp_data_10_V_reg_2755;

assign res_V_data_11_V_din = tmp_data_11_V_reg_2765;

assign res_V_data_12_V_din = tmp_data_12_V_reg_2775;

assign res_V_data_1_V_din = tmp_data_1_V_reg_2665;

assign res_V_data_2_V_din = tmp_data_2_V_reg_2675;

assign res_V_data_3_V_din = tmp_data_3_V_reg_2685;

assign res_V_data_4_V_din = tmp_data_4_V_reg_2695;

assign res_V_data_5_V_din = tmp_data_5_V_reg_2705;

assign res_V_data_6_V_din = tmp_data_6_V_reg_2715;

assign res_V_data_7_V_din = tmp_data_7_V_reg_2725;

assign res_V_data_8_V_din = tmp_data_8_V_reg_2735;

assign res_V_data_9_V_din = tmp_data_9_V_reg_2745;

assign ret_V_1_fu_2017_p2 = ($signed(lhs_V_1_fu_2011_p1) + $signed(rhs_V_1_fu_2014_p1));

assign ret_V_fu_1931_p2 = ($signed(lhs_V_fu_1925_p1) + $signed(rhs_V_fu_1928_p1));

assign rhs_V_1_fu_2014_p1 = p_Val2_24_reg_2624;

assign rhs_V_fu_1928_p1 = p_Val2_1_reg_2612;

assign select_ln340_10_fu_1551_p3 = ((xor_ln340_18_fu_968_p2[0:0] === 1'b1) ? 10'd511 : tmp_18_fu_1541_p4);

assign select_ln340_12_fu_1585_p3 = ((xor_ln340_19_fu_1023_p2[0:0] === 1'b1) ? 10'd511 : tmp_19_fu_1575_p4);

assign select_ln340_14_fu_1619_p3 = ((xor_ln340_20_fu_1078_p2[0:0] === 1'b1) ? 10'd511 : tmp_20_fu_1609_p4);

assign select_ln340_16_fu_1653_p3 = ((xor_ln340_21_fu_1133_p2[0:0] === 1'b1) ? 10'd511 : tmp_21_fu_1643_p4);

assign select_ln340_18_fu_1687_p3 = ((xor_ln340_22_fu_1188_p2[0:0] === 1'b1) ? 10'd511 : tmp_22_fu_1677_p4);

assign select_ln340_20_fu_1721_p3 = ((xor_ln340_23_fu_1243_p2[0:0] === 1'b1) ? 10'd511 : tmp_23_fu_1711_p4);

assign select_ln340_22_fu_1755_p3 = ((xor_ln340_24_fu_1298_p2[0:0] === 1'b1) ? 10'd511 : tmp_24_fu_1745_p4);

assign select_ln340_24_fu_1789_p3 = ((xor_ln340_25_fu_1353_p2[0:0] === 1'b1) ? 10'd511 : tmp_25_fu_1779_p4);

assign select_ln340_26_fu_1987_p3 = ((xor_ln340_26_fu_1969_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_22_fu_1945_p2);

assign select_ln340_28_fu_2083_p3 = ((xor_ln340_28_fu_2055_p2[0:0] === 1'b1) ? 10'd511 : tmp_26_fu_2073_p4);

assign select_ln340_2_fu_1415_p3 = ((xor_ln340_14_fu_748_p2[0:0] === 1'b1) ? 10'd511 : tmp_14_fu_1405_p4);

assign select_ln340_4_fu_1449_p3 = ((xor_ln340_15_fu_803_p2[0:0] === 1'b1) ? 10'd511 : tmp_15_fu_1439_p4);

assign select_ln340_6_fu_1483_p3 = ((xor_ln340_16_fu_858_p2[0:0] === 1'b1) ? 10'd511 : tmp_16_fu_1473_p4);

assign select_ln340_8_fu_1517_p3 = ((xor_ln340_17_fu_913_p2[0:0] === 1'b1) ? 10'd511 : tmp_17_fu_1507_p4);

assign select_ln340_fu_1381_p3 = ((xor_ln340_13_fu_693_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_1371_p4);

assign select_ln388_10_fu_1729_p3 = ((and_ln786_10_fu_1237_p2[0:0] === 1'b1) ? 10'd512 : tmp_23_fu_1711_p4);

assign select_ln388_11_fu_1763_p3 = ((and_ln786_11_fu_1292_p2[0:0] === 1'b1) ? 10'd512 : tmp_24_fu_1745_p4);

assign select_ln388_12_fu_1797_p3 = ((and_ln786_12_fu_1347_p2[0:0] === 1'b1) ? 10'd512 : tmp_25_fu_1779_p4);

assign select_ln388_13_fu_1995_p3 = ((underflow_fu_1963_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_22_fu_1945_p2);

assign select_ln388_14_fu_2091_p3 = ((underflow_1_fu_2049_p2[0:0] === 1'b1) ? 10'd512 : tmp_26_fu_2073_p4);

assign select_ln388_1_fu_1423_p3 = ((and_ln786_1_fu_742_p2[0:0] === 1'b1) ? 10'd512 : tmp_14_fu_1405_p4);

assign select_ln388_2_fu_1457_p3 = ((and_ln786_2_fu_797_p2[0:0] === 1'b1) ? 10'd512 : tmp_15_fu_1439_p4);

assign select_ln388_3_fu_1491_p3 = ((and_ln786_3_fu_852_p2[0:0] === 1'b1) ? 10'd512 : tmp_16_fu_1473_p4);

assign select_ln388_4_fu_1525_p3 = ((and_ln786_4_fu_907_p2[0:0] === 1'b1) ? 10'd512 : tmp_17_fu_1507_p4);

assign select_ln388_5_fu_1559_p3 = ((and_ln786_5_fu_962_p2[0:0] === 1'b1) ? 10'd512 : tmp_18_fu_1541_p4);

assign select_ln388_6_fu_1593_p3 = ((and_ln786_6_fu_1017_p2[0:0] === 1'b1) ? 10'd512 : tmp_19_fu_1575_p4);

assign select_ln388_7_fu_1627_p3 = ((and_ln786_7_fu_1072_p2[0:0] === 1'b1) ? 10'd512 : tmp_20_fu_1609_p4);

assign select_ln388_8_fu_1661_p3 = ((and_ln786_8_fu_1127_p2[0:0] === 1'b1) ? 10'd512 : tmp_21_fu_1643_p4);

assign select_ln388_9_fu_1695_p3 = ((and_ln786_9_fu_1182_p2[0:0] === 1'b1) ? 10'd512 : tmp_22_fu_1677_p4);

assign select_ln388_fu_1389_p3 = ((and_ln786_fu_687_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_1371_p4);

assign select_ln65_10_fu_637_p3 = ((icmp_ln1496_10_fu_633_p2[0:0] === 1'b1) ? data_array_12_V_reg_2334 : select_ln65_9_reg_2383);

assign select_ln65_1_fu_556_p3 = ((icmp_ln1496_1_reg_2346[0:0] === 1'b1) ? data_array_3_V_reg_2271 : data_array_2_V_reg_2264);

assign select_ln65_2_fu_567_p3 = ((icmp_ln1496_2_fu_561_p2[0:0] === 1'b1) ? select_ln65_1_fu_556_p3 : select_ln65_fu_551_p3);

assign select_ln65_3_fu_575_p3 = ((icmp_ln1496_3_reg_2351[0:0] === 1'b1) ? data_array_5_V_reg_2285 : data_array_4_V_reg_2278);

assign select_ln65_4_fu_580_p3 = ((icmp_ln1496_4_reg_2356[0:0] === 1'b1) ? data_array_7_V_reg_2299 : data_array_6_V_reg_2292);

assign select_ln65_5_fu_591_p3 = ((icmp_ln1496_5_fu_585_p2[0:0] === 1'b1) ? select_ln65_4_fu_580_p3 : select_ln65_3_fu_575_p3);

assign select_ln65_6_fu_627_p3 = ((icmp_ln1496_6_fu_623_p2[0:0] === 1'b1) ? select_ln65_5_reg_2377 : select_ln65_2_reg_2371);

assign select_ln65_7_fu_599_p3 = ((icmp_ln1496_7_reg_2361[0:0] === 1'b1) ? data_array_9_V_reg_2313 : data_array_8_V_reg_2306);

assign select_ln65_8_fu_604_p3 = ((icmp_ln1496_8_reg_2366[0:0] === 1'b1) ? data_array_11_V_reg_2327 : data_array_10_V_reg_2320);

assign select_ln65_9_fu_615_p3 = ((icmp_ln1496_9_fu_609_p2[0:0] === 1'b1) ? select_ln65_8_fu_604_p3 : select_ln65_7_fu_599_p3);

assign select_ln65_fu_551_p3 = ((icmp_ln1496_reg_2341[0:0] === 1'b1) ? data_array_1_V_reg_2257 : data_array_0_V_reg_2250);

assign sext_ln241_fu_2111_p1 = $signed(inv_exp_sum_V_reg_2640);

assign sext_ln703_10_fu_1151_p1 = data_array_9_V_reg_2313;

assign sext_ln703_11_fu_1206_p1 = data_array_10_V_reg_2320;

assign sext_ln703_12_fu_1261_p1 = data_array_11_V_reg_2327;

assign sext_ln703_13_fu_1316_p1 = data_array_12_V_reg_2334;

assign sext_ln703_1_fu_656_p1 = $signed(x_max_V_reg_2401);

assign sext_ln703_2_fu_711_p1 = data_array_1_V_reg_2257;

assign sext_ln703_3_fu_766_p1 = data_array_2_V_reg_2264;

assign sext_ln703_4_fu_821_p1 = data_array_3_V_reg_2271;

assign sext_ln703_5_fu_876_p1 = data_array_4_V_reg_2278;

assign sext_ln703_6_fu_931_p1 = data_array_5_V_reg_2285;

assign sext_ln703_7_fu_986_p1 = data_array_6_V_reg_2292;

assign sext_ln703_8_fu_1041_p1 = data_array_7_V_reg_2299;

assign sext_ln703_9_fu_1096_p1 = data_array_8_V_reg_2306;

assign sext_ln703_fu_653_p1 = data_array_0_V_reg_2250;

assign sub_ln1193_10_fu_1209_p2 = ($signed(sext_ln703_11_fu_1206_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_11_fu_1264_p2 = ($signed(sext_ln703_12_fu_1261_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_12_fu_1319_p2 = ($signed(sext_ln703_13_fu_1316_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_1_fu_714_p2 = ($signed(sext_ln703_2_fu_711_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_2_fu_769_p2 = ($signed(sext_ln703_3_fu_766_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_3_fu_824_p2 = ($signed(sext_ln703_4_fu_821_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_4_fu_879_p2 = ($signed(sext_ln703_5_fu_876_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_5_fu_934_p2 = ($signed(sext_ln703_6_fu_931_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_6_fu_989_p2 = ($signed(sext_ln703_7_fu_986_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_7_fu_1044_p2 = ($signed(sext_ln703_8_fu_1041_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_8_fu_1099_p2 = ($signed(sext_ln703_9_fu_1096_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_9_fu_1154_p2 = ($signed(sext_ln703_10_fu_1151_p1) - $signed(sext_ln703_1_fu_656_p1));

assign sub_ln1193_fu_659_p2 = ($signed(sext_ln703_fu_653_p1) - $signed(sext_ln703_1_fu_656_p1));

assign tmp_14_fu_1405_p4 = {{sub_ln1193_1_fu_714_p2[15:6]}};

assign tmp_15_fu_1439_p4 = {{sub_ln1193_2_fu_769_p2[15:6]}};

assign tmp_16_fu_1473_p4 = {{sub_ln1193_3_fu_824_p2[15:6]}};

assign tmp_17_fu_1507_p4 = {{sub_ln1193_4_fu_879_p2[15:6]}};

assign tmp_18_fu_1541_p4 = {{sub_ln1193_5_fu_934_p2[15:6]}};

assign tmp_19_fu_1575_p4 = {{sub_ln1193_6_fu_989_p2[15:6]}};

assign tmp_20_fu_1609_p4 = {{sub_ln1193_7_fu_1044_p2[15:6]}};

assign tmp_21_fu_1643_p4 = {{sub_ln1193_8_fu_1099_p2[15:6]}};

assign tmp_22_fu_1677_p4 = {{sub_ln1193_9_fu_1154_p2[15:6]}};

assign tmp_23_fu_1711_p4 = {{sub_ln1193_10_fu_1209_p2[15:6]}};

assign tmp_24_fu_1745_p4 = {{sub_ln1193_11_fu_1264_p2[15:6]}};

assign tmp_25_fu_1779_p4 = {{sub_ln1193_12_fu_1319_p2[15:6]}};

assign tmp_26_fu_2073_p4 = {{p_Val2_26_fu_2031_p2[17:8]}};

assign tmp_27_fu_665_p3 = sub_ln1193_fu_659_p2[32'd16];

assign tmp_28_fu_673_p3 = sub_ln1193_fu_659_p2[32'd15];

assign tmp_29_fu_720_p3 = sub_ln1193_1_fu_714_p2[32'd16];

assign tmp_30_fu_728_p3 = sub_ln1193_1_fu_714_p2[32'd15];

assign tmp_31_fu_775_p3 = sub_ln1193_2_fu_769_p2[32'd16];

assign tmp_32_fu_783_p3 = sub_ln1193_2_fu_769_p2[32'd15];

assign tmp_33_fu_830_p3 = sub_ln1193_3_fu_824_p2[32'd16];

assign tmp_34_fu_838_p3 = sub_ln1193_3_fu_824_p2[32'd15];

assign tmp_35_fu_885_p3 = sub_ln1193_4_fu_879_p2[32'd16];

assign tmp_36_fu_893_p3 = sub_ln1193_4_fu_879_p2[32'd15];

assign tmp_37_fu_940_p3 = sub_ln1193_5_fu_934_p2[32'd16];

assign tmp_38_fu_948_p3 = sub_ln1193_5_fu_934_p2[32'd15];

assign tmp_39_fu_995_p3 = sub_ln1193_6_fu_989_p2[32'd16];

assign tmp_40_fu_1003_p3 = sub_ln1193_6_fu_989_p2[32'd15];

assign tmp_41_fu_1050_p3 = sub_ln1193_7_fu_1044_p2[32'd16];

assign tmp_42_fu_1058_p3 = sub_ln1193_7_fu_1044_p2[32'd15];

assign tmp_43_fu_1105_p3 = sub_ln1193_8_fu_1099_p2[32'd16];

assign tmp_44_fu_1113_p3 = sub_ln1193_8_fu_1099_p2[32'd15];

assign tmp_45_fu_1160_p3 = sub_ln1193_9_fu_1154_p2[32'd16];

assign tmp_46_fu_1168_p3 = sub_ln1193_9_fu_1154_p2[32'd15];

assign tmp_47_fu_1215_p3 = sub_ln1193_10_fu_1209_p2[32'd16];

assign tmp_48_fu_1223_p3 = sub_ln1193_10_fu_1209_p2[32'd15];

assign tmp_49_fu_1270_p3 = sub_ln1193_11_fu_1264_p2[32'd16];

assign tmp_50_fu_1278_p3 = sub_ln1193_11_fu_1264_p2[32'd15];

assign tmp_51_fu_1325_p3 = sub_ln1193_12_fu_1319_p2[32'd16];

assign tmp_52_fu_1333_p3 = sub_ln1193_12_fu_1319_p2[32'd15];

assign tmp_fu_1371_p4 = {{sub_ln1193_fu_659_p2[15:6]}};

assign underflow_1_fu_2049_p2 = (xor_ln786_14_fu_2043_p2 & p_Result_21_fu_2023_p3);

assign underflow_fu_1963_p2 = (xor_ln786_13_fu_1957_p2 & p_Result_s_fu_1937_p3);

assign x_max_V_fu_647_p3 = ((icmp_ln1496_11_fu_643_p2[0:0] === 1'b1) ? select_ln65_10_reg_2395 : select_ln65_6_reg_2389);

assign xor_ln340_10_fu_1249_p2 = (tmp_47_fu_1215_p3 ^ 1'd1);

assign xor_ln340_11_fu_1304_p2 = (tmp_49_fu_1270_p3 ^ 1'd1);

assign xor_ln340_12_fu_1359_p2 = (tmp_51_fu_1325_p3 ^ 1'd1);

assign xor_ln340_13_fu_693_p2 = (tmp_28_fu_673_p3 ^ tmp_27_fu_665_p3);

assign xor_ln340_14_fu_748_p2 = (tmp_30_fu_728_p3 ^ tmp_29_fu_720_p3);

assign xor_ln340_15_fu_803_p2 = (tmp_32_fu_783_p3 ^ tmp_31_fu_775_p3);

assign xor_ln340_16_fu_858_p2 = (tmp_34_fu_838_p3 ^ tmp_33_fu_830_p3);

assign xor_ln340_17_fu_913_p2 = (tmp_36_fu_893_p3 ^ tmp_35_fu_885_p3);

assign xor_ln340_18_fu_968_p2 = (tmp_38_fu_948_p3 ^ tmp_37_fu_940_p3);

assign xor_ln340_19_fu_1023_p2 = (tmp_40_fu_1003_p3 ^ tmp_39_fu_995_p3);

assign xor_ln340_1_fu_754_p2 = (tmp_29_fu_720_p3 ^ 1'd1);

assign xor_ln340_20_fu_1078_p2 = (tmp_42_fu_1058_p3 ^ tmp_41_fu_1050_p3);

assign xor_ln340_21_fu_1133_p2 = (tmp_44_fu_1113_p3 ^ tmp_43_fu_1105_p3);

assign xor_ln340_22_fu_1188_p2 = (tmp_46_fu_1168_p3 ^ tmp_45_fu_1160_p3);

assign xor_ln340_23_fu_1243_p2 = (tmp_48_fu_1223_p3 ^ tmp_47_fu_1215_p3);

assign xor_ln340_24_fu_1298_p2 = (tmp_50_fu_1278_p3 ^ tmp_49_fu_1270_p3);

assign xor_ln340_25_fu_1353_p2 = (tmp_52_fu_1333_p3 ^ tmp_51_fu_1325_p3);

assign xor_ln340_26_fu_1969_p2 = (p_Result_s_fu_1937_p3 ^ p_Result_20_fu_1949_p3);

assign xor_ln340_27_fu_1975_p2 = (p_Result_s_fu_1937_p3 ^ 1'd1);

assign xor_ln340_28_fu_2055_p2 = (p_Result_22_fu_2035_p3 ^ p_Result_21_fu_2023_p3);

assign xor_ln340_29_fu_2061_p2 = (p_Result_21_fu_2023_p3 ^ 1'd1);

assign xor_ln340_2_fu_809_p2 = (tmp_31_fu_775_p3 ^ 1'd1);

assign xor_ln340_3_fu_864_p2 = (tmp_33_fu_830_p3 ^ 1'd1);

assign xor_ln340_4_fu_919_p2 = (tmp_35_fu_885_p3 ^ 1'd1);

assign xor_ln340_5_fu_974_p2 = (tmp_37_fu_940_p3 ^ 1'd1);

assign xor_ln340_6_fu_1029_p2 = (tmp_39_fu_995_p3 ^ 1'd1);

assign xor_ln340_7_fu_1084_p2 = (tmp_41_fu_1050_p3 ^ 1'd1);

assign xor_ln340_8_fu_1139_p2 = (tmp_43_fu_1105_p3 ^ 1'd1);

assign xor_ln340_9_fu_1194_p2 = (tmp_45_fu_1160_p3 ^ 1'd1);

assign xor_ln340_fu_699_p2 = (tmp_27_fu_665_p3 ^ 1'd1);

assign xor_ln786_10_fu_1231_p2 = (tmp_48_fu_1223_p3 ^ 1'd1);

assign xor_ln786_11_fu_1286_p2 = (tmp_50_fu_1278_p3 ^ 1'd1);

assign xor_ln786_12_fu_1341_p2 = (tmp_52_fu_1333_p3 ^ 1'd1);

assign xor_ln786_13_fu_1957_p2 = (p_Result_20_fu_1949_p3 ^ 1'd1);

assign xor_ln786_14_fu_2043_p2 = (p_Result_22_fu_2035_p3 ^ 1'd1);

assign xor_ln786_1_fu_736_p2 = (tmp_30_fu_728_p3 ^ 1'd1);

assign xor_ln786_2_fu_791_p2 = (tmp_32_fu_783_p3 ^ 1'd1);

assign xor_ln786_3_fu_846_p2 = (tmp_34_fu_838_p3 ^ 1'd1);

assign xor_ln786_4_fu_901_p2 = (tmp_36_fu_893_p3 ^ 1'd1);

assign xor_ln786_5_fu_956_p2 = (tmp_38_fu_948_p3 ^ 1'd1);

assign xor_ln786_6_fu_1011_p2 = (tmp_40_fu_1003_p3 ^ 1'd1);

assign xor_ln786_7_fu_1066_p2 = (tmp_42_fu_1058_p3 ^ 1'd1);

assign xor_ln786_8_fu_1121_p2 = (tmp_44_fu_1113_p3 ^ 1'd1);

assign xor_ln786_9_fu_1176_p2 = (tmp_46_fu_1168_p3 ^ 1'd1);

assign xor_ln786_fu_681_p2 = (tmp_28_fu_673_p3 ^ 1'd1);

assign y_V_10_fu_1737_p3 = ((or_ln340_10_fu_1255_p2[0:0] === 1'b1) ? select_ln340_20_fu_1721_p3 : select_ln388_10_fu_1729_p3);

assign y_V_11_fu_1771_p3 = ((or_ln340_11_fu_1310_p2[0:0] === 1'b1) ? select_ln340_22_fu_1755_p3 : select_ln388_11_fu_1763_p3);

assign y_V_12_fu_1805_p3 = ((or_ln340_12_fu_1365_p2[0:0] === 1'b1) ? select_ln340_24_fu_1789_p3 : select_ln388_12_fu_1797_p3);

assign y_V_13_fu_2099_p3 = ((or_ln340_14_fu_2067_p2[0:0] === 1'b1) ? select_ln340_28_fu_2083_p3 : select_ln388_14_fu_2091_p3);

assign y_V_1_fu_1431_p3 = ((or_ln340_1_fu_760_p2[0:0] === 1'b1) ? select_ln340_2_fu_1415_p3 : select_ln388_1_fu_1423_p3);

assign y_V_2_fu_1465_p3 = ((or_ln340_2_fu_815_p2[0:0] === 1'b1) ? select_ln340_4_fu_1449_p3 : select_ln388_2_fu_1457_p3);

assign y_V_3_fu_1499_p3 = ((or_ln340_3_fu_870_p2[0:0] === 1'b1) ? select_ln340_6_fu_1483_p3 : select_ln388_3_fu_1491_p3);

assign y_V_4_fu_1533_p3 = ((or_ln340_4_fu_925_p2[0:0] === 1'b1) ? select_ln340_8_fu_1517_p3 : select_ln388_4_fu_1525_p3);

assign y_V_5_fu_1567_p3 = ((or_ln340_5_fu_980_p2[0:0] === 1'b1) ? select_ln340_10_fu_1551_p3 : select_ln388_5_fu_1559_p3);

assign y_V_6_fu_1601_p3 = ((or_ln340_6_fu_1035_p2[0:0] === 1'b1) ? select_ln340_12_fu_1585_p3 : select_ln388_6_fu_1593_p3);

assign y_V_7_fu_1635_p3 = ((or_ln340_7_fu_1090_p2[0:0] === 1'b1) ? select_ln340_14_fu_1619_p3 : select_ln388_7_fu_1627_p3);

assign y_V_8_fu_1669_p3 = ((or_ln340_8_fu_1145_p2[0:0] === 1'b1) ? select_ln340_16_fu_1653_p3 : select_ln388_8_fu_1661_p3);

assign y_V_9_fu_1703_p3 = ((or_ln340_9_fu_1200_p2[0:0] === 1'b1) ? select_ln340_18_fu_1687_p3 : select_ln388_9_fu_1695_p3);

assign y_V_fu_1397_p3 = ((or_ln340_fu_705_p2[0:0] === 1'b1) ? select_ln340_fu_1381_p3 : select_ln388_fu_1389_p3);

assign zext_ln1118_10_fu_2155_p1 = exp_res_10_V_1_reg_2581_pp0_iter2_reg;

assign zext_ln1118_11_fu_2159_p1 = exp_res_11_V_1_reg_2591_pp0_iter2_reg;

assign zext_ln1118_12_fu_2163_p1 = exp_res_12_V_1_reg_2601_pp0_iter2_reg;

assign zext_ln1118_1_fu_2119_p1 = exp_res_1_V_1_reg_2487_pp0_iter1_reg;

assign zext_ln1118_2_fu_2123_p1 = exp_res_2_V_1_reg_2498_pp0_iter1_reg;

assign zext_ln1118_3_fu_2127_p1 = exp_res_3_V_1_reg_2509_pp0_iter1_reg;

assign zext_ln1118_4_fu_2131_p1 = exp_res_4_V_1_reg_2520_pp0_iter1_reg;

assign zext_ln1118_5_fu_2135_p1 = exp_res_5_V_1_reg_2531_pp0_iter1_reg;

assign zext_ln1118_6_fu_2139_p1 = exp_res_6_V_1_reg_2541_pp0_iter2_reg;

assign zext_ln1118_7_fu_2143_p1 = exp_res_7_V_1_reg_2551_pp0_iter2_reg;

assign zext_ln1118_8_fu_2147_p1 = exp_res_8_V_1_reg_2561_pp0_iter2_reg;

assign zext_ln1118_9_fu_2151_p1 = exp_res_9_V_1_reg_2571_pp0_iter2_reg;

assign zext_ln1118_fu_2115_p1 = exp_res_0_V_1_reg_2476_pp0_iter1_reg;

assign zext_ln225_10_fu_1898_p1 = y_V_10_reg_2456;

assign zext_ln225_11_fu_1907_p1 = y_V_11_reg_2461;

assign zext_ln225_12_fu_1916_p1 = y_V_12_reg_2466;

assign zext_ln225_1_fu_1817_p1 = y_V_1_reg_2411;

assign zext_ln225_2_fu_1821_p1 = y_V_2_reg_2416;

assign zext_ln225_3_fu_1825_p1 = y_V_3_reg_2421;

assign zext_ln225_4_fu_1829_p1 = y_V_4_reg_2426;

assign zext_ln225_5_fu_1833_p1 = y_V_5_reg_2431;

assign zext_ln225_6_fu_1862_p1 = y_V_6_reg_2436;

assign zext_ln225_7_fu_1871_p1 = y_V_7_reg_2441;

assign zext_ln225_8_fu_1880_p1 = y_V_8_reg_2446;

assign zext_ln225_9_fu_1889_p1 = y_V_9_reg_2451;

assign zext_ln225_fu_1813_p1 = y_V_reg_2406;

assign zext_ln235_fu_2107_p1 = y_V_13_reg_2630;

endmodule //softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s
