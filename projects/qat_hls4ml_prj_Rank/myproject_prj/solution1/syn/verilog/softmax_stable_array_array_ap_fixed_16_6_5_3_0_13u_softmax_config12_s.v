// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        data_V_data_8_V_dout,
        data_V_data_8_V_empty_n,
        data_V_data_8_V_read,
        data_V_data_9_V_dout,
        data_V_data_9_V_empty_n,
        data_V_data_9_V_read,
        data_V_data_10_V_dout,
        data_V_data_10_V_empty_n,
        data_V_data_10_V_read,
        data_V_data_11_V_dout,
        data_V_data_11_V_empty_n,
        data_V_data_11_V_read,
        data_V_data_12_V_dout,
        data_V_data_12_V_empty_n,
        data_V_data_12_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write,
        res_V_data_8_V_din,
        res_V_data_8_V_full_n,
        res_V_data_8_V_write,
        res_V_data_9_V_din,
        res_V_data_9_V_full_n,
        res_V_data_9_V_write,
        res_V_data_10_V_din,
        res_V_data_10_V_full_n,
        res_V_data_10_V_write,
        res_V_data_11_V_din,
        res_V_data_11_V_full_n,
        res_V_data_11_V_write,
        res_V_data_12_V_din,
        res_V_data_12_V_full_n,
        res_V_data_12_V_write,
        data_V_data_0_V_blk_n,
        data_V_data_1_V_blk_n,
        data_V_data_2_V_blk_n,
        data_V_data_3_V_blk_n,
        data_V_data_4_V_blk_n,
        data_V_data_5_V_blk_n,
        data_V_data_6_V_blk_n,
        data_V_data_7_V_blk_n,
        data_V_data_8_V_blk_n,
        data_V_data_9_V_blk_n,
        data_V_data_10_V_blk_n,
        data_V_data_11_V_blk_n,
        data_V_data_12_V_blk_n,
        res_V_data_0_V_blk_n,
        res_V_data_1_V_blk_n,
        res_V_data_2_V_blk_n,
        res_V_data_3_V_blk_n,
        res_V_data_4_V_blk_n,
        res_V_data_5_V_blk_n,
        res_V_data_6_V_blk_n,
        res_V_data_7_V_blk_n,
        res_V_data_8_V_blk_n,
        res_V_data_9_V_blk_n,
        res_V_data_10_V_blk_n,
        res_V_data_11_V_blk_n,
        res_V_data_12_V_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 13'd1;
parameter    ap_ST_fsm_pp0_stage1 = 13'd2;
parameter    ap_ST_fsm_pp0_stage2 = 13'd4;
parameter    ap_ST_fsm_pp0_stage3 = 13'd8;
parameter    ap_ST_fsm_pp0_stage4 = 13'd16;
parameter    ap_ST_fsm_pp0_stage5 = 13'd32;
parameter    ap_ST_fsm_pp0_stage6 = 13'd64;
parameter    ap_ST_fsm_pp0_stage7 = 13'd128;
parameter    ap_ST_fsm_pp0_stage8 = 13'd256;
parameter    ap_ST_fsm_pp0_stage9 = 13'd512;
parameter    ap_ST_fsm_pp0_stage10 = 13'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 13'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
input  [15:0] data_V_data_8_V_dout;
input   data_V_data_8_V_empty_n;
output   data_V_data_8_V_read;
input  [15:0] data_V_data_9_V_dout;
input   data_V_data_9_V_empty_n;
output   data_V_data_9_V_read;
input  [15:0] data_V_data_10_V_dout;
input   data_V_data_10_V_empty_n;
output   data_V_data_10_V_read;
input  [15:0] data_V_data_11_V_dout;
input   data_V_data_11_V_empty_n;
output   data_V_data_11_V_read;
input  [15:0] data_V_data_12_V_dout;
input   data_V_data_12_V_empty_n;
output   data_V_data_12_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;
output  [15:0] res_V_data_8_V_din;
input   res_V_data_8_V_full_n;
output   res_V_data_8_V_write;
output  [15:0] res_V_data_9_V_din;
input   res_V_data_9_V_full_n;
output   res_V_data_9_V_write;
output  [15:0] res_V_data_10_V_din;
input   res_V_data_10_V_full_n;
output   res_V_data_10_V_write;
output  [15:0] res_V_data_11_V_din;
input   res_V_data_11_V_full_n;
output   res_V_data_11_V_write;
output  [15:0] res_V_data_12_V_din;
input   res_V_data_12_V_full_n;
output   res_V_data_12_V_write;
output   data_V_data_0_V_blk_n;
output   data_V_data_1_V_blk_n;
output   data_V_data_2_V_blk_n;
output   data_V_data_3_V_blk_n;
output   data_V_data_4_V_blk_n;
output   data_V_data_5_V_blk_n;
output   data_V_data_6_V_blk_n;
output   data_V_data_7_V_blk_n;
output   data_V_data_8_V_blk_n;
output   data_V_data_9_V_blk_n;
output   data_V_data_10_V_blk_n;
output   data_V_data_11_V_blk_n;
output   data_V_data_12_V_blk_n;
output   res_V_data_0_V_blk_n;
output   res_V_data_1_V_blk_n;
output   res_V_data_2_V_blk_n;
output   res_V_data_3_V_blk_n;
output   res_V_data_4_V_blk_n;
output   res_V_data_5_V_blk_n;
output   res_V_data_6_V_blk_n;
output   res_V_data_7_V_blk_n;
output   res_V_data_8_V_blk_n;
output   res_V_data_9_V_blk_n;
output   res_V_data_10_V_blk_n;
output   res_V_data_11_V_blk_n;
output   res_V_data_12_V_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg data_V_data_8_V_read;
reg data_V_data_9_V_read;
reg data_V_data_10_V_read;
reg data_V_data_11_V_read;
reg data_V_data_12_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;
reg res_V_data_8_V_write;
reg res_V_data_9_V_write;
reg res_V_data_10_V_write;
reg res_V_data_11_V_write;
reg res_V_data_12_V_write;
reg data_V_data_0_V_blk_n;
reg data_V_data_1_V_blk_n;
reg data_V_data_2_V_blk_n;
reg data_V_data_3_V_blk_n;
reg data_V_data_4_V_blk_n;
reg data_V_data_5_V_blk_n;
reg data_V_data_6_V_blk_n;
reg data_V_data_7_V_blk_n;
reg data_V_data_8_V_blk_n;
reg data_V_data_9_V_blk_n;
reg data_V_data_10_V_blk_n;
reg data_V_data_11_V_blk_n;
reg data_V_data_12_V_blk_n;
reg res_V_data_0_V_blk_n;
reg res_V_data_1_V_blk_n;
reg res_V_data_2_V_blk_n;
reg res_V_data_3_V_blk_n;
reg res_V_data_4_V_blk_n;
reg res_V_data_5_V_blk_n;
reg res_V_data_6_V_blk_n;
reg res_V_data_7_V_blk_n;
reg res_V_data_8_V_blk_n;
reg res_V_data_9_V_blk_n;
reg res_V_data_10_V_blk_n;
reg res_V_data_11_V_blk_n;
reg res_V_data_12_V_blk_n;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state26_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_11001;
reg   [9:0] exp_table1_address0;
reg    exp_table1_ce0;
wire   [16:0] exp_table1_q0;
wire   [9:0] invert_table2_address0;
reg    invert_table2_ce0;
wire   [17:0] invert_table2_q0;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    io_acc_block_signal_op47;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_state27_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg  signed [15:0] data_array_0_V_reg_2590;
reg  signed [15:0] data_array_1_V_reg_2596;
reg  signed [15:0] data_array_2_V_reg_2602;
reg  signed [15:0] data_array_3_V_reg_2608;
reg  signed [15:0] data_array_4_V_reg_2614;
reg  signed [15:0] data_array_5_V_reg_2620;
reg  signed [15:0] data_array_6_V_reg_2626;
reg  signed [15:0] data_array_7_V_reg_2632;
reg  signed [15:0] data_array_8_V_reg_2638;
reg  signed [15:0] data_array_9_V_reg_2644;
reg  signed [15:0] data_array_10_V_reg_2650;
reg  signed [15:0] data_array_11_V_reg_2656;
reg  signed [15:0] data_array_12_V_reg_2662;
wire   [0:0] icmp_ln1496_fu_838_p2;
reg   [0:0] icmp_ln1496_reg_2669;
wire   [0:0] icmp_ln1496_1_fu_844_p2;
reg   [0:0] icmp_ln1496_1_reg_2674;
wire   [0:0] icmp_ln1496_3_fu_850_p2;
reg   [0:0] icmp_ln1496_3_reg_2679;
wire   [0:0] icmp_ln1496_4_fu_856_p2;
reg   [0:0] icmp_ln1496_4_reg_2684;
wire   [0:0] icmp_ln1496_7_fu_862_p2;
reg   [0:0] icmp_ln1496_7_reg_2689;
wire   [0:0] icmp_ln1496_8_fu_868_p2;
reg   [0:0] icmp_ln1496_8_reg_2694;
wire   [15:0] select_ln65_6_fu_928_p3;
reg   [15:0] select_ln65_6_reg_2699;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state15_pp0_stage1_iter1;
wire    ap_block_state28_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [15:0] select_ln65_10_fu_965_p3;
reg   [15:0] select_ln65_10_reg_2705;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state16_pp0_stage2_iter1;
wire    ap_block_state29_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] y_V_1_fu_1766_p3;
reg   [9:0] y_V_1_reg_2716;
wire   [9:0] y_V_2_fu_1800_p3;
reg   [9:0] y_V_2_reg_2721;
wire   [9:0] y_V_3_fu_1834_p3;
reg   [9:0] y_V_3_reg_2726;
wire   [9:0] y_V_4_fu_1868_p3;
reg   [9:0] y_V_4_reg_2731;
wire   [9:0] y_V_5_fu_1902_p3;
reg   [9:0] y_V_5_reg_2736;
wire   [9:0] y_V_6_fu_1936_p3;
reg   [9:0] y_V_6_reg_2741;
wire   [9:0] y_V_7_fu_1970_p3;
reg   [9:0] y_V_7_reg_2746;
wire   [9:0] y_V_8_fu_2004_p3;
reg   [9:0] y_V_8_reg_2751;
wire   [9:0] y_V_9_fu_2038_p3;
reg   [9:0] y_V_9_reg_2756;
wire   [9:0] y_V_10_fu_2072_p3;
reg   [9:0] y_V_10_reg_2761;
wire   [9:0] y_V_11_fu_2106_p3;
reg   [9:0] y_V_11_reg_2766;
wire   [9:0] y_V_12_fu_2140_p3;
reg   [9:0] y_V_12_reg_2771;
reg   [16:0] exp_res_0_V_1_reg_2776;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state17_pp0_stage3_iter1;
wire    ap_block_state30_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [16:0] exp_res_0_V_1_reg_2776_pp0_iter1_reg;
reg   [16:0] exp_res_1_V_1_reg_2787;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state18_pp0_stage4_iter1;
wire    ap_block_state31_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
reg   [16:0] exp_res_1_V_1_reg_2787_pp0_iter1_reg;
reg   [16:0] exp_res_2_V_1_reg_2798;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state19_pp0_stage5_iter1;
wire    ap_block_state32_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
reg   [16:0] exp_res_2_V_1_reg_2798_pp0_iter1_reg;
reg   [16:0] exp_res_3_V_1_reg_2809;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state20_pp0_stage6_iter1;
wire    io_acc_block_signal_op467;
reg    ap_block_state33_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
reg   [16:0] exp_res_3_V_1_reg_2809_pp0_iter1_reg;
reg   [16:0] exp_res_4_V_1_reg_2819;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state21_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg   [16:0] exp_res_4_V_1_reg_2819_pp0_iter1_reg;
reg   [16:0] exp_res_5_V_1_reg_2829;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state22_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
reg   [16:0] exp_res_5_V_1_reg_2829_pp0_iter1_reg;
reg   [16:0] exp_res_6_V_1_reg_2839;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state23_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_11001;
reg   [16:0] exp_res_6_V_1_reg_2839_pp0_iter1_reg;
reg   [16:0] exp_res_7_V_1_reg_2849;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state24_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_11001;
reg   [16:0] exp_res_7_V_1_reg_2849_pp0_iter1_reg;
reg   [16:0] exp_res_8_V_1_reg_2859;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state25_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_11001;
reg   [16:0] exp_res_8_V_1_reg_2859_pp0_iter1_reg;
reg   [16:0] exp_res_9_V_1_reg_2869;
reg   [16:0] exp_res_9_V_1_reg_2869_pp0_iter1_reg;
reg   [16:0] exp_res_10_V_1_reg_2879;
reg   [16:0] exp_res_10_V_1_reg_2879_pp0_iter2_reg;
reg   [16:0] exp_res_11_V_1_reg_2889;
reg   [16:0] exp_res_11_V_1_reg_2889_pp0_iter2_reg;
reg   [16:0] exp_res_12_V_1_reg_2899;
reg   [16:0] exp_res_12_V_1_reg_2899_pp0_iter2_reg;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_return;
reg  signed [17:0] p_Val2_19_reg_2904;
wire   [9:0] y_V_13_fu_2438_p3;
reg   [9:0] y_V_13_reg_2910;
wire  signed [25:0] sext_ln241_fu_2450_p1;
reg  signed [25:0] sext_ln241_reg_2920;
reg   [15:0] tmp_data_0_V_reg_2925;
reg   [15:0] tmp_data_1_V_reg_2930;
reg   [15:0] tmp_data_2_V_reg_2935;
reg   [15:0] tmp_data_3_V_reg_2940;
reg   [15:0] tmp_data_4_V_reg_2945;
reg   [15:0] tmp_data_5_V_reg_2950;
reg   [15:0] tmp_data_6_V_reg_2955;
reg   [15:0] tmp_data_7_V_reg_2960;
reg   [15:0] tmp_data_8_V_reg_2965;
reg   [15:0] tmp_data_9_V_reg_2970;
reg   [15:0] tmp_data_10_V_reg_2975;
reg   [15:0] tmp_data_11_V_reg_2980;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage6_subdone;
reg   [4:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_x_V_offset;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_ce;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call302;
wire    ap_block_state17_pp0_stage3_iter1_ignore_call302;
wire    ap_block_state30_pp0_stage3_iter2_ignore_call302;
wire    ap_block_pp0_stage3_11001_ignoreCallOp320;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call302;
wire    ap_block_state18_pp0_stage4_iter1_ignore_call302;
wire    ap_block_state31_pp0_stage4_iter2_ignore_call302;
wire    ap_block_pp0_stage4_11001_ignoreCallOp321;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call303;
wire    ap_block_state19_pp0_stage5_iter1_ignore_call303;
wire    ap_block_state32_pp0_stage5_iter2_ignore_call303;
wire    ap_block_pp0_stage5_11001_ignoreCallOp324;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_done;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_idle;
wire    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ready;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_return;
reg    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ce;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call318;
wire    ap_block_state18_pp0_stage4_iter1_ignore_call318;
wire    ap_block_state31_pp0_stage4_iter2_ignore_call318;
wire    ap_block_pp0_stage4_11001_ignoreCallOp323;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call318;
wire    ap_block_state19_pp0_stage5_iter1_ignore_call318;
wire    ap_block_state32_pp0_stage5_iter2_ignore_call318;
wire    ap_block_pp0_stage5_11001_ignoreCallOp339;
reg   [16:0] exp_res_0_V_fu_452;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
reg   [16:0] exp_res_1_V_fu_456;
reg   [16:0] exp_res_2_V_fu_460;
reg   [16:0] exp_res_3_V_fu_464;
reg   [16:0] exp_res_4_V_fu_468;
reg   [16:0] exp_res_5_V_fu_472;
reg   [16:0] exp_res_6_V_fu_476;
reg   [16:0] exp_res_7_V_fu_480;
reg   [16:0] exp_res_8_V_fu_484;
reg   [16:0] exp_res_9_V_fu_488;
reg   [16:0] exp_res_10_V_fu_492;
reg   [16:0] exp_res_11_V_fu_496;
reg   [16:0] exp_res_12_V_fu_500;
reg    grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start_reg;
wire   [63:0] zext_ln225_fu_1735_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln225_1_fu_2148_p1;
wire   [63:0] zext_ln225_2_fu_2152_p1;
wire   [63:0] zext_ln225_3_fu_2156_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln225_4_fu_2177_p1;
wire   [63:0] zext_ln225_5_fu_2186_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln225_6_fu_2195_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln225_7_fu_2204_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln225_8_fu_2213_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln225_9_fu_2222_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln225_10_fu_2231_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln225_11_fu_2240_p1;
wire   [63:0] zext_ln225_12_fu_2249_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln235_fu_2446_p1;
reg    ap_block_pp0_stage6_01001;
reg   [16:0] grp_fu_699_p0;
wire   [25:0] zext_ln1118_fu_2455_p1;
wire   [25:0] zext_ln1118_1_fu_2459_p1;
wire   [25:0] zext_ln1118_2_fu_2463_p1;
wire   [25:0] zext_ln1118_3_fu_2467_p1;
wire   [25:0] zext_ln1118_4_fu_2471_p1;
wire   [25:0] zext_ln1118_5_fu_2475_p1;
wire   [25:0] zext_ln1118_6_fu_2479_p1;
wire   [25:0] zext_ln1118_7_fu_2483_p1;
wire   [25:0] zext_ln1118_8_fu_2487_p1;
wire   [25:0] zext_ln1118_9_fu_2491_p1;
wire   [25:0] zext_ln1118_10_fu_2495_p1;
wire   [25:0] zext_ln1118_11_fu_2499_p1;
wire   [25:0] zext_ln1118_12_fu_2503_p1;
reg  signed [17:0] grp_fu_699_p1;
wire   [25:0] grp_fu_699_p2;
wire  signed [15:0] icmp_ln1496_fu_838_p0;
wire  signed [15:0] icmp_ln1496_fu_838_p1;
wire  signed [15:0] icmp_ln1496_1_fu_844_p0;
wire  signed [15:0] icmp_ln1496_1_fu_844_p1;
wire  signed [15:0] icmp_ln1496_3_fu_850_p0;
wire  signed [15:0] icmp_ln1496_3_fu_850_p1;
wire  signed [15:0] icmp_ln1496_4_fu_856_p0;
wire  signed [15:0] icmp_ln1496_4_fu_856_p1;
wire  signed [15:0] icmp_ln1496_7_fu_862_p0;
wire  signed [15:0] icmp_ln1496_7_fu_862_p1;
wire  signed [15:0] icmp_ln1496_8_fu_868_p0;
wire  signed [15:0] icmp_ln1496_8_fu_868_p1;
wire   [15:0] select_ln65_fu_874_p3;
wire   [15:0] select_ln65_1_fu_879_p3;
wire   [0:0] icmp_ln1496_2_fu_884_p2;
wire   [15:0] select_ln65_3_fu_898_p3;
wire   [15:0] select_ln65_4_fu_903_p3;
wire   [0:0] icmp_ln1496_5_fu_908_p2;
wire   [15:0] select_ln65_2_fu_890_p3;
wire   [15:0] select_ln65_5_fu_914_p3;
wire   [0:0] icmp_ln1496_6_fu_922_p2;
wire   [15:0] select_ln65_7_fu_936_p3;
wire   [15:0] select_ln65_8_fu_941_p3;
wire   [0:0] icmp_ln1496_9_fu_946_p2;
wire   [15:0] select_ln65_9_fu_952_p3;
wire   [0:0] icmp_ln1496_10_fu_960_p2;
wire   [0:0] icmp_ln1496_11_fu_972_p2;
wire   [15:0] x_max_V_fu_976_p3;
wire  signed [16:0] sext_ln703_fu_982_p1;
wire  signed [16:0] sext_ln703_1_fu_985_p1;
wire   [16:0] sub_ln1193_fu_989_p2;
wire   [0:0] tmp_28_fu_1003_p3;
wire   [0:0] tmp_27_fu_995_p3;
wire   [0:0] xor_ln786_fu_1011_p2;
wire   [0:0] xor_ln340_fu_1029_p2;
wire  signed [16:0] sext_ln703_2_fu_1041_p1;
wire   [16:0] sub_ln1193_1_fu_1044_p2;
wire   [0:0] tmp_30_fu_1058_p3;
wire   [0:0] tmp_29_fu_1050_p3;
wire   [0:0] xor_ln786_1_fu_1066_p2;
wire   [0:0] xor_ln340_1_fu_1084_p2;
wire  signed [16:0] sext_ln703_3_fu_1096_p1;
wire   [16:0] sub_ln1193_2_fu_1099_p2;
wire   [0:0] tmp_32_fu_1113_p3;
wire   [0:0] tmp_31_fu_1105_p3;
wire   [0:0] xor_ln786_2_fu_1121_p2;
wire   [0:0] xor_ln340_2_fu_1139_p2;
wire  signed [16:0] sext_ln703_4_fu_1151_p1;
wire   [16:0] sub_ln1193_3_fu_1154_p2;
wire   [0:0] tmp_34_fu_1168_p3;
wire   [0:0] tmp_33_fu_1160_p3;
wire   [0:0] xor_ln786_3_fu_1176_p2;
wire   [0:0] xor_ln340_3_fu_1194_p2;
wire  signed [16:0] sext_ln703_5_fu_1206_p1;
wire   [16:0] sub_ln1193_4_fu_1209_p2;
wire   [0:0] tmp_36_fu_1223_p3;
wire   [0:0] tmp_35_fu_1215_p3;
wire   [0:0] xor_ln786_4_fu_1231_p2;
wire   [0:0] xor_ln340_4_fu_1249_p2;
wire  signed [16:0] sext_ln703_6_fu_1261_p1;
wire   [16:0] sub_ln1193_5_fu_1264_p2;
wire   [0:0] tmp_38_fu_1278_p3;
wire   [0:0] tmp_37_fu_1270_p3;
wire   [0:0] xor_ln786_5_fu_1286_p2;
wire   [0:0] xor_ln340_5_fu_1304_p2;
wire  signed [16:0] sext_ln703_7_fu_1316_p1;
wire   [16:0] sub_ln1193_6_fu_1319_p2;
wire   [0:0] tmp_40_fu_1333_p3;
wire   [0:0] tmp_39_fu_1325_p3;
wire   [0:0] xor_ln786_6_fu_1341_p2;
wire   [0:0] xor_ln340_6_fu_1359_p2;
wire  signed [16:0] sext_ln703_8_fu_1371_p1;
wire   [16:0] sub_ln1193_7_fu_1374_p2;
wire   [0:0] tmp_42_fu_1388_p3;
wire   [0:0] tmp_41_fu_1380_p3;
wire   [0:0] xor_ln786_7_fu_1396_p2;
wire   [0:0] xor_ln340_7_fu_1414_p2;
wire  signed [16:0] sext_ln703_9_fu_1426_p1;
wire   [16:0] sub_ln1193_8_fu_1429_p2;
wire   [0:0] tmp_44_fu_1443_p3;
wire   [0:0] tmp_43_fu_1435_p3;
wire   [0:0] xor_ln786_8_fu_1451_p2;
wire   [0:0] xor_ln340_8_fu_1469_p2;
wire  signed [16:0] sext_ln703_10_fu_1481_p1;
wire   [16:0] sub_ln1193_9_fu_1484_p2;
wire   [0:0] tmp_46_fu_1498_p3;
wire   [0:0] tmp_45_fu_1490_p3;
wire   [0:0] xor_ln786_9_fu_1506_p2;
wire   [0:0] xor_ln340_9_fu_1524_p2;
wire  signed [16:0] sext_ln703_11_fu_1536_p1;
wire   [16:0] sub_ln1193_10_fu_1539_p2;
wire   [0:0] tmp_48_fu_1553_p3;
wire   [0:0] tmp_47_fu_1545_p3;
wire   [0:0] xor_ln786_10_fu_1561_p2;
wire   [0:0] xor_ln340_10_fu_1579_p2;
wire  signed [16:0] sext_ln703_12_fu_1591_p1;
wire   [16:0] sub_ln1193_11_fu_1594_p2;
wire   [0:0] tmp_50_fu_1608_p3;
wire   [0:0] tmp_49_fu_1600_p3;
wire   [0:0] xor_ln786_11_fu_1616_p2;
wire   [0:0] xor_ln340_11_fu_1634_p2;
wire  signed [16:0] sext_ln703_13_fu_1646_p1;
wire   [16:0] sub_ln1193_12_fu_1649_p2;
wire   [0:0] tmp_52_fu_1663_p3;
wire   [0:0] tmp_51_fu_1655_p3;
wire   [0:0] xor_ln786_12_fu_1671_p2;
wire   [0:0] xor_ln340_12_fu_1689_p2;
wire   [0:0] xor_ln340_13_fu_1023_p2;
wire   [9:0] tmp_fu_1701_p4;
wire   [0:0] and_ln786_fu_1017_p2;
wire   [0:0] or_ln340_fu_1035_p2;
wire   [9:0] select_ln340_fu_1711_p3;
wire   [9:0] select_ln388_fu_1719_p3;
wire   [9:0] y_V_fu_1727_p3;
wire   [0:0] xor_ln340_14_fu_1078_p2;
wire   [9:0] tmp_14_fu_1740_p4;
wire   [0:0] and_ln786_1_fu_1072_p2;
wire   [0:0] or_ln340_1_fu_1090_p2;
wire   [9:0] select_ln340_2_fu_1750_p3;
wire   [9:0] select_ln388_1_fu_1758_p3;
wire   [0:0] xor_ln340_15_fu_1133_p2;
wire   [9:0] tmp_15_fu_1774_p4;
wire   [0:0] and_ln786_2_fu_1127_p2;
wire   [0:0] or_ln340_2_fu_1145_p2;
wire   [9:0] select_ln340_4_fu_1784_p3;
wire   [9:0] select_ln388_2_fu_1792_p3;
wire   [0:0] xor_ln340_16_fu_1188_p2;
wire   [9:0] tmp_16_fu_1808_p4;
wire   [0:0] and_ln786_3_fu_1182_p2;
wire   [0:0] or_ln340_3_fu_1200_p2;
wire   [9:0] select_ln340_6_fu_1818_p3;
wire   [9:0] select_ln388_3_fu_1826_p3;
wire   [0:0] xor_ln340_17_fu_1243_p2;
wire   [9:0] tmp_17_fu_1842_p4;
wire   [0:0] and_ln786_4_fu_1237_p2;
wire   [0:0] or_ln340_4_fu_1255_p2;
wire   [9:0] select_ln340_8_fu_1852_p3;
wire   [9:0] select_ln388_4_fu_1860_p3;
wire   [0:0] xor_ln340_18_fu_1298_p2;
wire   [9:0] tmp_18_fu_1876_p4;
wire   [0:0] and_ln786_5_fu_1292_p2;
wire   [0:0] or_ln340_5_fu_1310_p2;
wire   [9:0] select_ln340_10_fu_1886_p3;
wire   [9:0] select_ln388_5_fu_1894_p3;
wire   [0:0] xor_ln340_19_fu_1353_p2;
wire   [9:0] tmp_19_fu_1910_p4;
wire   [0:0] and_ln786_6_fu_1347_p2;
wire   [0:0] or_ln340_6_fu_1365_p2;
wire   [9:0] select_ln340_12_fu_1920_p3;
wire   [9:0] select_ln388_6_fu_1928_p3;
wire   [0:0] xor_ln340_20_fu_1408_p2;
wire   [9:0] tmp_20_fu_1944_p4;
wire   [0:0] and_ln786_7_fu_1402_p2;
wire   [0:0] or_ln340_7_fu_1420_p2;
wire   [9:0] select_ln340_14_fu_1954_p3;
wire   [9:0] select_ln388_7_fu_1962_p3;
wire   [0:0] xor_ln340_21_fu_1463_p2;
wire   [9:0] tmp_21_fu_1978_p4;
wire   [0:0] and_ln786_8_fu_1457_p2;
wire   [0:0] or_ln340_8_fu_1475_p2;
wire   [9:0] select_ln340_16_fu_1988_p3;
wire   [9:0] select_ln388_8_fu_1996_p3;
wire   [0:0] xor_ln340_22_fu_1518_p2;
wire   [9:0] tmp_22_fu_2012_p4;
wire   [0:0] and_ln786_9_fu_1512_p2;
wire   [0:0] or_ln340_9_fu_1530_p2;
wire   [9:0] select_ln340_18_fu_2022_p3;
wire   [9:0] select_ln388_9_fu_2030_p3;
wire   [0:0] xor_ln340_23_fu_1573_p2;
wire   [9:0] tmp_23_fu_2046_p4;
wire   [0:0] and_ln786_10_fu_1567_p2;
wire   [0:0] or_ln340_10_fu_1585_p2;
wire   [9:0] select_ln340_20_fu_2056_p3;
wire   [9:0] select_ln388_10_fu_2064_p3;
wire   [0:0] xor_ln340_24_fu_1628_p2;
wire   [9:0] tmp_24_fu_2080_p4;
wire   [0:0] and_ln786_11_fu_1622_p2;
wire   [0:0] or_ln340_11_fu_1640_p2;
wire   [9:0] select_ln340_22_fu_2090_p3;
wire   [9:0] select_ln388_11_fu_2098_p3;
wire   [0:0] xor_ln340_25_fu_1683_p2;
wire   [9:0] tmp_25_fu_2114_p4;
wire   [0:0] and_ln786_12_fu_1677_p2;
wire   [0:0] or_ln340_12_fu_1695_p2;
wire   [9:0] select_ln340_24_fu_2124_p3;
wire   [9:0] select_ln388_12_fu_2132_p3;
wire  signed [17:0] rhs_V_fu_2261_p0;
wire  signed [18:0] lhs_V_fu_2258_p1;
wire  signed [18:0] rhs_V_fu_2261_p1;
wire   [18:0] ret_V_fu_2265_p2;
wire  signed [17:0] p_Val2_22_fu_2279_p0;
wire   [17:0] p_Val2_22_fu_2279_p2;
wire   [0:0] p_Result_20_fu_2284_p3;
wire   [0:0] p_Result_s_fu_2271_p3;
wire   [0:0] xor_ln786_13_fu_2292_p2;
wire   [0:0] xor_ln340_27_fu_2310_p2;
wire   [0:0] xor_ln340_26_fu_2304_p2;
wire   [0:0] underflow_fu_2298_p2;
wire   [0:0] or_ln340_13_fu_2316_p2;
wire   [17:0] select_ln340_26_fu_2322_p3;
wire   [17:0] select_ln388_13_fu_2330_p3;
wire  signed [17:0] p_Val2_23_fu_2338_p3;
wire  signed [17:0] rhs_V_1_fu_2350_p0;
wire  signed [18:0] lhs_V_1_fu_2346_p1;
wire  signed [18:0] rhs_V_1_fu_2350_p1;
wire   [18:0] ret_V_1_fu_2354_p2;
wire  signed [17:0] p_Val2_26_fu_2368_p0;
wire   [17:0] p_Val2_26_fu_2368_p2;
wire   [0:0] p_Result_22_fu_2374_p3;
wire   [0:0] p_Result_21_fu_2360_p3;
wire   [0:0] xor_ln786_14_fu_2382_p2;
wire   [0:0] xor_ln340_29_fu_2400_p2;
wire   [0:0] xor_ln340_28_fu_2394_p2;
wire   [9:0] tmp_26_fu_2412_p4;
wire   [0:0] underflow_1_fu_2388_p2;
wire   [0:0] or_ln340_14_fu_2406_p2;
wire   [9:0] select_ln340_28_fu_2422_p3;
wire   [9:0] select_ln388_14_fu_2430_p3;
reg   [12:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start_reg = 1'b0;
end

softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s_exp_tabxdS #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table1_address0),
    .ce0(exp_table1_ce0),
    .q0(exp_table1_q0)
);

softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s_invert_yd2 #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table2_address0),
    .ce0(invert_table2_ce0),
    .q0(invert_table2_q0)
);

reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V(exp_res_0_V_fu_452),
    .x_1_V(exp_res_1_V_fu_456),
    .x_2_V(exp_res_2_V_fu_460),
    .x_3_V(exp_res_3_V_fu_464),
    .x_4_V(exp_res_4_V_fu_468),
    .x_5_V(exp_res_5_V_fu_472),
    .x_6_V(exp_res_6_V_fu_476),
    .x_7_V(exp_res_7_V_fu_480),
    .x_8_V(exp_res_8_V_fu_484),
    .x_9_V(exp_res_9_V_fu_488),
    .x_10_V(exp_res_10_V_fu_492),
    .x_11_V(exp_res_11_V_fu_496),
    .x_12_V(exp_res_12_V_fu_500),
    .x_V_offset(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_x_V_offset),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_ce)
);

reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start),
    .ap_done(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_done),
    .ap_idle(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_idle),
    .ap_ready(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ready),
    .x_8_V(exp_res_8_V_fu_484),
    .x_9_V(exp_res_9_V_fu_488),
    .x_10_V(exp_res_10_V_fu_492),
    .x_11_V(exp_res_11_V_fu_496),
    .x_12_V(exp_res_12_V_fu_500),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ready == 1'b1)) begin
            grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_array_0_V_reg_2590 <= data_V_data_0_V_dout;
        data_array_10_V_reg_2650 <= data_V_data_10_V_dout;
        data_array_11_V_reg_2656 <= data_V_data_11_V_dout;
        data_array_12_V_reg_2662 <= data_V_data_12_V_dout;
        data_array_1_V_reg_2596 <= data_V_data_1_V_dout;
        data_array_2_V_reg_2602 <= data_V_data_2_V_dout;
        data_array_3_V_reg_2608 <= data_V_data_3_V_dout;
        data_array_4_V_reg_2614 <= data_V_data_4_V_dout;
        data_array_5_V_reg_2620 <= data_V_data_5_V_dout;
        data_array_6_V_reg_2626 <= data_V_data_6_V_dout;
        data_array_7_V_reg_2632 <= data_V_data_7_V_dout;
        data_array_8_V_reg_2638 <= data_V_data_8_V_dout;
        data_array_9_V_reg_2644 <= data_V_data_9_V_dout;
        exp_res_10_V_1_reg_2879_pp0_iter2_reg <= exp_res_10_V_1_reg_2879;
        icmp_ln1496_1_reg_2674 <= icmp_ln1496_1_fu_844_p2;
        icmp_ln1496_3_reg_2679 <= icmp_ln1496_3_fu_850_p2;
        icmp_ln1496_4_reg_2684 <= icmp_ln1496_4_fu_856_p2;
        icmp_ln1496_7_reg_2689 <= icmp_ln1496_7_fu_862_p2;
        icmp_ln1496_8_reg_2694 <= icmp_ln1496_8_fu_868_p2;
        icmp_ln1496_reg_2669 <= icmp_ln1496_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_0_V_1_reg_2776 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_0_V_1_reg_2776_pp0_iter1_reg <= exp_res_0_V_1_reg_2776;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        exp_res_0_V_fu_452 <= exp_res_0_V_1_reg_2776;
        exp_res_1_V_fu_456 <= exp_res_1_V_1_reg_2787;
        exp_res_2_V_fu_460 <= exp_res_2_V_1_reg_2798;
        exp_res_3_V_1_reg_2809 <= exp_table1_q0;
        exp_res_3_V_fu_464 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_10_V_1_reg_2879 <= exp_table1_q0;
        exp_res_10_V_fu_492 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_11_V_1_reg_2889 <= exp_table1_q0;
        exp_res_11_V_fu_496 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_11_V_1_reg_2889_pp0_iter2_reg <= exp_res_11_V_1_reg_2889;
        select_ln65_10_reg_2705 <= select_ln65_10_fu_965_p3;
        select_ln65_6_reg_2699 <= select_ln65_6_fu_928_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_12_V_1_reg_2899 <= exp_table1_q0;
        exp_res_12_V_fu_500 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_12_V_1_reg_2899_pp0_iter2_reg <= exp_res_12_V_1_reg_2899;
        y_V_10_reg_2761 <= y_V_10_fu_2072_p3;
        y_V_11_reg_2766 <= y_V_11_fu_2106_p3;
        y_V_12_reg_2771 <= y_V_12_fu_2140_p3;
        y_V_1_reg_2716 <= y_V_1_fu_1766_p3;
        y_V_2_reg_2721 <= y_V_2_fu_1800_p3;
        y_V_3_reg_2726 <= y_V_3_fu_1834_p3;
        y_V_4_reg_2731 <= y_V_4_fu_1868_p3;
        y_V_5_reg_2736 <= y_V_5_fu_1902_p3;
        y_V_6_reg_2741 <= y_V_6_fu_1936_p3;
        y_V_7_reg_2746 <= y_V_7_fu_1970_p3;
        y_V_8_reg_2751 <= y_V_8_fu_2004_p3;
        y_V_9_reg_2756 <= y_V_9_fu_2038_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_1_V_1_reg_2787 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_1_V_1_reg_2787_pp0_iter1_reg <= exp_res_1_V_1_reg_2787;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_2_V_1_reg_2798 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_res_2_V_1_reg_2798_pp0_iter1_reg <= exp_res_2_V_1_reg_2798;
        y_V_13_reg_2910 <= y_V_13_fu_2438_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        exp_res_3_V_1_reg_2809_pp0_iter1_reg <= exp_res_3_V_1_reg_2809;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_4_V_1_reg_2819 <= exp_table1_q0;
        exp_res_4_V_fu_468 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        exp_res_4_V_1_reg_2819_pp0_iter1_reg <= exp_res_4_V_1_reg_2819;
        sext_ln241_reg_2920 <= sext_ln241_fu_2450_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_5_V_1_reg_2829 <= exp_table1_q0;
        exp_res_5_V_fu_472 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        exp_res_5_V_1_reg_2829_pp0_iter1_reg <= exp_res_5_V_1_reg_2829;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_6_V_1_reg_2839 <= exp_table1_q0;
        exp_res_6_V_fu_476 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        exp_res_6_V_1_reg_2839_pp0_iter1_reg <= exp_res_6_V_1_reg_2839;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_7_V_1_reg_2849 <= exp_table1_q0;
        exp_res_7_V_fu_480 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        exp_res_7_V_1_reg_2849_pp0_iter1_reg <= exp_res_7_V_1_reg_2849;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_8_V_1_reg_2859 <= exp_table1_q0;
        exp_res_8_V_fu_484 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        exp_res_8_V_1_reg_2859_pp0_iter1_reg <= exp_res_8_V_1_reg_2859;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_res_9_V_1_reg_2869 <= exp_table1_q0;
        exp_res_9_V_fu_488 <= exp_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        exp_res_9_V_1_reg_2869_pp0_iter1_reg <= exp_res_9_V_1_reg_2869;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_Val2_19_reg_2904 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_data_0_V_reg_2925 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_data_10_V_reg_2975 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_data_11_V_reg_2980 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_data_1_V_reg_2930 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_data_2_V_reg_2935 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_data_3_V_reg_2940 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_data_4_V_reg_2945 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_data_5_V_reg_2950 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_6_V_reg_2955 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_data_7_V_reg_2960 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_data_8_V_reg_2965 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_data_9_V_reg_2970 <= {{grp_fu_699_p2[25:10]}};
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_10_V_blk_n = data_V_data_10_V_empty_n;
    end else begin
        data_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_10_V_read = 1'b1;
    end else begin
        data_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_11_V_blk_n = data_V_data_11_V_empty_n;
    end else begin
        data_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_11_V_read = 1'b1;
    end else begin
        data_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_12_V_blk_n = data_V_data_12_V_empty_n;
    end else begin
        data_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_12_V_read = 1'b1;
    end else begin
        data_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n;
    end else begin
        data_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_8_V_read = 1'b1;
    end else begin
        data_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n;
    end else begin
        data_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_9_V_read = 1'b1;
    end else begin
        data_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_table1_address0 = zext_ln225_12_fu_2249_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_address0 = zext_ln225_11_fu_2240_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_10_fu_2231_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_9_fu_2222_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_8_fu_2213_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_7_fu_2204_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_6_fu_2195_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_5_fu_2186_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        exp_table1_address0 = zext_ln225_4_fu_2177_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_3_fu_2156_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_2_fu_2152_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_1_fu_2148_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table1_address0 = zext_ln225_fu_1735_p1;
    end else begin
        exp_table1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        exp_table1_ce0 = 1'b1;
    end else begin
        exp_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_699_p0 = zext_ln1118_12_fu_2503_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_699_p0 = zext_ln1118_11_fu_2499_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_699_p0 = zext_ln1118_10_fu_2495_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_699_p0 = zext_ln1118_9_fu_2491_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_699_p0 = zext_ln1118_8_fu_2487_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_699_p0 = zext_ln1118_7_fu_2483_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_699_p0 = zext_ln1118_6_fu_2479_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p0 = zext_ln1118_5_fu_2475_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p0 = zext_ln1118_4_fu_2471_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p0 = zext_ln1118_3_fu_2467_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p0 = zext_ln1118_2_fu_2463_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p0 = zext_ln1118_1_fu_2459_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p0 = zext_ln1118_fu_2455_p1;
    end else begin
        grp_fu_699_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_699_p1 = sext_ln241_reg_2920;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_699_p1 = sext_ln241_fu_2450_p1;
    end else begin
        grp_fu_699_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp324) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp321) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp320) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_x_V_offset = 5'd4;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_x_V_offset = 5'd0;
        end else begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_x_V_offset = 'bx;
        end
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_x_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp339) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp323) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        invert_table2_ce0 = 1'b1;
    end else begin
        invert_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_10_V_blk_n = res_V_data_10_V_full_n;
    end else begin
        res_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_10_V_write = 1'b1;
    end else begin
        res_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_11_V_blk_n = res_V_data_11_V_full_n;
    end else begin
        res_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_11_V_write = 1'b1;
    end else begin
        res_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_12_V_blk_n = res_V_data_12_V_full_n;
    end else begin
        res_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_12_V_write = 1'b1;
    end else begin
        res_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_8_V_blk_n = res_V_data_8_V_full_n;
    end else begin
        res_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_8_V_write = 1'b1;
    end else begin
        res_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_9_V_blk_n = res_V_data_9_V_full_n;
    end else begin
        res_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        res_V_data_9_V_write = 1'b1;
    end else begin
        res_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln786_10_fu_1567_p2 = (xor_ln786_10_fu_1561_p2 & tmp_47_fu_1545_p3);

assign and_ln786_11_fu_1622_p2 = (xor_ln786_11_fu_1616_p2 & tmp_49_fu_1600_p3);

assign and_ln786_12_fu_1677_p2 = (xor_ln786_12_fu_1671_p2 & tmp_51_fu_1655_p3);

assign and_ln786_1_fu_1072_p2 = (xor_ln786_1_fu_1066_p2 & tmp_29_fu_1050_p3);

assign and_ln786_2_fu_1127_p2 = (xor_ln786_2_fu_1121_p2 & tmp_31_fu_1105_p3);

assign and_ln786_3_fu_1182_p2 = (xor_ln786_3_fu_1176_p2 & tmp_33_fu_1160_p3);

assign and_ln786_4_fu_1237_p2 = (xor_ln786_4_fu_1231_p2 & tmp_35_fu_1215_p3);

assign and_ln786_5_fu_1292_p2 = (xor_ln786_5_fu_1286_p2 & tmp_37_fu_1270_p3);

assign and_ln786_6_fu_1347_p2 = (xor_ln786_6_fu_1341_p2 & tmp_39_fu_1325_p3);

assign and_ln786_7_fu_1402_p2 = (xor_ln786_7_fu_1396_p2 & tmp_41_fu_1380_p3);

assign and_ln786_8_fu_1457_p2 = (xor_ln786_8_fu_1451_p2 & tmp_43_fu_1435_p3);

assign and_ln786_9_fu_1512_p2 = (xor_ln786_9_fu_1506_p2 & tmp_45_fu_1490_p3);

assign and_ln786_fu_1017_p2 = (xor_ln786_fu_1011_p2 & tmp_27_fu_995_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op47 == 1'b0) | (ap_start == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((io_acc_block_signal_op47 == 1'b0) | (ap_start == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp320 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp321 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp323 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp324 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp339 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((io_acc_block_signal_op467 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((io_acc_block_signal_op467 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((io_acc_block_signal_op467 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter1_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage5_iter1_ignore_call303 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage5_iter1_ignore_call318 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((io_acc_block_signal_op47 == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state20_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter2_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter2_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter2_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage5_iter2_ignore_call303 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage5_iter2_ignore_call318 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp0_stage6_iter2 = (io_acc_block_signal_op467 == 1'b0);
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call302 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call303 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call318 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_699_p2 = ($signed({{1'b0}, {grp_fu_699_p0}}) * $signed(grp_fu_699_p1));

assign grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start = grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_start_reg;

assign icmp_ln1496_10_fu_960_p2 = (($signed(select_ln65_9_fu_952_p3) < $signed(data_array_12_V_reg_2662)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_972_p2 = (($signed(select_ln65_6_reg_2699) < $signed(select_ln65_10_reg_2705)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_844_p0 = data_V_data_2_V_dout;

assign icmp_ln1496_1_fu_844_p1 = data_V_data_3_V_dout;

assign icmp_ln1496_1_fu_844_p2 = (($signed(icmp_ln1496_1_fu_844_p0) < $signed(icmp_ln1496_1_fu_844_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_884_p2 = (($signed(select_ln65_fu_874_p3) < $signed(select_ln65_1_fu_879_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_850_p0 = data_V_data_4_V_dout;

assign icmp_ln1496_3_fu_850_p1 = data_V_data_5_V_dout;

assign icmp_ln1496_3_fu_850_p2 = (($signed(icmp_ln1496_3_fu_850_p0) < $signed(icmp_ln1496_3_fu_850_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_856_p0 = data_V_data_6_V_dout;

assign icmp_ln1496_4_fu_856_p1 = data_V_data_7_V_dout;

assign icmp_ln1496_4_fu_856_p2 = (($signed(icmp_ln1496_4_fu_856_p0) < $signed(icmp_ln1496_4_fu_856_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_908_p2 = (($signed(select_ln65_3_fu_898_p3) < $signed(select_ln65_4_fu_903_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_922_p2 = (($signed(select_ln65_2_fu_890_p3) < $signed(select_ln65_5_fu_914_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_862_p0 = data_V_data_8_V_dout;

assign icmp_ln1496_7_fu_862_p1 = data_V_data_9_V_dout;

assign icmp_ln1496_7_fu_862_p2 = (($signed(icmp_ln1496_7_fu_862_p0) < $signed(icmp_ln1496_7_fu_862_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_868_p0 = data_V_data_10_V_dout;

assign icmp_ln1496_8_fu_868_p1 = data_V_data_11_V_dout;

assign icmp_ln1496_8_fu_868_p2 = (($signed(icmp_ln1496_8_fu_868_p0) < $signed(icmp_ln1496_8_fu_868_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_946_p2 = (($signed(select_ln65_7_fu_936_p3) < $signed(select_ln65_8_fu_941_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_838_p0 = data_V_data_0_V_dout;

assign icmp_ln1496_fu_838_p1 = data_V_data_1_V_dout;

assign icmp_ln1496_fu_838_p2 = (($signed(icmp_ln1496_fu_838_p0) < $signed(icmp_ln1496_fu_838_p1)) ? 1'b1 : 1'b0);

assign invert_table2_address0 = zext_ln235_fu_2446_p1;

assign io_acc_block_signal_op467 = (res_V_data_9_V_full_n & res_V_data_8_V_full_n & res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_12_V_full_n & res_V_data_11_V_full_n & res_V_data_10_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op47 = (data_V_data_9_V_empty_n & data_V_data_8_V_empty_n & data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_12_V_empty_n & data_V_data_11_V_empty_n & data_V_data_10_V_empty_n & data_V_data_0_V_empty_n);

assign lhs_V_1_fu_2346_p1 = p_Val2_23_fu_2338_p3;

assign lhs_V_fu_2258_p1 = p_Val2_19_reg_2904;

assign or_ln340_10_fu_1585_p2 = (xor_ln340_10_fu_1579_p2 | tmp_48_fu_1553_p3);

assign or_ln340_11_fu_1640_p2 = (xor_ln340_11_fu_1634_p2 | tmp_50_fu_1608_p3);

assign or_ln340_12_fu_1695_p2 = (xor_ln340_12_fu_1689_p2 | tmp_52_fu_1663_p3);

assign or_ln340_13_fu_2316_p2 = (xor_ln340_27_fu_2310_p2 | p_Result_20_fu_2284_p3);

assign or_ln340_14_fu_2406_p2 = (xor_ln340_29_fu_2400_p2 | p_Result_22_fu_2374_p3);

assign or_ln340_1_fu_1090_p2 = (xor_ln340_1_fu_1084_p2 | tmp_30_fu_1058_p3);

assign or_ln340_2_fu_1145_p2 = (xor_ln340_2_fu_1139_p2 | tmp_32_fu_1113_p3);

assign or_ln340_3_fu_1200_p2 = (xor_ln340_3_fu_1194_p2 | tmp_34_fu_1168_p3);

assign or_ln340_4_fu_1255_p2 = (xor_ln340_4_fu_1249_p2 | tmp_36_fu_1223_p3);

assign or_ln340_5_fu_1310_p2 = (xor_ln340_5_fu_1304_p2 | tmp_38_fu_1278_p3);

assign or_ln340_6_fu_1365_p2 = (xor_ln340_6_fu_1359_p2 | tmp_40_fu_1333_p3);

assign or_ln340_7_fu_1420_p2 = (xor_ln340_7_fu_1414_p2 | tmp_42_fu_1388_p3);

assign or_ln340_8_fu_1475_p2 = (xor_ln340_8_fu_1469_p2 | tmp_44_fu_1443_p3);

assign or_ln340_9_fu_1530_p2 = (xor_ln340_9_fu_1524_p2 | tmp_46_fu_1498_p3);

assign or_ln340_fu_1035_p2 = (xor_ln340_fu_1029_p2 | tmp_28_fu_1003_p3);

assign p_Result_20_fu_2284_p3 = p_Val2_22_fu_2279_p2[32'd17];

assign p_Result_21_fu_2360_p3 = ret_V_1_fu_2354_p2[32'd18];

assign p_Result_22_fu_2374_p3 = p_Val2_26_fu_2368_p2[32'd17];

assign p_Result_s_fu_2271_p3 = ret_V_fu_2265_p2[32'd18];

assign p_Val2_22_fu_2279_p0 = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_return;

assign p_Val2_22_fu_2279_p2 = ($signed(p_Val2_22_fu_2279_p0) + $signed(p_Val2_19_reg_2904));

assign p_Val2_23_fu_2338_p3 = ((or_ln340_13_fu_2316_p2[0:0] === 1'b1) ? select_ln340_26_fu_2322_p3 : select_ln388_13_fu_2330_p3);

assign p_Val2_26_fu_2368_p0 = grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_return;

assign p_Val2_26_fu_2368_p2 = ($signed(p_Val2_26_fu_2368_p0) + $signed(p_Val2_23_fu_2338_p3));

assign res_V_data_0_V_din = tmp_data_0_V_reg_2925;

assign res_V_data_10_V_din = tmp_data_10_V_reg_2975;

assign res_V_data_11_V_din = tmp_data_11_V_reg_2980;

assign res_V_data_12_V_din = {{grp_fu_699_p2[25:10]}};

assign res_V_data_1_V_din = tmp_data_1_V_reg_2930;

assign res_V_data_2_V_din = tmp_data_2_V_reg_2935;

assign res_V_data_3_V_din = tmp_data_3_V_reg_2940;

assign res_V_data_4_V_din = tmp_data_4_V_reg_2945;

assign res_V_data_5_V_din = tmp_data_5_V_reg_2950;

assign res_V_data_6_V_din = tmp_data_6_V_reg_2955;

assign res_V_data_7_V_din = tmp_data_7_V_reg_2960;

assign res_V_data_8_V_din = tmp_data_8_V_reg_2965;

assign res_V_data_9_V_din = tmp_data_9_V_reg_2970;

assign ret_V_1_fu_2354_p2 = ($signed(lhs_V_1_fu_2346_p1) + $signed(rhs_V_1_fu_2350_p1));

assign ret_V_fu_2265_p2 = ($signed(lhs_V_fu_2258_p1) + $signed(rhs_V_fu_2261_p1));

assign rhs_V_1_fu_2350_p0 = grp_reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_fu_766_ap_return;

assign rhs_V_1_fu_2350_p1 = rhs_V_1_fu_2350_p0;

assign rhs_V_fu_2261_p0 = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_746_ap_return;

assign rhs_V_fu_2261_p1 = rhs_V_fu_2261_p0;

assign select_ln340_10_fu_1886_p3 = ((xor_ln340_18_fu_1298_p2[0:0] === 1'b1) ? 10'd511 : tmp_18_fu_1876_p4);

assign select_ln340_12_fu_1920_p3 = ((xor_ln340_19_fu_1353_p2[0:0] === 1'b1) ? 10'd511 : tmp_19_fu_1910_p4);

assign select_ln340_14_fu_1954_p3 = ((xor_ln340_20_fu_1408_p2[0:0] === 1'b1) ? 10'd511 : tmp_20_fu_1944_p4);

assign select_ln340_16_fu_1988_p3 = ((xor_ln340_21_fu_1463_p2[0:0] === 1'b1) ? 10'd511 : tmp_21_fu_1978_p4);

assign select_ln340_18_fu_2022_p3 = ((xor_ln340_22_fu_1518_p2[0:0] === 1'b1) ? 10'd511 : tmp_22_fu_2012_p4);

assign select_ln340_20_fu_2056_p3 = ((xor_ln340_23_fu_1573_p2[0:0] === 1'b1) ? 10'd511 : tmp_23_fu_2046_p4);

assign select_ln340_22_fu_2090_p3 = ((xor_ln340_24_fu_1628_p2[0:0] === 1'b1) ? 10'd511 : tmp_24_fu_2080_p4);

assign select_ln340_24_fu_2124_p3 = ((xor_ln340_25_fu_1683_p2[0:0] === 1'b1) ? 10'd511 : tmp_25_fu_2114_p4);

assign select_ln340_26_fu_2322_p3 = ((xor_ln340_26_fu_2304_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_22_fu_2279_p2);

assign select_ln340_28_fu_2422_p3 = ((xor_ln340_28_fu_2394_p2[0:0] === 1'b1) ? 10'd511 : tmp_26_fu_2412_p4);

assign select_ln340_2_fu_1750_p3 = ((xor_ln340_14_fu_1078_p2[0:0] === 1'b1) ? 10'd511 : tmp_14_fu_1740_p4);

assign select_ln340_4_fu_1784_p3 = ((xor_ln340_15_fu_1133_p2[0:0] === 1'b1) ? 10'd511 : tmp_15_fu_1774_p4);

assign select_ln340_6_fu_1818_p3 = ((xor_ln340_16_fu_1188_p2[0:0] === 1'b1) ? 10'd511 : tmp_16_fu_1808_p4);

assign select_ln340_8_fu_1852_p3 = ((xor_ln340_17_fu_1243_p2[0:0] === 1'b1) ? 10'd511 : tmp_17_fu_1842_p4);

assign select_ln340_fu_1711_p3 = ((xor_ln340_13_fu_1023_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_1701_p4);

assign select_ln388_10_fu_2064_p3 = ((and_ln786_10_fu_1567_p2[0:0] === 1'b1) ? 10'd512 : tmp_23_fu_2046_p4);

assign select_ln388_11_fu_2098_p3 = ((and_ln786_11_fu_1622_p2[0:0] === 1'b1) ? 10'd512 : tmp_24_fu_2080_p4);

assign select_ln388_12_fu_2132_p3 = ((and_ln786_12_fu_1677_p2[0:0] === 1'b1) ? 10'd512 : tmp_25_fu_2114_p4);

assign select_ln388_13_fu_2330_p3 = ((underflow_fu_2298_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_22_fu_2279_p2);

assign select_ln388_14_fu_2430_p3 = ((underflow_1_fu_2388_p2[0:0] === 1'b1) ? 10'd512 : tmp_26_fu_2412_p4);

assign select_ln388_1_fu_1758_p3 = ((and_ln786_1_fu_1072_p2[0:0] === 1'b1) ? 10'd512 : tmp_14_fu_1740_p4);

assign select_ln388_2_fu_1792_p3 = ((and_ln786_2_fu_1127_p2[0:0] === 1'b1) ? 10'd512 : tmp_15_fu_1774_p4);

assign select_ln388_3_fu_1826_p3 = ((and_ln786_3_fu_1182_p2[0:0] === 1'b1) ? 10'd512 : tmp_16_fu_1808_p4);

assign select_ln388_4_fu_1860_p3 = ((and_ln786_4_fu_1237_p2[0:0] === 1'b1) ? 10'd512 : tmp_17_fu_1842_p4);

assign select_ln388_5_fu_1894_p3 = ((and_ln786_5_fu_1292_p2[0:0] === 1'b1) ? 10'd512 : tmp_18_fu_1876_p4);

assign select_ln388_6_fu_1928_p3 = ((and_ln786_6_fu_1347_p2[0:0] === 1'b1) ? 10'd512 : tmp_19_fu_1910_p4);

assign select_ln388_7_fu_1962_p3 = ((and_ln786_7_fu_1402_p2[0:0] === 1'b1) ? 10'd512 : tmp_20_fu_1944_p4);

assign select_ln388_8_fu_1996_p3 = ((and_ln786_8_fu_1457_p2[0:0] === 1'b1) ? 10'd512 : tmp_21_fu_1978_p4);

assign select_ln388_9_fu_2030_p3 = ((and_ln786_9_fu_1512_p2[0:0] === 1'b1) ? 10'd512 : tmp_22_fu_2012_p4);

assign select_ln388_fu_1719_p3 = ((and_ln786_fu_1017_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_1701_p4);

assign select_ln65_10_fu_965_p3 = ((icmp_ln1496_10_fu_960_p2[0:0] === 1'b1) ? data_array_12_V_reg_2662 : select_ln65_9_fu_952_p3);

assign select_ln65_1_fu_879_p3 = ((icmp_ln1496_1_reg_2674[0:0] === 1'b1) ? data_array_3_V_reg_2608 : data_array_2_V_reg_2602);

assign select_ln65_2_fu_890_p3 = ((icmp_ln1496_2_fu_884_p2[0:0] === 1'b1) ? select_ln65_1_fu_879_p3 : select_ln65_fu_874_p3);

assign select_ln65_3_fu_898_p3 = ((icmp_ln1496_3_reg_2679[0:0] === 1'b1) ? data_array_5_V_reg_2620 : data_array_4_V_reg_2614);

assign select_ln65_4_fu_903_p3 = ((icmp_ln1496_4_reg_2684[0:0] === 1'b1) ? data_array_7_V_reg_2632 : data_array_6_V_reg_2626);

assign select_ln65_5_fu_914_p3 = ((icmp_ln1496_5_fu_908_p2[0:0] === 1'b1) ? select_ln65_4_fu_903_p3 : select_ln65_3_fu_898_p3);

assign select_ln65_6_fu_928_p3 = ((icmp_ln1496_6_fu_922_p2[0:0] === 1'b1) ? select_ln65_5_fu_914_p3 : select_ln65_2_fu_890_p3);

assign select_ln65_7_fu_936_p3 = ((icmp_ln1496_7_reg_2689[0:0] === 1'b1) ? data_array_9_V_reg_2644 : data_array_8_V_reg_2638);

assign select_ln65_8_fu_941_p3 = ((icmp_ln1496_8_reg_2694[0:0] === 1'b1) ? data_array_11_V_reg_2656 : data_array_10_V_reg_2650);

assign select_ln65_9_fu_952_p3 = ((icmp_ln1496_9_fu_946_p2[0:0] === 1'b1) ? select_ln65_8_fu_941_p3 : select_ln65_7_fu_936_p3);

assign select_ln65_fu_874_p3 = ((icmp_ln1496_reg_2669[0:0] === 1'b1) ? data_array_1_V_reg_2596 : data_array_0_V_reg_2590);

assign sext_ln241_fu_2450_p1 = $signed(invert_table2_q0);

assign sext_ln703_10_fu_1481_p1 = data_array_9_V_reg_2644;

assign sext_ln703_11_fu_1536_p1 = data_array_10_V_reg_2650;

assign sext_ln703_12_fu_1591_p1 = data_array_11_V_reg_2656;

assign sext_ln703_13_fu_1646_p1 = data_array_12_V_reg_2662;

assign sext_ln703_1_fu_985_p1 = $signed(x_max_V_fu_976_p3);

assign sext_ln703_2_fu_1041_p1 = data_array_1_V_reg_2596;

assign sext_ln703_3_fu_1096_p1 = data_array_2_V_reg_2602;

assign sext_ln703_4_fu_1151_p1 = data_array_3_V_reg_2608;

assign sext_ln703_5_fu_1206_p1 = data_array_4_V_reg_2614;

assign sext_ln703_6_fu_1261_p1 = data_array_5_V_reg_2620;

assign sext_ln703_7_fu_1316_p1 = data_array_6_V_reg_2626;

assign sext_ln703_8_fu_1371_p1 = data_array_7_V_reg_2632;

assign sext_ln703_9_fu_1426_p1 = data_array_8_V_reg_2638;

assign sext_ln703_fu_982_p1 = data_array_0_V_reg_2590;

assign sub_ln1193_10_fu_1539_p2 = ($signed(sext_ln703_11_fu_1536_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_11_fu_1594_p2 = ($signed(sext_ln703_12_fu_1591_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_12_fu_1649_p2 = ($signed(sext_ln703_13_fu_1646_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_1_fu_1044_p2 = ($signed(sext_ln703_2_fu_1041_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_2_fu_1099_p2 = ($signed(sext_ln703_3_fu_1096_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_3_fu_1154_p2 = ($signed(sext_ln703_4_fu_1151_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_4_fu_1209_p2 = ($signed(sext_ln703_5_fu_1206_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_5_fu_1264_p2 = ($signed(sext_ln703_6_fu_1261_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_6_fu_1319_p2 = ($signed(sext_ln703_7_fu_1316_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_7_fu_1374_p2 = ($signed(sext_ln703_8_fu_1371_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_8_fu_1429_p2 = ($signed(sext_ln703_9_fu_1426_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_9_fu_1484_p2 = ($signed(sext_ln703_10_fu_1481_p1) - $signed(sext_ln703_1_fu_985_p1));

assign sub_ln1193_fu_989_p2 = ($signed(sext_ln703_fu_982_p1) - $signed(sext_ln703_1_fu_985_p1));

assign tmp_14_fu_1740_p4 = {{sub_ln1193_1_fu_1044_p2[15:6]}};

assign tmp_15_fu_1774_p4 = {{sub_ln1193_2_fu_1099_p2[15:6]}};

assign tmp_16_fu_1808_p4 = {{sub_ln1193_3_fu_1154_p2[15:6]}};

assign tmp_17_fu_1842_p4 = {{sub_ln1193_4_fu_1209_p2[15:6]}};

assign tmp_18_fu_1876_p4 = {{sub_ln1193_5_fu_1264_p2[15:6]}};

assign tmp_19_fu_1910_p4 = {{sub_ln1193_6_fu_1319_p2[15:6]}};

assign tmp_20_fu_1944_p4 = {{sub_ln1193_7_fu_1374_p2[15:6]}};

assign tmp_21_fu_1978_p4 = {{sub_ln1193_8_fu_1429_p2[15:6]}};

assign tmp_22_fu_2012_p4 = {{sub_ln1193_9_fu_1484_p2[15:6]}};

assign tmp_23_fu_2046_p4 = {{sub_ln1193_10_fu_1539_p2[15:6]}};

assign tmp_24_fu_2080_p4 = {{sub_ln1193_11_fu_1594_p2[15:6]}};

assign tmp_25_fu_2114_p4 = {{sub_ln1193_12_fu_1649_p2[15:6]}};

assign tmp_26_fu_2412_p4 = {{p_Val2_26_fu_2368_p2[17:8]}};

assign tmp_27_fu_995_p3 = sub_ln1193_fu_989_p2[32'd16];

assign tmp_28_fu_1003_p3 = sub_ln1193_fu_989_p2[32'd15];

assign tmp_29_fu_1050_p3 = sub_ln1193_1_fu_1044_p2[32'd16];

assign tmp_30_fu_1058_p3 = sub_ln1193_1_fu_1044_p2[32'd15];

assign tmp_31_fu_1105_p3 = sub_ln1193_2_fu_1099_p2[32'd16];

assign tmp_32_fu_1113_p3 = sub_ln1193_2_fu_1099_p2[32'd15];

assign tmp_33_fu_1160_p3 = sub_ln1193_3_fu_1154_p2[32'd16];

assign tmp_34_fu_1168_p3 = sub_ln1193_3_fu_1154_p2[32'd15];

assign tmp_35_fu_1215_p3 = sub_ln1193_4_fu_1209_p2[32'd16];

assign tmp_36_fu_1223_p3 = sub_ln1193_4_fu_1209_p2[32'd15];

assign tmp_37_fu_1270_p3 = sub_ln1193_5_fu_1264_p2[32'd16];

assign tmp_38_fu_1278_p3 = sub_ln1193_5_fu_1264_p2[32'd15];

assign tmp_39_fu_1325_p3 = sub_ln1193_6_fu_1319_p2[32'd16];

assign tmp_40_fu_1333_p3 = sub_ln1193_6_fu_1319_p2[32'd15];

assign tmp_41_fu_1380_p3 = sub_ln1193_7_fu_1374_p2[32'd16];

assign tmp_42_fu_1388_p3 = sub_ln1193_7_fu_1374_p2[32'd15];

assign tmp_43_fu_1435_p3 = sub_ln1193_8_fu_1429_p2[32'd16];

assign tmp_44_fu_1443_p3 = sub_ln1193_8_fu_1429_p2[32'd15];

assign tmp_45_fu_1490_p3 = sub_ln1193_9_fu_1484_p2[32'd16];

assign tmp_46_fu_1498_p3 = sub_ln1193_9_fu_1484_p2[32'd15];

assign tmp_47_fu_1545_p3 = sub_ln1193_10_fu_1539_p2[32'd16];

assign tmp_48_fu_1553_p3 = sub_ln1193_10_fu_1539_p2[32'd15];

assign tmp_49_fu_1600_p3 = sub_ln1193_11_fu_1594_p2[32'd16];

assign tmp_50_fu_1608_p3 = sub_ln1193_11_fu_1594_p2[32'd15];

assign tmp_51_fu_1655_p3 = sub_ln1193_12_fu_1649_p2[32'd16];

assign tmp_52_fu_1663_p3 = sub_ln1193_12_fu_1649_p2[32'd15];

assign tmp_fu_1701_p4 = {{sub_ln1193_fu_989_p2[15:6]}};

assign underflow_1_fu_2388_p2 = (xor_ln786_14_fu_2382_p2 & p_Result_21_fu_2360_p3);

assign underflow_fu_2298_p2 = (xor_ln786_13_fu_2292_p2 & p_Result_s_fu_2271_p3);

assign x_max_V_fu_976_p3 = ((icmp_ln1496_11_fu_972_p2[0:0] === 1'b1) ? select_ln65_10_reg_2705 : select_ln65_6_reg_2699);

assign xor_ln340_10_fu_1579_p2 = (tmp_47_fu_1545_p3 ^ 1'd1);

assign xor_ln340_11_fu_1634_p2 = (tmp_49_fu_1600_p3 ^ 1'd1);

assign xor_ln340_12_fu_1689_p2 = (tmp_51_fu_1655_p3 ^ 1'd1);

assign xor_ln340_13_fu_1023_p2 = (tmp_28_fu_1003_p3 ^ tmp_27_fu_995_p3);

assign xor_ln340_14_fu_1078_p2 = (tmp_30_fu_1058_p3 ^ tmp_29_fu_1050_p3);

assign xor_ln340_15_fu_1133_p2 = (tmp_32_fu_1113_p3 ^ tmp_31_fu_1105_p3);

assign xor_ln340_16_fu_1188_p2 = (tmp_34_fu_1168_p3 ^ tmp_33_fu_1160_p3);

assign xor_ln340_17_fu_1243_p2 = (tmp_36_fu_1223_p3 ^ tmp_35_fu_1215_p3);

assign xor_ln340_18_fu_1298_p2 = (tmp_38_fu_1278_p3 ^ tmp_37_fu_1270_p3);

assign xor_ln340_19_fu_1353_p2 = (tmp_40_fu_1333_p3 ^ tmp_39_fu_1325_p3);

assign xor_ln340_1_fu_1084_p2 = (tmp_29_fu_1050_p3 ^ 1'd1);

assign xor_ln340_20_fu_1408_p2 = (tmp_42_fu_1388_p3 ^ tmp_41_fu_1380_p3);

assign xor_ln340_21_fu_1463_p2 = (tmp_44_fu_1443_p3 ^ tmp_43_fu_1435_p3);

assign xor_ln340_22_fu_1518_p2 = (tmp_46_fu_1498_p3 ^ tmp_45_fu_1490_p3);

assign xor_ln340_23_fu_1573_p2 = (tmp_48_fu_1553_p3 ^ tmp_47_fu_1545_p3);

assign xor_ln340_24_fu_1628_p2 = (tmp_50_fu_1608_p3 ^ tmp_49_fu_1600_p3);

assign xor_ln340_25_fu_1683_p2 = (tmp_52_fu_1663_p3 ^ tmp_51_fu_1655_p3);

assign xor_ln340_26_fu_2304_p2 = (p_Result_s_fu_2271_p3 ^ p_Result_20_fu_2284_p3);

assign xor_ln340_27_fu_2310_p2 = (p_Result_s_fu_2271_p3 ^ 1'd1);

assign xor_ln340_28_fu_2394_p2 = (p_Result_22_fu_2374_p3 ^ p_Result_21_fu_2360_p3);

assign xor_ln340_29_fu_2400_p2 = (p_Result_21_fu_2360_p3 ^ 1'd1);

assign xor_ln340_2_fu_1139_p2 = (tmp_31_fu_1105_p3 ^ 1'd1);

assign xor_ln340_3_fu_1194_p2 = (tmp_33_fu_1160_p3 ^ 1'd1);

assign xor_ln340_4_fu_1249_p2 = (tmp_35_fu_1215_p3 ^ 1'd1);

assign xor_ln340_5_fu_1304_p2 = (tmp_37_fu_1270_p3 ^ 1'd1);

assign xor_ln340_6_fu_1359_p2 = (tmp_39_fu_1325_p3 ^ 1'd1);

assign xor_ln340_7_fu_1414_p2 = (tmp_41_fu_1380_p3 ^ 1'd1);

assign xor_ln340_8_fu_1469_p2 = (tmp_43_fu_1435_p3 ^ 1'd1);

assign xor_ln340_9_fu_1524_p2 = (tmp_45_fu_1490_p3 ^ 1'd1);

assign xor_ln340_fu_1029_p2 = (tmp_27_fu_995_p3 ^ 1'd1);

assign xor_ln786_10_fu_1561_p2 = (tmp_48_fu_1553_p3 ^ 1'd1);

assign xor_ln786_11_fu_1616_p2 = (tmp_50_fu_1608_p3 ^ 1'd1);

assign xor_ln786_12_fu_1671_p2 = (tmp_52_fu_1663_p3 ^ 1'd1);

assign xor_ln786_13_fu_2292_p2 = (p_Result_20_fu_2284_p3 ^ 1'd1);

assign xor_ln786_14_fu_2382_p2 = (p_Result_22_fu_2374_p3 ^ 1'd1);

assign xor_ln786_1_fu_1066_p2 = (tmp_30_fu_1058_p3 ^ 1'd1);

assign xor_ln786_2_fu_1121_p2 = (tmp_32_fu_1113_p3 ^ 1'd1);

assign xor_ln786_3_fu_1176_p2 = (tmp_34_fu_1168_p3 ^ 1'd1);

assign xor_ln786_4_fu_1231_p2 = (tmp_36_fu_1223_p3 ^ 1'd1);

assign xor_ln786_5_fu_1286_p2 = (tmp_38_fu_1278_p3 ^ 1'd1);

assign xor_ln786_6_fu_1341_p2 = (tmp_40_fu_1333_p3 ^ 1'd1);

assign xor_ln786_7_fu_1396_p2 = (tmp_42_fu_1388_p3 ^ 1'd1);

assign xor_ln786_8_fu_1451_p2 = (tmp_44_fu_1443_p3 ^ 1'd1);

assign xor_ln786_9_fu_1506_p2 = (tmp_46_fu_1498_p3 ^ 1'd1);

assign xor_ln786_fu_1011_p2 = (tmp_28_fu_1003_p3 ^ 1'd1);

assign y_V_10_fu_2072_p3 = ((or_ln340_10_fu_1585_p2[0:0] === 1'b1) ? select_ln340_20_fu_2056_p3 : select_ln388_10_fu_2064_p3);

assign y_V_11_fu_2106_p3 = ((or_ln340_11_fu_1640_p2[0:0] === 1'b1) ? select_ln340_22_fu_2090_p3 : select_ln388_11_fu_2098_p3);

assign y_V_12_fu_2140_p3 = ((or_ln340_12_fu_1695_p2[0:0] === 1'b1) ? select_ln340_24_fu_2124_p3 : select_ln388_12_fu_2132_p3);

assign y_V_13_fu_2438_p3 = ((or_ln340_14_fu_2406_p2[0:0] === 1'b1) ? select_ln340_28_fu_2422_p3 : select_ln388_14_fu_2430_p3);

assign y_V_1_fu_1766_p3 = ((or_ln340_1_fu_1090_p2[0:0] === 1'b1) ? select_ln340_2_fu_1750_p3 : select_ln388_1_fu_1758_p3);

assign y_V_2_fu_1800_p3 = ((or_ln340_2_fu_1145_p2[0:0] === 1'b1) ? select_ln340_4_fu_1784_p3 : select_ln388_2_fu_1792_p3);

assign y_V_3_fu_1834_p3 = ((or_ln340_3_fu_1200_p2[0:0] === 1'b1) ? select_ln340_6_fu_1818_p3 : select_ln388_3_fu_1826_p3);

assign y_V_4_fu_1868_p3 = ((or_ln340_4_fu_1255_p2[0:0] === 1'b1) ? select_ln340_8_fu_1852_p3 : select_ln388_4_fu_1860_p3);

assign y_V_5_fu_1902_p3 = ((or_ln340_5_fu_1310_p2[0:0] === 1'b1) ? select_ln340_10_fu_1886_p3 : select_ln388_5_fu_1894_p3);

assign y_V_6_fu_1936_p3 = ((or_ln340_6_fu_1365_p2[0:0] === 1'b1) ? select_ln340_12_fu_1920_p3 : select_ln388_6_fu_1928_p3);

assign y_V_7_fu_1970_p3 = ((or_ln340_7_fu_1420_p2[0:0] === 1'b1) ? select_ln340_14_fu_1954_p3 : select_ln388_7_fu_1962_p3);

assign y_V_8_fu_2004_p3 = ((or_ln340_8_fu_1475_p2[0:0] === 1'b1) ? select_ln340_16_fu_1988_p3 : select_ln388_8_fu_1996_p3);

assign y_V_9_fu_2038_p3 = ((or_ln340_9_fu_1530_p2[0:0] === 1'b1) ? select_ln340_18_fu_2022_p3 : select_ln388_9_fu_2030_p3);

assign y_V_fu_1727_p3 = ((or_ln340_fu_1035_p2[0:0] === 1'b1) ? select_ln340_fu_1711_p3 : select_ln388_fu_1719_p3);

assign zext_ln1118_10_fu_2495_p1 = exp_res_10_V_1_reg_2879_pp0_iter2_reg;

assign zext_ln1118_11_fu_2499_p1 = exp_res_11_V_1_reg_2889_pp0_iter2_reg;

assign zext_ln1118_12_fu_2503_p1 = exp_res_12_V_1_reg_2899_pp0_iter2_reg;

assign zext_ln1118_1_fu_2459_p1 = exp_res_1_V_1_reg_2787_pp0_iter1_reg;

assign zext_ln1118_2_fu_2463_p1 = exp_res_2_V_1_reg_2798_pp0_iter1_reg;

assign zext_ln1118_3_fu_2467_p1 = exp_res_3_V_1_reg_2809_pp0_iter1_reg;

assign zext_ln1118_4_fu_2471_p1 = exp_res_4_V_1_reg_2819_pp0_iter1_reg;

assign zext_ln1118_5_fu_2475_p1 = exp_res_5_V_1_reg_2829_pp0_iter1_reg;

assign zext_ln1118_6_fu_2479_p1 = exp_res_6_V_1_reg_2839_pp0_iter1_reg;

assign zext_ln1118_7_fu_2483_p1 = exp_res_7_V_1_reg_2849_pp0_iter1_reg;

assign zext_ln1118_8_fu_2487_p1 = exp_res_8_V_1_reg_2859_pp0_iter1_reg;

assign zext_ln1118_9_fu_2491_p1 = exp_res_9_V_1_reg_2869_pp0_iter1_reg;

assign zext_ln1118_fu_2455_p1 = exp_res_0_V_1_reg_2776_pp0_iter1_reg;

assign zext_ln225_10_fu_2231_p1 = y_V_10_reg_2761;

assign zext_ln225_11_fu_2240_p1 = y_V_11_reg_2766;

assign zext_ln225_12_fu_2249_p1 = y_V_12_reg_2771;

assign zext_ln225_1_fu_2148_p1 = y_V_1_reg_2716;

assign zext_ln225_2_fu_2152_p1 = y_V_2_reg_2721;

assign zext_ln225_3_fu_2156_p1 = y_V_3_reg_2726;

assign zext_ln225_4_fu_2177_p1 = y_V_4_reg_2731;

assign zext_ln225_5_fu_2186_p1 = y_V_5_reg_2736;

assign zext_ln225_6_fu_2195_p1 = y_V_6_reg_2741;

assign zext_ln225_7_fu_2204_p1 = y_V_7_reg_2746;

assign zext_ln225_8_fu_2213_p1 = y_V_8_reg_2751;

assign zext_ln225_9_fu_2222_p1 = y_V_9_reg_2756;

assign zext_ln225_fu_1735_p1 = y_V_fu_1727_p3;

assign zext_ln235_fu_2446_p1 = y_V_13_reg_2910;

endmodule //softmax_stable_array_array_ap_fixed_16_6_5_3_0_13u_softmax_config12_s
