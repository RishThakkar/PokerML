// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_HH_
#define _reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<17> > x_8_V;
    sc_in< sc_lv<17> > x_9_V;
    sc_in< sc_lv<17> > x_10_V;
    sc_in< sc_lv<17> > x_11_V;
    sc_in< sc_lv<17> > x_12_V;
    sc_out< sc_lv<18> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s(sc_module_name name);
    SC_HAS_PROCESS(reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s);

    ~reduce_ap_fixed_18_8_0_0_0_5_Op_add_ap_fixed_18_8_0_0_0_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<18> > p_Val2_38_fu_78_p3;
    sc_signal< sc_lv<18> > p_Val2_38_reg_294;
    sc_signal< sc_lv<18> > p_Val2_39_fu_108_p3;
    sc_signal< sc_lv<18> > p_Val2_39_reg_300;
    sc_signal< sc_lv<18> > p_Val2_42_fu_194_p3;
    sc_signal< sc_lv<18> > p_Val2_42_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<17> > ap_port_reg_x_12_V;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<18> > p_Val2_29_fu_60_p1;
    sc_signal< sc_lv<18> > p_Val2_s_fu_56_p1;
    sc_signal< sc_lv<18> > p_Val2_33_fu_64_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_70_p3;
    sc_signal< sc_lv<18> > p_Val2_36_fu_90_p1;
    sc_signal< sc_lv<18> > p_Val2_35_fu_86_p1;
    sc_signal< sc_lv<18> > p_Val2_37_fu_94_p2;
    sc_signal< sc_lv<1> > p_Result_23_fu_100_p3;
    sc_signal< sc_lv<19> > lhs_V_fu_116_p1;
    sc_signal< sc_lv<19> > rhs_V_fu_119_p1;
    sc_signal< sc_lv<19> > ret_V_fu_122_p2;
    sc_signal< sc_lv<18> > p_Val2_41_fu_136_p2;
    sc_signal< sc_lv<1> > p_Result_25_fu_140_p3;
    sc_signal< sc_lv<1> > p_Result_24_fu_128_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_148_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_166_p2;
    sc_signal< sc_lv<1> > xor_ln340_30_fu_160_p2;
    sc_signal< sc_lv<1> > underflow_fu_154_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_172_p2;
    sc_signal< sc_lv<18> > select_ln340_fu_178_p3;
    sc_signal< sc_lv<18> > select_ln388_fu_186_p3;
    sc_signal< sc_lv<19> > rhs_V_2_fu_209_p1;
    sc_signal< sc_lv<19> > lhs_V_2_fu_206_p1;
    sc_signal< sc_lv<19> > ret_V_2_fu_213_p2;
    sc_signal< sc_lv<18> > p_Val2_43_fu_202_p1;
    sc_signal< sc_lv<18> > p_Val2_45_fu_227_p2;
    sc_signal< sc_lv<1> > p_Result_27_fu_232_p3;
    sc_signal< sc_lv<1> > p_Result_26_fu_219_p3;
    sc_signal< sc_lv<1> > xor_ln786_13_fu_240_p2;
    sc_signal< sc_lv<1> > xor_ln340_13_fu_258_p2;
    sc_signal< sc_lv<1> > xor_ln340_31_fu_252_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_246_p2;
    sc_signal< sc_lv<1> > or_ln340_15_fu_264_p2;
    sc_signal< sc_lv<18> > select_ln340_13_fu_270_p3;
    sc_signal< sc_lv<18> > select_ln388_13_fu_278_p3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<18> ap_const_lv18_1FFFF;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<18> ap_const_lv18_20000;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_lhs_V_2_fu_206_p1();
    void thread_lhs_V_fu_116_p1();
    void thread_or_ln340_15_fu_264_p2();
    void thread_or_ln340_fu_172_p2();
    void thread_p_Result_23_fu_100_p3();
    void thread_p_Result_24_fu_128_p3();
    void thread_p_Result_25_fu_140_p3();
    void thread_p_Result_26_fu_219_p3();
    void thread_p_Result_27_fu_232_p3();
    void thread_p_Result_s_fu_70_p3();
    void thread_p_Val2_29_fu_60_p1();
    void thread_p_Val2_33_fu_64_p2();
    void thread_p_Val2_35_fu_86_p1();
    void thread_p_Val2_36_fu_90_p1();
    void thread_p_Val2_37_fu_94_p2();
    void thread_p_Val2_38_fu_78_p3();
    void thread_p_Val2_39_fu_108_p3();
    void thread_p_Val2_41_fu_136_p2();
    void thread_p_Val2_42_fu_194_p3();
    void thread_p_Val2_43_fu_202_p1();
    void thread_p_Val2_45_fu_227_p2();
    void thread_p_Val2_s_fu_56_p1();
    void thread_ret_V_2_fu_213_p2();
    void thread_ret_V_fu_122_p2();
    void thread_rhs_V_2_fu_209_p1();
    void thread_rhs_V_fu_119_p1();
    void thread_select_ln340_13_fu_270_p3();
    void thread_select_ln340_fu_178_p3();
    void thread_select_ln388_13_fu_278_p3();
    void thread_select_ln388_fu_186_p3();
    void thread_underflow_2_fu_246_p2();
    void thread_underflow_fu_154_p2();
    void thread_xor_ln340_13_fu_258_p2();
    void thread_xor_ln340_30_fu_160_p2();
    void thread_xor_ln340_31_fu_252_p2();
    void thread_xor_ln340_fu_166_p2();
    void thread_xor_ln786_13_fu_240_p2();
    void thread_xor_ln786_fu_148_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
