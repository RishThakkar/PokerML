// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> relu::ap_ST_fsm_state1 = "1";
const sc_lv<3> relu::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> relu::ap_ST_fsm_state5 = "100";
const bool relu::ap_const_boolean_1 = true;
const sc_lv<32> relu::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> relu::ap_const_lv32_1 = "1";
const bool relu::ap_const_boolean_0 = false;
const sc_lv<1> relu::ap_const_lv1_0 = "0";
const sc_lv<1> relu::ap_const_lv1_1 = "1";
const sc_lv<10> relu::ap_const_lv10_0 = "0000000000";
const sc_lv<10> relu::ap_const_lv10_349 = "1101001001";
const sc_lv<10> relu::ap_const_lv10_1 = "1";
const sc_lv<16> relu::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> relu::ap_const_lv32_4 = "100";
const sc_lv<32> relu::ap_const_lv32_9 = "1001";
const sc_lv<3> relu::ap_const_lv3_0 = "000";
const sc_lv<32> relu::ap_const_lv32_3 = "11";
const sc_lv<32> relu::ap_const_lv32_5 = "101";
const sc_lv<32> relu::ap_const_lv32_A = "1010";
const sc_lv<32> relu::ap_const_lv32_F = "1111";
const sc_lv<6> relu::ap_const_lv6_3F = "111111";
const sc_lv<6> relu::ap_const_lv6_0 = "000000";
const sc_lv<32> relu::ap_const_lv32_2 = "10";

relu::relu(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln415_1_fu_451_p2);
    sensitive << ( zext_ln415_1_fu_447_p1 );
    sensitive << ( trunc_ln708_4_fu_391_p4 );

    SC_METHOD(thread_add_ln415_2_fu_589_p2);
    sensitive << ( zext_ln415_2_fu_585_p1 );
    sensitive << ( trunc_ln708_5_fu_529_p4 );

    SC_METHOD(thread_add_ln415_3_fu_727_p2);
    sensitive << ( zext_ln415_3_fu_723_p1 );
    sensitive << ( trunc_ln708_6_fu_667_p4 );

    SC_METHOD(thread_add_ln415_fu_313_p2);
    sensitive << ( zext_ln415_fu_309_p1 );
    sensitive << ( trunc_ln_fu_253_p4 );

    SC_METHOD(thread_and_ln415_1_fu_441_p2);
    sensitive << ( or_ln412_1_fu_427_p2 );
    sensitive << ( tmp_43_fu_433_p3 );

    SC_METHOD(thread_and_ln415_2_fu_579_p2);
    sensitive << ( or_ln412_2_fu_565_p2 );
    sensitive << ( tmp_47_fu_571_p3 );

    SC_METHOD(thread_and_ln415_3_fu_717_p2);
    sensitive << ( or_ln412_3_fu_703_p2 );
    sensitive << ( tmp_51_fu_709_p3 );

    SC_METHOD(thread_and_ln415_fu_303_p2);
    sensitive << ( or_ln412_fu_289_p2 );
    sensitive << ( tmp_39_fu_295_p3 );

    SC_METHOD(thread_and_ln416_1_fu_471_p2);
    sensitive << ( tmp_42_fu_419_p3 );
    sensitive << ( xor_ln416_4_fu_465_p2 );

    SC_METHOD(thread_and_ln416_2_fu_609_p2);
    sensitive << ( tmp_46_fu_557_p3 );
    sensitive << ( xor_ln416_5_fu_603_p2 );

    SC_METHOD(thread_and_ln416_3_fu_747_p2);
    sensitive << ( tmp_50_fu_695_p3 );
    sensitive << ( xor_ln416_6_fu_741_p2 );

    SC_METHOD(thread_and_ln416_fu_333_p2);
    sensitive << ( tmp_38_fu_281_p3 );
    sensitive << ( xor_ln416_fu_327_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op20 );
    sensitive << ( io_acc_block_signal_op108 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op20 );
    sensitive << ( io_acc_block_signal_op108 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op20 );
    sensitive << ( io_acc_block_signal_op108 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( io_acc_block_signal_op20 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op108 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln41_fu_219_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln41_reg_799 );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln41_reg_799 );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_2_V_blk_n);
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln41_reg_799 );

    SC_METHOD(thread_data_V_data_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_3_V_blk_n);
    sensitive << ( data_V_data_3_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln41_reg_799 );

    SC_METHOD(thread_data_V_data_3_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_225_p2);
    sensitive << ( i_0_reg_208 );

    SC_METHOD(thread_icmp_ln1494_1_fu_385_p2);
    sensitive << ( data_V_data_1_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1494_2_fu_523_p2);
    sensitive << ( data_V_data_2_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1494_3_fu_661_p2);
    sensitive << ( data_V_data_3_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1494_fu_247_p2);
    sensitive << ( data_V_data_0_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln41_fu_219_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_reg_208 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln718_1_fu_413_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln718_4_fu_409_p1 );

    SC_METHOD(thread_icmp_ln718_2_fu_551_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln718_5_fu_547_p1 );

    SC_METHOD(thread_icmp_ln718_3_fu_689_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln718_6_fu_685_p1 );

    SC_METHOD(thread_icmp_ln718_fu_275_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln718_fu_271_p1 );

    SC_METHOD(thread_icmp_ln768_1_fu_493_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_10_1_fu_477_p4 );

    SC_METHOD(thread_icmp_ln768_2_fu_631_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_10_2_fu_615_p4 );

    SC_METHOD(thread_icmp_ln768_3_fu_769_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_10_3_fu_753_p4 );

    SC_METHOD(thread_icmp_ln768_fu_355_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_339_p4 );

    SC_METHOD(thread_icmp_ln879_1_fu_487_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_10_1_fu_477_p4 );

    SC_METHOD(thread_icmp_ln879_2_fu_625_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_10_2_fu_615_p4 );

    SC_METHOD(thread_icmp_ln879_3_fu_763_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_10_3_fu_753_p4 );

    SC_METHOD(thread_icmp_ln879_fu_349_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln41_reg_799 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_339_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_io_acc_block_signal_op108);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( res_V_data_3_V_full_n );

    SC_METHOD(thread_io_acc_block_signal_op20);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( data_V_data_3_V_empty_n );

    SC_METHOD(thread_or_ln412_1_fu_427_p2);
    sensitive << ( icmp_ln718_1_fu_413_p2 );
    sensitive << ( tmp_41_fu_401_p3 );

    SC_METHOD(thread_or_ln412_2_fu_565_p2);
    sensitive << ( icmp_ln718_2_fu_551_p2 );
    sensitive << ( tmp_45_fu_539_p3 );

    SC_METHOD(thread_or_ln412_3_fu_703_p2);
    sensitive << ( icmp_ln718_3_fu_689_p2 );
    sensitive << ( tmp_49_fu_677_p3 );

    SC_METHOD(thread_or_ln412_fu_289_p2);
    sensitive << ( icmp_ln718_fu_275_p2 );
    sensitive << ( tmp_37_fu_263_p3 );

    SC_METHOD(thread_p_Result_10_1_fu_477_p4);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_p_Result_10_2_fu_615_p4);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_p_Result_10_3_fu_753_p4);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_p_Result_s_fu_339_p4);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_V_data_0_V_blk_n);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( tmp_data_0_V_3_reg_808 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_1_V_blk_n);
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( tmp_data_1_V_3_reg_813 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_2_V_blk_n);
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( tmp_data_2_V_3_reg_818 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_3_V_blk_n);
    sensitive << ( res_V_data_3_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_3_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( tmp_data_3_V_3_reg_823 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_3_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_reg_799_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln340_1_fu_507_p3);
    sensitive << ( add_ln415_1_fu_451_p2 );
    sensitive << ( select_ln777_1_fu_499_p3 );

    SC_METHOD(thread_select_ln340_2_fu_645_p3);
    sensitive << ( add_ln415_2_fu_589_p2 );
    sensitive << ( select_ln777_2_fu_637_p3 );

    SC_METHOD(thread_select_ln340_3_fu_783_p3);
    sensitive << ( add_ln415_3_fu_727_p2 );
    sensitive << ( select_ln777_3_fu_775_p3 );

    SC_METHOD(thread_select_ln340_fu_369_p3);
    sensitive << ( add_ln415_fu_313_p2 );
    sensitive << ( select_ln777_fu_361_p3 );

    SC_METHOD(thread_select_ln777_1_fu_499_p3);
    sensitive << ( and_ln416_1_fu_471_p2 );
    sensitive << ( icmp_ln879_1_fu_487_p2 );
    sensitive << ( icmp_ln768_1_fu_493_p2 );

    SC_METHOD(thread_select_ln777_2_fu_637_p3);
    sensitive << ( and_ln416_2_fu_609_p2 );
    sensitive << ( icmp_ln879_2_fu_625_p2 );
    sensitive << ( icmp_ln768_2_fu_631_p2 );

    SC_METHOD(thread_select_ln777_3_fu_775_p3);
    sensitive << ( and_ln416_3_fu_747_p2 );
    sensitive << ( icmp_ln879_3_fu_763_p2 );
    sensitive << ( icmp_ln768_3_fu_769_p2 );

    SC_METHOD(thread_select_ln777_fu_361_p3);
    sensitive << ( and_ln416_fu_333_p2 );
    sensitive << ( icmp_ln879_fu_349_p2 );
    sensitive << ( icmp_ln768_fu_355_p2 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_37_fu_263_p3);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_tmp_38_fu_281_p3);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_tmp_39_fu_295_p3);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_tmp_40_fu_319_p3);
    sensitive << ( add_ln415_fu_313_p2 );

    SC_METHOD(thread_tmp_41_fu_401_p3);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_tmp_42_fu_419_p3);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_tmp_43_fu_433_p3);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_tmp_44_fu_457_p3);
    sensitive << ( add_ln415_1_fu_451_p2 );

    SC_METHOD(thread_tmp_45_fu_539_p3);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_tmp_46_fu_557_p3);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_tmp_47_fu_571_p3);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_tmp_48_fu_595_p3);
    sensitive << ( add_ln415_2_fu_589_p2 );

    SC_METHOD(thread_tmp_49_fu_677_p3);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_tmp_50_fu_695_p3);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_tmp_51_fu_709_p3);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_tmp_52_fu_733_p3);
    sensitive << ( add_ln415_3_fu_727_p2 );

    SC_METHOD(thread_tmp_data_0_V_3_fu_377_p3);
    sensitive << ( icmp_ln1494_fu_247_p2 );
    sensitive << ( select_ln340_fu_369_p3 );

    SC_METHOD(thread_tmp_data_1_V_3_fu_515_p3);
    sensitive << ( icmp_ln1494_1_fu_385_p2 );
    sensitive << ( select_ln340_1_fu_507_p3 );

    SC_METHOD(thread_tmp_data_2_V_3_fu_653_p3);
    sensitive << ( icmp_ln1494_2_fu_523_p2 );
    sensitive << ( select_ln340_2_fu_645_p3 );

    SC_METHOD(thread_tmp_data_3_V_3_fu_791_p3);
    sensitive << ( icmp_ln1494_3_fu_661_p2 );
    sensitive << ( select_ln340_3_fu_783_p3 );

    SC_METHOD(thread_trunc_ln708_4_fu_391_p4);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_trunc_ln708_5_fu_529_p4);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_trunc_ln708_6_fu_667_p4);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_trunc_ln718_4_fu_409_p1);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_trunc_ln718_5_fu_547_p1);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_trunc_ln718_6_fu_685_p1);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_trunc_ln718_fu_271_p1);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_trunc_ln_fu_253_p4);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_xor_ln416_4_fu_465_p2);
    sensitive << ( tmp_44_fu_457_p3 );

    SC_METHOD(thread_xor_ln416_5_fu_603_p2);
    sensitive << ( tmp_48_fu_595_p3 );

    SC_METHOD(thread_xor_ln416_6_fu_741_p2);
    sensitive << ( tmp_52_fu_733_p3 );

    SC_METHOD(thread_xor_ln416_fu_327_p2);
    sensitive << ( tmp_40_fu_319_p3 );

    SC_METHOD(thread_zext_ln415_1_fu_447_p1);
    sensitive << ( and_ln415_1_fu_441_p2 );

    SC_METHOD(thread_zext_ln415_2_fu_585_p1);
    sensitive << ( and_ln415_2_fu_579_p2 );

    SC_METHOD(thread_zext_ln415_3_fu_723_p1);
    sensitive << ( and_ln415_3_fu_717_p2 );

    SC_METHOD(thread_zext_ln415_fu_309_p1);
    sensitive << ( and_ln415_fu_303_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln41_fu_219_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, data_V_data_2_V_dout, "(port)data_V_data_2_V_dout");
    sc_trace(mVcdFile, data_V_data_2_V_empty_n, "(port)data_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_V_data_2_V_read, "(port)data_V_data_2_V_read");
    sc_trace(mVcdFile, data_V_data_3_V_dout, "(port)data_V_data_3_V_dout");
    sc_trace(mVcdFile, data_V_data_3_V_empty_n, "(port)data_V_data_3_V_empty_n");
    sc_trace(mVcdFile, data_V_data_3_V_read, "(port)data_V_data_3_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_din, "(port)res_V_data_0_V_din");
    sc_trace(mVcdFile, res_V_data_0_V_full_n, "(port)res_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_V_data_0_V_write, "(port)res_V_data_0_V_write");
    sc_trace(mVcdFile, res_V_data_1_V_din, "(port)res_V_data_1_V_din");
    sc_trace(mVcdFile, res_V_data_1_V_full_n, "(port)res_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_V_data_1_V_write, "(port)res_V_data_1_V_write");
    sc_trace(mVcdFile, res_V_data_2_V_din, "(port)res_V_data_2_V_din");
    sc_trace(mVcdFile, res_V_data_2_V_full_n, "(port)res_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_V_data_2_V_write, "(port)res_V_data_2_V_write");
    sc_trace(mVcdFile, res_V_data_3_V_din, "(port)res_V_data_3_V_din");
    sc_trace(mVcdFile, res_V_data_3_V_full_n, "(port)res_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_V_data_3_V_write, "(port)res_V_data_3_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln41_reg_799, "icmp_ln41_reg_799");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_V_data_2_V_blk_n, "data_V_data_2_V_blk_n");
    sc_trace(mVcdFile, data_V_data_3_V_blk_n, "data_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_blk_n, "res_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln41_reg_799_pp0_iter1_reg, "icmp_ln41_reg_799_pp0_iter1_reg");
    sc_trace(mVcdFile, res_V_data_1_V_blk_n, "res_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_2_V_blk_n, "res_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_V_data_3_V_blk_n, "res_V_data_3_V_blk_n");
    sc_trace(mVcdFile, i_0_reg_208, "i_0_reg_208");
    sc_trace(mVcdFile, icmp_ln41_fu_219_p2, "icmp_ln41_fu_219_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op20, "io_acc_block_signal_op20");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, io_acc_block_signal_op108, "io_acc_block_signal_op108");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_225_p2, "i_fu_225_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_data_0_V_3_fu_377_p3, "tmp_data_0_V_3_fu_377_p3");
    sc_trace(mVcdFile, tmp_data_0_V_3_reg_808, "tmp_data_0_V_3_reg_808");
    sc_trace(mVcdFile, tmp_data_1_V_3_fu_515_p3, "tmp_data_1_V_3_fu_515_p3");
    sc_trace(mVcdFile, tmp_data_1_V_3_reg_813, "tmp_data_1_V_3_reg_813");
    sc_trace(mVcdFile, tmp_data_2_V_3_fu_653_p3, "tmp_data_2_V_3_fu_653_p3");
    sc_trace(mVcdFile, tmp_data_2_V_3_reg_818, "tmp_data_2_V_3_reg_818");
    sc_trace(mVcdFile, tmp_data_3_V_3_fu_791_p3, "tmp_data_3_V_3_fu_791_p3");
    sc_trace(mVcdFile, tmp_data_3_V_3_reg_823, "tmp_data_3_V_3_reg_823");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln718_fu_271_p1, "trunc_ln718_fu_271_p1");
    sc_trace(mVcdFile, icmp_ln718_fu_275_p2, "icmp_ln718_fu_275_p2");
    sc_trace(mVcdFile, tmp_37_fu_263_p3, "tmp_37_fu_263_p3");
    sc_trace(mVcdFile, or_ln412_fu_289_p2, "or_ln412_fu_289_p2");
    sc_trace(mVcdFile, tmp_39_fu_295_p3, "tmp_39_fu_295_p3");
    sc_trace(mVcdFile, and_ln415_fu_303_p2, "and_ln415_fu_303_p2");
    sc_trace(mVcdFile, zext_ln415_fu_309_p1, "zext_ln415_fu_309_p1");
    sc_trace(mVcdFile, trunc_ln_fu_253_p4, "trunc_ln_fu_253_p4");
    sc_trace(mVcdFile, add_ln415_fu_313_p2, "add_ln415_fu_313_p2");
    sc_trace(mVcdFile, tmp_40_fu_319_p3, "tmp_40_fu_319_p3");
    sc_trace(mVcdFile, tmp_38_fu_281_p3, "tmp_38_fu_281_p3");
    sc_trace(mVcdFile, xor_ln416_fu_327_p2, "xor_ln416_fu_327_p2");
    sc_trace(mVcdFile, p_Result_s_fu_339_p4, "p_Result_s_fu_339_p4");
    sc_trace(mVcdFile, and_ln416_fu_333_p2, "and_ln416_fu_333_p2");
    sc_trace(mVcdFile, icmp_ln879_fu_349_p2, "icmp_ln879_fu_349_p2");
    sc_trace(mVcdFile, icmp_ln768_fu_355_p2, "icmp_ln768_fu_355_p2");
    sc_trace(mVcdFile, select_ln777_fu_361_p3, "select_ln777_fu_361_p3");
    sc_trace(mVcdFile, icmp_ln1494_fu_247_p2, "icmp_ln1494_fu_247_p2");
    sc_trace(mVcdFile, select_ln340_fu_369_p3, "select_ln340_fu_369_p3");
    sc_trace(mVcdFile, trunc_ln718_4_fu_409_p1, "trunc_ln718_4_fu_409_p1");
    sc_trace(mVcdFile, icmp_ln718_1_fu_413_p2, "icmp_ln718_1_fu_413_p2");
    sc_trace(mVcdFile, tmp_41_fu_401_p3, "tmp_41_fu_401_p3");
    sc_trace(mVcdFile, or_ln412_1_fu_427_p2, "or_ln412_1_fu_427_p2");
    sc_trace(mVcdFile, tmp_43_fu_433_p3, "tmp_43_fu_433_p3");
    sc_trace(mVcdFile, and_ln415_1_fu_441_p2, "and_ln415_1_fu_441_p2");
    sc_trace(mVcdFile, zext_ln415_1_fu_447_p1, "zext_ln415_1_fu_447_p1");
    sc_trace(mVcdFile, trunc_ln708_4_fu_391_p4, "trunc_ln708_4_fu_391_p4");
    sc_trace(mVcdFile, add_ln415_1_fu_451_p2, "add_ln415_1_fu_451_p2");
    sc_trace(mVcdFile, tmp_44_fu_457_p3, "tmp_44_fu_457_p3");
    sc_trace(mVcdFile, tmp_42_fu_419_p3, "tmp_42_fu_419_p3");
    sc_trace(mVcdFile, xor_ln416_4_fu_465_p2, "xor_ln416_4_fu_465_p2");
    sc_trace(mVcdFile, p_Result_10_1_fu_477_p4, "p_Result_10_1_fu_477_p4");
    sc_trace(mVcdFile, and_ln416_1_fu_471_p2, "and_ln416_1_fu_471_p2");
    sc_trace(mVcdFile, icmp_ln879_1_fu_487_p2, "icmp_ln879_1_fu_487_p2");
    sc_trace(mVcdFile, icmp_ln768_1_fu_493_p2, "icmp_ln768_1_fu_493_p2");
    sc_trace(mVcdFile, select_ln777_1_fu_499_p3, "select_ln777_1_fu_499_p3");
    sc_trace(mVcdFile, icmp_ln1494_1_fu_385_p2, "icmp_ln1494_1_fu_385_p2");
    sc_trace(mVcdFile, select_ln340_1_fu_507_p3, "select_ln340_1_fu_507_p3");
    sc_trace(mVcdFile, trunc_ln718_5_fu_547_p1, "trunc_ln718_5_fu_547_p1");
    sc_trace(mVcdFile, icmp_ln718_2_fu_551_p2, "icmp_ln718_2_fu_551_p2");
    sc_trace(mVcdFile, tmp_45_fu_539_p3, "tmp_45_fu_539_p3");
    sc_trace(mVcdFile, or_ln412_2_fu_565_p2, "or_ln412_2_fu_565_p2");
    sc_trace(mVcdFile, tmp_47_fu_571_p3, "tmp_47_fu_571_p3");
    sc_trace(mVcdFile, and_ln415_2_fu_579_p2, "and_ln415_2_fu_579_p2");
    sc_trace(mVcdFile, zext_ln415_2_fu_585_p1, "zext_ln415_2_fu_585_p1");
    sc_trace(mVcdFile, trunc_ln708_5_fu_529_p4, "trunc_ln708_5_fu_529_p4");
    sc_trace(mVcdFile, add_ln415_2_fu_589_p2, "add_ln415_2_fu_589_p2");
    sc_trace(mVcdFile, tmp_48_fu_595_p3, "tmp_48_fu_595_p3");
    sc_trace(mVcdFile, tmp_46_fu_557_p3, "tmp_46_fu_557_p3");
    sc_trace(mVcdFile, xor_ln416_5_fu_603_p2, "xor_ln416_5_fu_603_p2");
    sc_trace(mVcdFile, p_Result_10_2_fu_615_p4, "p_Result_10_2_fu_615_p4");
    sc_trace(mVcdFile, and_ln416_2_fu_609_p2, "and_ln416_2_fu_609_p2");
    sc_trace(mVcdFile, icmp_ln879_2_fu_625_p2, "icmp_ln879_2_fu_625_p2");
    sc_trace(mVcdFile, icmp_ln768_2_fu_631_p2, "icmp_ln768_2_fu_631_p2");
    sc_trace(mVcdFile, select_ln777_2_fu_637_p3, "select_ln777_2_fu_637_p3");
    sc_trace(mVcdFile, icmp_ln1494_2_fu_523_p2, "icmp_ln1494_2_fu_523_p2");
    sc_trace(mVcdFile, select_ln340_2_fu_645_p3, "select_ln340_2_fu_645_p3");
    sc_trace(mVcdFile, trunc_ln718_6_fu_685_p1, "trunc_ln718_6_fu_685_p1");
    sc_trace(mVcdFile, icmp_ln718_3_fu_689_p2, "icmp_ln718_3_fu_689_p2");
    sc_trace(mVcdFile, tmp_49_fu_677_p3, "tmp_49_fu_677_p3");
    sc_trace(mVcdFile, or_ln412_3_fu_703_p2, "or_ln412_3_fu_703_p2");
    sc_trace(mVcdFile, tmp_51_fu_709_p3, "tmp_51_fu_709_p3");
    sc_trace(mVcdFile, and_ln415_3_fu_717_p2, "and_ln415_3_fu_717_p2");
    sc_trace(mVcdFile, zext_ln415_3_fu_723_p1, "zext_ln415_3_fu_723_p1");
    sc_trace(mVcdFile, trunc_ln708_6_fu_667_p4, "trunc_ln708_6_fu_667_p4");
    sc_trace(mVcdFile, add_ln415_3_fu_727_p2, "add_ln415_3_fu_727_p2");
    sc_trace(mVcdFile, tmp_52_fu_733_p3, "tmp_52_fu_733_p3");
    sc_trace(mVcdFile, tmp_50_fu_695_p3, "tmp_50_fu_695_p3");
    sc_trace(mVcdFile, xor_ln416_6_fu_741_p2, "xor_ln416_6_fu_741_p2");
    sc_trace(mVcdFile, p_Result_10_3_fu_753_p4, "p_Result_10_3_fu_753_p4");
    sc_trace(mVcdFile, and_ln416_3_fu_747_p2, "and_ln416_3_fu_747_p2");
    sc_trace(mVcdFile, icmp_ln879_3_fu_763_p2, "icmp_ln879_3_fu_763_p2");
    sc_trace(mVcdFile, icmp_ln768_3_fu_769_p2, "icmp_ln768_3_fu_769_p2");
    sc_trace(mVcdFile, select_ln777_3_fu_775_p3, "select_ln777_3_fu_775_p3");
    sc_trace(mVcdFile, icmp_ln1494_3_fu_661_p2, "icmp_ln1494_3_fu_661_p2");
    sc_trace(mVcdFile, select_ln340_3_fu_783_p3, "select_ln340_3_fu_783_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

relu::~relu() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void relu::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_fu_219_p2.read()))) {
        i_0_reg_208 = i_fu_225_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_208 = ap_const_lv10_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln41_reg_799 = icmp_ln41_fu_219_p2.read();
        icmp_ln41_reg_799_pp0_iter1_reg = icmp_ln41_reg_799.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_V_3_reg_808 = tmp_data_0_V_3_fu_377_p3.read();
        tmp_data_1_V_3_reg_813 = tmp_data_1_V_3_fu_515_p3.read();
        tmp_data_2_V_3_reg_818 = tmp_data_2_V_3_fu_653_p3.read();
        tmp_data_3_V_3_reg_823 = tmp_data_3_V_3_fu_791_p3.read();
    }
}

void relu::thread_add_ln415_1_fu_451_p2() {
    add_ln415_1_fu_451_p2 = (!zext_ln415_1_fu_447_p1.read().is_01() || !trunc_ln708_4_fu_391_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln415_1_fu_447_p1.read()) + sc_biguint<6>(trunc_ln708_4_fu_391_p4.read()));
}

void relu::thread_add_ln415_2_fu_589_p2() {
    add_ln415_2_fu_589_p2 = (!zext_ln415_2_fu_585_p1.read().is_01() || !trunc_ln708_5_fu_529_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln415_2_fu_585_p1.read()) + sc_biguint<6>(trunc_ln708_5_fu_529_p4.read()));
}

void relu::thread_add_ln415_3_fu_727_p2() {
    add_ln415_3_fu_727_p2 = (!zext_ln415_3_fu_723_p1.read().is_01() || !trunc_ln708_6_fu_667_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln415_3_fu_723_p1.read()) + sc_biguint<6>(trunc_ln708_6_fu_667_p4.read()));
}

void relu::thread_add_ln415_fu_313_p2() {
    add_ln415_fu_313_p2 = (!zext_ln415_fu_309_p1.read().is_01() || !trunc_ln_fu_253_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln415_fu_309_p1.read()) + sc_biguint<6>(trunc_ln_fu_253_p4.read()));
}

void relu::thread_and_ln415_1_fu_441_p2() {
    and_ln415_1_fu_441_p2 = (or_ln412_1_fu_427_p2.read() & tmp_43_fu_433_p3.read());
}

void relu::thread_and_ln415_2_fu_579_p2() {
    and_ln415_2_fu_579_p2 = (or_ln412_2_fu_565_p2.read() & tmp_47_fu_571_p3.read());
}

void relu::thread_and_ln415_3_fu_717_p2() {
    and_ln415_3_fu_717_p2 = (or_ln412_3_fu_703_p2.read() & tmp_51_fu_709_p3.read());
}

void relu::thread_and_ln415_fu_303_p2() {
    and_ln415_fu_303_p2 = (or_ln412_fu_289_p2.read() & tmp_39_fu_295_p3.read());
}

void relu::thread_and_ln416_1_fu_471_p2() {
    and_ln416_1_fu_471_p2 = (tmp_42_fu_419_p3.read() & xor_ln416_4_fu_465_p2.read());
}

void relu::thread_and_ln416_2_fu_609_p2() {
    and_ln416_2_fu_609_p2 = (tmp_46_fu_557_p3.read() & xor_ln416_5_fu_603_p2.read());
}

void relu::thread_and_ln416_3_fu_747_p2() {
    and_ln416_3_fu_747_p2 = (tmp_50_fu_695_p3.read() & xor_ln416_6_fu_741_p2.read());
}

void relu::thread_and_ln416_fu_333_p2() {
    and_ln416_fu_333_p2 = (tmp_38_fu_281_p3.read() & xor_ln416_fu_327_p2.read());
}

void relu::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void relu::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void relu::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op108.read())));
}

void relu::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op108.read())));
}

void relu::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op108.read())));
}

void relu::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void relu::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read()));
}

void relu::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op108.read()));
}

void relu::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln41_fu_219_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void relu::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void relu::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void relu::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void relu::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void relu::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void relu::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void relu::thread_data_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0))) {
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n.read();
    } else {
        data_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_data_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_V_data_2_V_read = ap_const_logic_0;
    }
}

void relu::thread_data_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0))) {
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n.read();
    } else {
        data_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_data_V_data_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_799.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_3_V_read = ap_const_logic_1;
    } else {
        data_V_data_3_V_read = ap_const_logic_0;
    }
}

void relu::thread_i_fu_225_p2() {
    i_fu_225_p2 = (!i_0_reg_208.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_reg_208.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void relu::thread_icmp_ln1494_1_fu_385_p2() {
    icmp_ln1494_1_fu_385_p2 = (!data_V_data_1_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_1_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu::thread_icmp_ln1494_2_fu_523_p2() {
    icmp_ln1494_2_fu_523_p2 = (!data_V_data_2_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_2_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu::thread_icmp_ln1494_3_fu_661_p2() {
    icmp_ln1494_3_fu_661_p2 = (!data_V_data_3_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_3_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu::thread_icmp_ln1494_fu_247_p2() {
    icmp_ln1494_fu_247_p2 = (!data_V_data_0_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_0_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu::thread_icmp_ln41_fu_219_p2() {
    icmp_ln41_fu_219_p2 = (!i_0_reg_208.read().is_01() || !ap_const_lv10_349.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_208.read() == ap_const_lv10_349);
}

void relu::thread_icmp_ln718_1_fu_413_p2() {
    icmp_ln718_1_fu_413_p2 = (!trunc_ln718_4_fu_409_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln718_4_fu_409_p1.read() != ap_const_lv3_0);
}

void relu::thread_icmp_ln718_2_fu_551_p2() {
    icmp_ln718_2_fu_551_p2 = (!trunc_ln718_5_fu_547_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln718_5_fu_547_p1.read() != ap_const_lv3_0);
}

void relu::thread_icmp_ln718_3_fu_689_p2() {
    icmp_ln718_3_fu_689_p2 = (!trunc_ln718_6_fu_685_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln718_6_fu_685_p1.read() != ap_const_lv3_0);
}

void relu::thread_icmp_ln718_fu_275_p2() {
    icmp_ln718_fu_275_p2 = (!trunc_ln718_fu_271_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln718_fu_271_p1.read() != ap_const_lv3_0);
}

void relu::thread_icmp_ln768_1_fu_493_p2() {
    icmp_ln768_1_fu_493_p2 = (!p_Result_10_1_fu_477_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_1_fu_477_p4.read() == ap_const_lv6_0);
}

void relu::thread_icmp_ln768_2_fu_631_p2() {
    icmp_ln768_2_fu_631_p2 = (!p_Result_10_2_fu_615_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_2_fu_615_p4.read() == ap_const_lv6_0);
}

void relu::thread_icmp_ln768_3_fu_769_p2() {
    icmp_ln768_3_fu_769_p2 = (!p_Result_10_3_fu_753_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_3_fu_753_p4.read() == ap_const_lv6_0);
}

void relu::thread_icmp_ln768_fu_355_p2() {
    icmp_ln768_fu_355_p2 = (!p_Result_s_fu_339_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_339_p4.read() == ap_const_lv6_0);
}

void relu::thread_icmp_ln879_1_fu_487_p2() {
    icmp_ln879_1_fu_487_p2 = (!p_Result_10_1_fu_477_p4.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_1_fu_477_p4.read() == ap_const_lv6_3F);
}

void relu::thread_icmp_ln879_2_fu_625_p2() {
    icmp_ln879_2_fu_625_p2 = (!p_Result_10_2_fu_615_p4.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_2_fu_615_p4.read() == ap_const_lv6_3F);
}

void relu::thread_icmp_ln879_3_fu_763_p2() {
    icmp_ln879_3_fu_763_p2 = (!p_Result_10_3_fu_753_p4.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_3_fu_753_p4.read() == ap_const_lv6_3F);
}

void relu::thread_icmp_ln879_fu_349_p2() {
    icmp_ln879_fu_349_p2 = (!p_Result_s_fu_339_p4.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_339_p4.read() == ap_const_lv6_3F);
}

void relu::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void relu::thread_io_acc_block_signal_op108() {
    io_acc_block_signal_op108 = (res_V_data_0_V_full_n.read() & res_V_data_1_V_full_n.read() & res_V_data_2_V_full_n.read() & res_V_data_3_V_full_n.read());
}

void relu::thread_io_acc_block_signal_op20() {
    io_acc_block_signal_op20 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read() & data_V_data_2_V_empty_n.read() & data_V_data_3_V_empty_n.read());
}

void relu::thread_or_ln412_1_fu_427_p2() {
    or_ln412_1_fu_427_p2 = (icmp_ln718_1_fu_413_p2.read() | tmp_41_fu_401_p3.read());
}

void relu::thread_or_ln412_2_fu_565_p2() {
    or_ln412_2_fu_565_p2 = (icmp_ln718_2_fu_551_p2.read() | tmp_45_fu_539_p3.read());
}

void relu::thread_or_ln412_3_fu_703_p2() {
    or_ln412_3_fu_703_p2 = (icmp_ln718_3_fu_689_p2.read() | tmp_49_fu_677_p3.read());
}

void relu::thread_or_ln412_fu_289_p2() {
    or_ln412_fu_289_p2 = (icmp_ln718_fu_275_p2.read() | tmp_37_fu_263_p3.read());
}

void relu::thread_p_Result_10_1_fu_477_p4() {
    p_Result_10_1_fu_477_p4 = data_V_data_1_V_dout.read().range(15, 10);
}

void relu::thread_p_Result_10_2_fu_615_p4() {
    p_Result_10_2_fu_615_p4 = data_V_data_2_V_dout.read().range(15, 10);
}

void relu::thread_p_Result_10_3_fu_753_p4() {
    p_Result_10_3_fu_753_p4 = data_V_data_3_V_dout.read().range(15, 10);
}

void relu::thread_p_Result_s_fu_339_p4() {
    p_Result_s_fu_339_p4 = data_V_data_0_V_dout.read().range(15, 10);
}

void relu::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void relu::thread_res_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()))) {
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n.read();
    } else {
        res_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_res_V_data_0_V_din() {
    res_V_data_0_V_din = tmp_data_0_V_3_reg_808.read();
}

void relu::thread_res_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_V_data_0_V_write = ap_const_logic_0;
    }
}

void relu::thread_res_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()))) {
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n.read();
    } else {
        res_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_res_V_data_1_V_din() {
    res_V_data_1_V_din = tmp_data_1_V_3_reg_813.read();
}

void relu::thread_res_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_V_data_1_V_write = ap_const_logic_0;
    }
}

void relu::thread_res_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()))) {
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n.read();
    } else {
        res_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_res_V_data_2_V_din() {
    res_V_data_2_V_din = tmp_data_2_V_3_reg_818.read();
}

void relu::thread_res_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_V_data_2_V_write = ap_const_logic_0;
    }
}

void relu::thread_res_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()))) {
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n.read();
    } else {
        res_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_res_V_data_3_V_din() {
    res_V_data_3_V_din = tmp_data_3_V_3_reg_823.read();
}

void relu::thread_res_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_reg_799_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_V_data_3_V_write = ap_const_logic_0;
    }
}

void relu::thread_select_ln340_1_fu_507_p3() {
    select_ln340_1_fu_507_p3 = (!select_ln777_1_fu_499_p3.read()[0].is_01())? sc_lv<6>(): ((select_ln777_1_fu_499_p3.read()[0].to_bool())? add_ln415_1_fu_451_p2.read(): ap_const_lv6_3F);
}

void relu::thread_select_ln340_2_fu_645_p3() {
    select_ln340_2_fu_645_p3 = (!select_ln777_2_fu_637_p3.read()[0].is_01())? sc_lv<6>(): ((select_ln777_2_fu_637_p3.read()[0].to_bool())? add_ln415_2_fu_589_p2.read(): ap_const_lv6_3F);
}

void relu::thread_select_ln340_3_fu_783_p3() {
    select_ln340_3_fu_783_p3 = (!select_ln777_3_fu_775_p3.read()[0].is_01())? sc_lv<6>(): ((select_ln777_3_fu_775_p3.read()[0].to_bool())? add_ln415_3_fu_727_p2.read(): ap_const_lv6_3F);
}

void relu::thread_select_ln340_fu_369_p3() {
    select_ln340_fu_369_p3 = (!select_ln777_fu_361_p3.read()[0].is_01())? sc_lv<6>(): ((select_ln777_fu_361_p3.read()[0].to_bool())? add_ln415_fu_313_p2.read(): ap_const_lv6_3F);
}

void relu::thread_select_ln777_1_fu_499_p3() {
    select_ln777_1_fu_499_p3 = (!and_ln416_1_fu_471_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln416_1_fu_471_p2.read()[0].to_bool())? icmp_ln879_1_fu_487_p2.read(): icmp_ln768_1_fu_493_p2.read());
}

void relu::thread_select_ln777_2_fu_637_p3() {
    select_ln777_2_fu_637_p3 = (!and_ln416_2_fu_609_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln416_2_fu_609_p2.read()[0].to_bool())? icmp_ln879_2_fu_625_p2.read(): icmp_ln768_2_fu_631_p2.read());
}

void relu::thread_select_ln777_3_fu_775_p3() {
    select_ln777_3_fu_775_p3 = (!and_ln416_3_fu_747_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln416_3_fu_747_p2.read()[0].to_bool())? icmp_ln879_3_fu_763_p2.read(): icmp_ln768_3_fu_769_p2.read());
}

void relu::thread_select_ln777_fu_361_p3() {
    select_ln777_fu_361_p3 = (!and_ln416_fu_333_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln416_fu_333_p2.read()[0].to_bool())? icmp_ln879_fu_349_p2.read(): icmp_ln768_fu_355_p2.read());
}

void relu::thread_start_out() {
    start_out = real_start.read();
}

void relu::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void relu::thread_tmp_37_fu_263_p3() {
    tmp_37_fu_263_p3 = data_V_data_0_V_dout.read().range(4, 4);
}

void relu::thread_tmp_38_fu_281_p3() {
    tmp_38_fu_281_p3 = data_V_data_0_V_dout.read().range(9, 9);
}

void relu::thread_tmp_39_fu_295_p3() {
    tmp_39_fu_295_p3 = data_V_data_0_V_dout.read().range(3, 3);
}

void relu::thread_tmp_40_fu_319_p3() {
    tmp_40_fu_319_p3 = add_ln415_fu_313_p2.read().range(5, 5);
}

void relu::thread_tmp_41_fu_401_p3() {
    tmp_41_fu_401_p3 = data_V_data_1_V_dout.read().range(4, 4);
}

void relu::thread_tmp_42_fu_419_p3() {
    tmp_42_fu_419_p3 = data_V_data_1_V_dout.read().range(9, 9);
}

void relu::thread_tmp_43_fu_433_p3() {
    tmp_43_fu_433_p3 = data_V_data_1_V_dout.read().range(3, 3);
}

void relu::thread_tmp_44_fu_457_p3() {
    tmp_44_fu_457_p3 = add_ln415_1_fu_451_p2.read().range(5, 5);
}

void relu::thread_tmp_45_fu_539_p3() {
    tmp_45_fu_539_p3 = data_V_data_2_V_dout.read().range(4, 4);
}

void relu::thread_tmp_46_fu_557_p3() {
    tmp_46_fu_557_p3 = data_V_data_2_V_dout.read().range(9, 9);
}

void relu::thread_tmp_47_fu_571_p3() {
    tmp_47_fu_571_p3 = data_V_data_2_V_dout.read().range(3, 3);
}

void relu::thread_tmp_48_fu_595_p3() {
    tmp_48_fu_595_p3 = add_ln415_2_fu_589_p2.read().range(5, 5);
}

void relu::thread_tmp_49_fu_677_p3() {
    tmp_49_fu_677_p3 = data_V_data_3_V_dout.read().range(4, 4);
}

void relu::thread_tmp_50_fu_695_p3() {
    tmp_50_fu_695_p3 = data_V_data_3_V_dout.read().range(9, 9);
}

void relu::thread_tmp_51_fu_709_p3() {
    tmp_51_fu_709_p3 = data_V_data_3_V_dout.read().range(3, 3);
}

void relu::thread_tmp_52_fu_733_p3() {
    tmp_52_fu_733_p3 = add_ln415_3_fu_727_p2.read().range(5, 5);
}

void relu::thread_tmp_data_0_V_3_fu_377_p3() {
    tmp_data_0_V_3_fu_377_p3 = (!icmp_ln1494_fu_247_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln1494_fu_247_p2.read()[0].to_bool())? select_ln340_fu_369_p3.read(): ap_const_lv6_0);
}

void relu::thread_tmp_data_1_V_3_fu_515_p3() {
    tmp_data_1_V_3_fu_515_p3 = (!icmp_ln1494_1_fu_385_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln1494_1_fu_385_p2.read()[0].to_bool())? select_ln340_1_fu_507_p3.read(): ap_const_lv6_0);
}

void relu::thread_tmp_data_2_V_3_fu_653_p3() {
    tmp_data_2_V_3_fu_653_p3 = (!icmp_ln1494_2_fu_523_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln1494_2_fu_523_p2.read()[0].to_bool())? select_ln340_2_fu_645_p3.read(): ap_const_lv6_0);
}

void relu::thread_tmp_data_3_V_3_fu_791_p3() {
    tmp_data_3_V_3_fu_791_p3 = (!icmp_ln1494_3_fu_661_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln1494_3_fu_661_p2.read()[0].to_bool())? select_ln340_3_fu_783_p3.read(): ap_const_lv6_0);
}

void relu::thread_trunc_ln708_4_fu_391_p4() {
    trunc_ln708_4_fu_391_p4 = data_V_data_1_V_dout.read().range(9, 4);
}

void relu::thread_trunc_ln708_5_fu_529_p4() {
    trunc_ln708_5_fu_529_p4 = data_V_data_2_V_dout.read().range(9, 4);
}

void relu::thread_trunc_ln708_6_fu_667_p4() {
    trunc_ln708_6_fu_667_p4 = data_V_data_3_V_dout.read().range(9, 4);
}

void relu::thread_trunc_ln718_4_fu_409_p1() {
    trunc_ln718_4_fu_409_p1 = data_V_data_1_V_dout.read().range(3-1, 0);
}

void relu::thread_trunc_ln718_5_fu_547_p1() {
    trunc_ln718_5_fu_547_p1 = data_V_data_2_V_dout.read().range(3-1, 0);
}

void relu::thread_trunc_ln718_6_fu_685_p1() {
    trunc_ln718_6_fu_685_p1 = data_V_data_3_V_dout.read().range(3-1, 0);
}

void relu::thread_trunc_ln718_fu_271_p1() {
    trunc_ln718_fu_271_p1 = data_V_data_0_V_dout.read().range(3-1, 0);
}

void relu::thread_trunc_ln_fu_253_p4() {
    trunc_ln_fu_253_p4 = data_V_data_0_V_dout.read().range(9, 4);
}

void relu::thread_xor_ln416_4_fu_465_p2() {
    xor_ln416_4_fu_465_p2 = (tmp_44_fu_457_p3.read() ^ ap_const_lv1_1);
}

void relu::thread_xor_ln416_5_fu_603_p2() {
    xor_ln416_5_fu_603_p2 = (tmp_48_fu_595_p3.read() ^ ap_const_lv1_1);
}

void relu::thread_xor_ln416_6_fu_741_p2() {
    xor_ln416_6_fu_741_p2 = (tmp_52_fu_733_p3.read() ^ ap_const_lv1_1);
}

void relu::thread_xor_ln416_fu_327_p2() {
    xor_ln416_fu_327_p2 = (tmp_40_fu_319_p3.read() ^ ap_const_lv1_1);
}

void relu::thread_zext_ln415_1_fu_447_p1() {
    zext_ln415_1_fu_447_p1 = esl_zext<6,1>(and_ln415_1_fu_441_p2.read());
}

void relu::thread_zext_ln415_2_fu_585_p1() {
    zext_ln415_2_fu_585_p1 = esl_zext<6,1>(and_ln415_2_fu_579_p2.read());
}

void relu::thread_zext_ln415_3_fu_723_p1() {
    zext_ln415_3_fu_723_p1 = esl_zext<6,1>(and_ln415_3_fu_717_p2.read());
}

void relu::thread_zext_ln415_fu_309_p1() {
    zext_ln415_fu_309_p1 = esl_zext<6,1>(and_ln415_fu_303_p2.read());
}

void relu::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln41_fu_219_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln41_fu_219_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

