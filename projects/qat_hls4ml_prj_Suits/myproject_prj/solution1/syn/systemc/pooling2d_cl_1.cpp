// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pooling2d_cl_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pooling2d_cl_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pooling2d_cl_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> pooling2d_cl_1::ap_ST_fsm_state1 = "1";
const sc_lv<3> pooling2d_cl_1::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> pooling2d_cl_1::ap_ST_fsm_state5 = "100";
const bool pooling2d_cl_1::ap_const_boolean_1 = true;
const sc_lv<32> pooling2d_cl_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pooling2d_cl_1::ap_const_lv32_1 = "1";
const bool pooling2d_cl_1::ap_const_boolean_0 = false;
const sc_lv<1> pooling2d_cl_1::ap_const_lv1_0 = "0";
const sc_lv<1> pooling2d_cl_1::ap_const_lv1_1 = "1";
const sc_lv<12> pooling2d_cl_1::ap_const_lv12_0 = "000000000000";
const sc_lv<6> pooling2d_cl_1::ap_const_lv6_3D = "111101";
const sc_lv<12> pooling2d_cl_1::ap_const_lv12_F04 = "111100000100";
const sc_lv<12> pooling2d_cl_1::ap_const_lv12_1 = "1";
const sc_lv<10> pooling2d_cl_1::ap_const_lv10_0 = "0000000000";
const sc_lv<32> pooling2d_cl_1::ap_const_lv32_3D = "111101";
const sc_lv<2> pooling2d_cl_1::ap_const_lv2_3 = "11";
const sc_lv<2> pooling2d_cl_1::ap_const_lv2_2 = "10";
const sc_lv<32> pooling2d_cl_1::ap_const_lv32_6 = "110";
const sc_lv<32> pooling2d_cl_1::ap_const_lv32_15 = "10101";
const sc_lv<32> pooling2d_cl_1::ap_const_lv32_2 = "10";

pooling2d_cl_1::pooling2d_cl_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    line_buffer_Array_V_7_U = new pooling2d_cl_1_limb6("line_buffer_Array_V_7_U");
    line_buffer_Array_V_7_U->clk(ap_clk);
    line_buffer_Array_V_7_U->reset(ap_rst);
    line_buffer_Array_V_7_U->address0(ap_var_for_const0);
    line_buffer_Array_V_7_U->ce0(line_buffer_Array_V_7_ce0);
    line_buffer_Array_V_7_U->we0(line_buffer_Array_V_7_we0);
    line_buffer_Array_V_7_U->d0(data_V_data_0_V_dout);
    line_buffer_Array_V_7_U->q0(line_buffer_Array_V_7_q0);
    line_buffer_Array_V_6_U = new pooling2d_cl_1_limb6("line_buffer_Array_V_6_U");
    line_buffer_Array_V_6_U->clk(ap_clk);
    line_buffer_Array_V_6_U->reset(ap_rst);
    line_buffer_Array_V_6_U->address0(ap_var_for_const0);
    line_buffer_Array_V_6_U->ce0(line_buffer_Array_V_6_ce0);
    line_buffer_Array_V_6_U->we0(line_buffer_Array_V_6_we0);
    line_buffer_Array_V_6_U->d0(data_V_data_1_V_dout);
    line_buffer_Array_V_6_U->q0(line_buffer_Array_V_6_q0);
    line_buffer_Array_V_5_U = new pooling2d_cl_1_limb6("line_buffer_Array_V_5_U");
    line_buffer_Array_V_5_U->clk(ap_clk);
    line_buffer_Array_V_5_U->reset(ap_rst);
    line_buffer_Array_V_5_U->address0(ap_var_for_const0);
    line_buffer_Array_V_5_U->ce0(line_buffer_Array_V_5_ce0);
    line_buffer_Array_V_5_U->we0(line_buffer_Array_V_5_we0);
    line_buffer_Array_V_5_U->d0(data_V_data_2_V_dout);
    line_buffer_Array_V_5_U->q0(line_buffer_Array_V_5_q0);
    line_buffer_Array_V_4_U = new pooling2d_cl_1_limb6("line_buffer_Array_V_4_U");
    line_buffer_Array_V_4_U->clk(ap_clk);
    line_buffer_Array_V_4_U->reset(ap_rst);
    line_buffer_Array_V_4_U->address0(ap_var_for_const0);
    line_buffer_Array_V_4_U->ce0(line_buffer_Array_V_4_ce0);
    line_buffer_Array_V_4_U->we0(line_buffer_Array_V_4_we0);
    line_buffer_Array_V_4_U->d0(data_V_data_3_V_dout);
    line_buffer_Array_V_4_U->q0(line_buffer_Array_V_4_q0);
    myproject_axi_muxkbM_U86 = new myproject_axi_muxkbM<1,1,32,32,32,32,2,32>("myproject_axi_muxkbM_U86");
    myproject_axi_muxkbM_U86->din0(tmp_7_fu_782_p1);
    myproject_axi_muxkbM_U86->din1(tmp_7_fu_782_p2);
    myproject_axi_muxkbM_U86->din2(tmp_7_fu_782_p3);
    myproject_axi_muxkbM_U86->din3(tmp_7_fu_782_p4);
    myproject_axi_muxkbM_U86->din4(tmp_7_fu_782_p5);
    myproject_axi_muxkbM_U86->dout(tmp_7_fu_782_p6);
    myproject_axi_muxkbM_U87 = new myproject_axi_muxkbM<1,1,32,32,32,32,2,32>("myproject_axi_muxkbM_U87");
    myproject_axi_muxkbM_U87->din0(tmp_8_fu_853_p1);
    myproject_axi_muxkbM_U87->din1(tmp_8_fu_853_p2);
    myproject_axi_muxkbM_U87->din2(tmp_8_fu_853_p3);
    myproject_axi_muxkbM_U87->din3(tmp_8_fu_853_p4);
    myproject_axi_muxkbM_U87->din4(tmp_8_fu_853_p5);
    myproject_axi_muxkbM_U87->dout(tmp_8_fu_853_p6);
    myproject_axi_muxkbM_U88 = new myproject_axi_muxkbM<1,1,32,32,32,32,2,32>("myproject_axi_muxkbM_U88");
    myproject_axi_muxkbM_U88->din0(tmp_9_fu_924_p1);
    myproject_axi_muxkbM_U88->din1(tmp_9_fu_924_p2);
    myproject_axi_muxkbM_U88->din2(tmp_9_fu_924_p3);
    myproject_axi_muxkbM_U88->din3(tmp_9_fu_924_p4);
    myproject_axi_muxkbM_U88->din4(tmp_9_fu_924_p5);
    myproject_axi_muxkbM_U88->dout(tmp_9_fu_924_p6);
    myproject_axi_muxkbM_U89 = new myproject_axi_muxkbM<1,1,32,32,32,32,2,32>("myproject_axi_muxkbM_U89");
    myproject_axi_muxkbM_U89->din0(tmp_1_fu_995_p1);
    myproject_axi_muxkbM_U89->din1(tmp_1_fu_995_p2);
    myproject_axi_muxkbM_U89->din2(tmp_1_fu_995_p3);
    myproject_axi_muxkbM_U89->din3(tmp_1_fu_995_p4);
    myproject_axi_muxkbM_U89->din4(tmp_1_fu_995_p5);
    myproject_axi_muxkbM_U89->dout(tmp_1_fu_995_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln220_fu_704_p2);
    sensitive << ( pY_1 );

    SC_METHOD(thread_add_ln222_fu_716_p2);
    sensitive << ( ap_sig_allocacmp_sY_1_load );

    SC_METHOD(thread_add_ln225_fu_654_p2);
    sensitive << ( pX_1 );

    SC_METHOD(thread_add_ln227_fu_666_p2);
    sensitive << ( sX_1 );

    SC_METHOD(thread_add_ln241_fu_272_p2);
    sensitive << ( indvar_flatten_reg_244 );

    SC_METHOD(thread_and_ln191_1_fu_460_p2);
    sensitive << ( icmp_ln191_2_fu_438_p2 );
    sensitive << ( icmp_ln191_3_fu_448_p2 );

    SC_METHOD(thread_and_ln191_2_fu_466_p2);
    sensitive << ( and_ln191_1_fu_460_p2 );
    sensitive << ( and_ln191_fu_454_p2 );

    SC_METHOD(thread_and_ln191_fu_454_p2);
    sensitive << ( icmp_ln191_fu_418_p2 );
    sensitive << ( icmp_ln191_1_fu_428_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( io_acc_block_signal_op152 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( io_acc_block_signal_op152 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( io_acc_block_signal_op152 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( io_acc_block_signal_op19 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( io_acc_block_signal_op152 );

    SC_METHOD(thread_ap_condition_242);
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( icmp_ln212_fu_648_p2 );
    sensitive << ( icmp_ln216_fu_698_p2 );

    SC_METHOD(thread_ap_condition_267);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_271);
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( icmp_ln212_fu_648_p2 );
    sensitive << ( icmp_ln216_fu_698_p2 );

    SC_METHOD(thread_ap_condition_748);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln212_fu_648_p2 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln241_fu_266_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge_i_i_reg_255);

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_sig_allocacmp_sY_1_load);
    sensitive << ( sY_1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln212_reg_1183 );
    sensitive << ( ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255 );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln241_reg_1026 );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln241_reg_1026 );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_2_V_blk_n);
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln241_reg_1026 );

    SC_METHOD(thread_data_V_data_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_3_V_blk_n);
    sensitive << ( data_V_data_3_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln241_reg_1026 );

    SC_METHOD(thread_data_V_data_3_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1496_10_fu_642_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_2_V_6_fu_620_p3 );
    sensitive << ( pool_window_3_V_6_fu_628_p3 );

    SC_METHOD(thread_icmp_ln1496_11_fu_978_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln65_14_fu_961_p3 );
    sensitive << ( select_ln65_16_fu_973_p3 );

    SC_METHOD(thread_icmp_ln1496_1_fu_548_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_0_V_2_fu_516_p3 );
    sensitive << ( pool_window_1_V_2_fu_524_p3 );

    SC_METHOD(thread_icmp_ln1496_2_fu_592_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_0_V_4_fu_560_p3 );
    sensitive << ( pool_window_1_V_4_fu_568_p3 );

    SC_METHOD(thread_icmp_ln1496_3_fu_510_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_2_V_fu_488_p3 );
    sensitive << ( pool_window_3_V_fu_496_p3 );

    SC_METHOD(thread_icmp_ln1496_4_fu_765_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln65_fu_748_p3 );
    sensitive << ( select_ln65_4_fu_760_p3 );

    SC_METHOD(thread_icmp_ln1496_5_fu_554_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_2_V_2_fu_532_p3 );
    sensitive << ( pool_window_3_V_2_fu_540_p3 );

    SC_METHOD(thread_icmp_ln1496_6_fu_836_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln65_6_fu_819_p3 );
    sensitive << ( select_ln65_8_fu_831_p3 );

    SC_METHOD(thread_icmp_ln1496_7_fu_598_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_2_V_4_fu_576_p3 );
    sensitive << ( pool_window_3_V_4_fu_584_p3 );

    SC_METHOD(thread_icmp_ln1496_8_fu_907_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln65_10_fu_890_p3 );
    sensitive << ( select_ln65_12_fu_902_p3 );

    SC_METHOD(thread_icmp_ln1496_9_fu_636_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_0_V_6_fu_604_p3 );
    sensitive << ( pool_window_1_V_6_fu_612_p3 );

    SC_METHOD(thread_icmp_ln1496_fu_504_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln191_2_fu_466_p2 );
    sensitive << ( pool_window_0_V_fu_472_p3 );
    sensitive << ( pool_window_1_V_fu_480_p3 );

    SC_METHOD(thread_icmp_ln191_1_fu_428_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_sig_allocacmp_sY_1_load );

    SC_METHOD(thread_icmp_ln191_2_fu_438_p2);
    sensitive << ( pY_1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln191_3_fu_448_p2);
    sensitive << ( pX_1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln191_fu_418_p2);
    sensitive << ( sX_1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln212_fu_648_p2);
    sensitive << ( pX_1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln216_fu_698_p2);
    sensitive << ( pY_1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln212_fu_648_p2 );

    SC_METHOD(thread_icmp_ln241_fu_266_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_244 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_io_acc_block_signal_op152);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( res_V_data_3_V_full_n );

    SC_METHOD(thread_io_acc_block_signal_op19);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( data_V_data_3_V_empty_n );

    SC_METHOD(thread_line_buffer_Array_V_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_4_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_5_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_6_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_Array_V_7_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln241_reg_1026 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_pool_window_0_V_2_fu_516_p3);
    sensitive << ( kernel_data_V_2_5 );

    SC_METHOD(thread_pool_window_0_V_4_fu_560_p3);
    sensitive << ( kernel_data_V_2_6 );

    SC_METHOD(thread_pool_window_0_V_6_fu_604_p3);
    sensitive << ( kernel_data_V_2_7 );

    SC_METHOD(thread_pool_window_0_V_fu_472_p3);
    sensitive << ( kernel_data_V_2_4 );

    SC_METHOD(thread_pool_window_1_V_2_fu_524_p3);
    sensitive << ( line_buffer_Array_V_6_q0 );

    SC_METHOD(thread_pool_window_1_V_4_fu_568_p3);
    sensitive << ( line_buffer_Array_V_5_q0 );

    SC_METHOD(thread_pool_window_1_V_6_fu_612_p3);
    sensitive << ( line_buffer_Array_V_4_q0 );

    SC_METHOD(thread_pool_window_1_V_fu_480_p3);
    sensitive << ( line_buffer_Array_V_7_q0 );

    SC_METHOD(thread_pool_window_2_V_2_fu_532_p3);
    sensitive << ( kernel_data_V_2_13 );

    SC_METHOD(thread_pool_window_2_V_4_fu_576_p3);
    sensitive << ( kernel_data_V_2_14 );

    SC_METHOD(thread_pool_window_2_V_6_fu_620_p3);
    sensitive << ( kernel_data_V_2_15 );

    SC_METHOD(thread_pool_window_2_V_fu_488_p3);
    sensitive << ( kernel_data_V_2_12 );

    SC_METHOD(thread_pool_window_3_V_2_fu_540_p3);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_pool_window_3_V_4_fu_584_p3);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_pool_window_3_V_6_fu_628_p3);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_pool_window_3_V_fu_496_p3);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_V_data_0_V_blk_n);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );

    SC_METHOD(thread_res_V_data_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_7_fu_782_p6 );

    SC_METHOD(thread_res_V_data_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_1_V_blk_n);
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );

    SC_METHOD(thread_res_V_data_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_8_fu_853_p6 );

    SC_METHOD(thread_res_V_data_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_2_V_blk_n);
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );

    SC_METHOD(thread_res_V_data_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_9_fu_924_p6 );

    SC_METHOD(thread_res_V_data_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_3_V_blk_n);
    sensitive << ( res_V_data_3_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );

    SC_METHOD(thread_res_V_data_3_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_1_fu_995_p6 );

    SC_METHOD(thread_res_V_data_3_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( and_ln191_2_reg_1035 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln222_fu_722_p3);
    sensitive << ( icmp_ln191_1_fu_428_p2 );
    sensitive << ( add_ln222_fu_716_p2 );

    SC_METHOD(thread_select_ln227_fu_672_p3);
    sensitive << ( icmp_ln191_fu_418_p2 );
    sensitive << ( add_ln227_fu_666_p2 );

    SC_METHOD(thread_select_ln65_10_fu_890_p3);
    sensitive << ( pool_window_0_V_4_reg_1111 );
    sensitive << ( pool_window_1_V_4_reg_1117 );
    sensitive << ( icmp_ln1496_2_reg_1135 );

    SC_METHOD(thread_select_ln65_11_fu_895_p3);
    sensitive << ( icmp_ln1496_7_reg_1141 );

    SC_METHOD(thread_select_ln65_12_fu_902_p3);
    sensitive << ( pool_window_2_V_4_reg_1123 );
    sensitive << ( pool_window_3_V_4_reg_1129 );
    sensitive << ( icmp_ln1496_7_reg_1141 );

    SC_METHOD(thread_select_ln65_14_fu_961_p3);
    sensitive << ( pool_window_0_V_6_reg_1147 );
    sensitive << ( pool_window_1_V_6_reg_1153 );
    sensitive << ( icmp_ln1496_9_reg_1171 );

    SC_METHOD(thread_select_ln65_15_fu_966_p3);
    sensitive << ( icmp_ln1496_10_reg_1177 );

    SC_METHOD(thread_select_ln65_16_fu_973_p3);
    sensitive << ( pool_window_2_V_6_reg_1159 );
    sensitive << ( pool_window_3_V_6_reg_1165 );
    sensitive << ( icmp_ln1496_10_reg_1177 );

    SC_METHOD(thread_select_ln65_3_fu_753_p3);
    sensitive << ( icmp_ln1496_3_reg_1069 );

    SC_METHOD(thread_select_ln65_4_fu_760_p3);
    sensitive << ( pool_window_2_V_reg_1051 );
    sensitive << ( pool_window_3_V_reg_1057 );
    sensitive << ( icmp_ln1496_3_reg_1069 );

    SC_METHOD(thread_select_ln65_6_fu_819_p3);
    sensitive << ( pool_window_0_V_2_reg_1075 );
    sensitive << ( pool_window_1_V_2_reg_1081 );
    sensitive << ( icmp_ln1496_1_reg_1099 );

    SC_METHOD(thread_select_ln65_7_fu_824_p3);
    sensitive << ( icmp_ln1496_5_reg_1105 );

    SC_METHOD(thread_select_ln65_8_fu_831_p3);
    sensitive << ( pool_window_2_V_2_reg_1087 );
    sensitive << ( pool_window_3_V_2_reg_1093 );
    sensitive << ( icmp_ln1496_5_reg_1105 );

    SC_METHOD(thread_select_ln65_fu_748_p3);
    sensitive << ( pool_window_0_V_reg_1039 );
    sensitive << ( pool_window_1_V_reg_1045 );
    sensitive << ( icmp_ln1496_reg_1063 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_1_fu_995_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_0_V_6_reg_1147 );

    SC_METHOD(thread_tmp_1_fu_995_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_1_V_6_reg_1153 );

    SC_METHOD(thread_tmp_1_fu_995_p3);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_2_V_6_reg_1159 );

    SC_METHOD(thread_tmp_1_fu_995_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_3_V_6_reg_1165 );

    SC_METHOD(thread_tmp_1_fu_995_p5);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln1496_11_fu_978_p2 );
    sensitive << ( select_ln65_15_fu_966_p3 );
    sensitive << ( zext_ln65_3_fu_984_p1 );

    SC_METHOD(thread_tmp_7_fu_782_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_0_V_reg_1039 );

    SC_METHOD(thread_tmp_7_fu_782_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_1_V_reg_1045 );

    SC_METHOD(thread_tmp_7_fu_782_p3);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_2_V_reg_1051 );

    SC_METHOD(thread_tmp_7_fu_782_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_3_V_reg_1057 );

    SC_METHOD(thread_tmp_7_fu_782_p5);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln1496_4_fu_765_p2 );
    sensitive << ( select_ln65_3_fu_753_p3 );
    sensitive << ( zext_ln65_fu_771_p1 );

    SC_METHOD(thread_tmp_8_fu_853_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_0_V_2_reg_1075 );

    SC_METHOD(thread_tmp_8_fu_853_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_1_V_2_reg_1081 );

    SC_METHOD(thread_tmp_8_fu_853_p3);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_2_V_2_reg_1087 );

    SC_METHOD(thread_tmp_8_fu_853_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_3_V_2_reg_1093 );

    SC_METHOD(thread_tmp_8_fu_853_p5);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln1496_6_fu_836_p2 );
    sensitive << ( select_ln65_7_fu_824_p3 );
    sensitive << ( zext_ln65_1_fu_842_p1 );

    SC_METHOD(thread_tmp_9_fu_924_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_0_V_4_reg_1111 );

    SC_METHOD(thread_tmp_9_fu_924_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_1_V_4_reg_1117 );

    SC_METHOD(thread_tmp_9_fu_924_p3);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_2_V_4_reg_1123 );

    SC_METHOD(thread_tmp_9_fu_924_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( pool_window_3_V_4_reg_1129 );

    SC_METHOD(thread_tmp_9_fu_924_p5);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln1496_8_fu_907_p2 );
    sensitive << ( select_ln65_11_fu_895_p3 );
    sensitive << ( zext_ln65_2_fu_913_p1 );

    SC_METHOD(thread_zext_ln65_1_fu_842_p1);
    sensitive << ( icmp_ln1496_1_reg_1099 );

    SC_METHOD(thread_zext_ln65_2_fu_913_p1);
    sensitive << ( icmp_ln1496_2_reg_1135 );

    SC_METHOD(thread_zext_ln65_3_fu_984_p1);
    sensitive << ( icmp_ln1496_9_reg_1171 );

    SC_METHOD(thread_zext_ln65_fu_771_p1);
    sensitive << ( icmp_ln1496_reg_1063 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln241_fu_266_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    pX_1 = "00000000000000000000000000000000";
    sX_1 = "00000000000000000000000000000000";
    pY_1 = "00000000000000000000000000000000";
    sY_1 = "00000000000000000000000000000000";
    kernel_data_V_2_4 = "000000";
    kernel_data_V_2_5 = "000000";
    kernel_data_V_2_6 = "000000";
    kernel_data_V_2_7 = "000000";
    kernel_data_V_2_12 = "000000";
    kernel_data_V_2_13 = "000000";
    kernel_data_V_2_14 = "000000";
    kernel_data_V_2_15 = "000000";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pooling2d_cl_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, data_V_data_2_V_dout, "(port)data_V_data_2_V_dout");
    sc_trace(mVcdFile, data_V_data_2_V_empty_n, "(port)data_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_V_data_2_V_read, "(port)data_V_data_2_V_read");
    sc_trace(mVcdFile, data_V_data_3_V_dout, "(port)data_V_data_3_V_dout");
    sc_trace(mVcdFile, data_V_data_3_V_empty_n, "(port)data_V_data_3_V_empty_n");
    sc_trace(mVcdFile, data_V_data_3_V_read, "(port)data_V_data_3_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_din, "(port)res_V_data_0_V_din");
    sc_trace(mVcdFile, res_V_data_0_V_full_n, "(port)res_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_V_data_0_V_write, "(port)res_V_data_0_V_write");
    sc_trace(mVcdFile, res_V_data_1_V_din, "(port)res_V_data_1_V_din");
    sc_trace(mVcdFile, res_V_data_1_V_full_n, "(port)res_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_V_data_1_V_write, "(port)res_V_data_1_V_write");
    sc_trace(mVcdFile, res_V_data_2_V_din, "(port)res_V_data_2_V_din");
    sc_trace(mVcdFile, res_V_data_2_V_full_n, "(port)res_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_V_data_2_V_write, "(port)res_V_data_2_V_write");
    sc_trace(mVcdFile, res_V_data_3_V_din, "(port)res_V_data_3_V_din");
    sc_trace(mVcdFile, res_V_data_3_V_full_n, "(port)res_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_V_data_3_V_write, "(port)res_V_data_3_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, pX_1, "pX_1");
    sc_trace(mVcdFile, sX_1, "sX_1");
    sc_trace(mVcdFile, pY_1, "pY_1");
    sc_trace(mVcdFile, sY_1, "sY_1");
    sc_trace(mVcdFile, kernel_data_V_2_4, "kernel_data_V_2_4");
    sc_trace(mVcdFile, kernel_data_V_2_5, "kernel_data_V_2_5");
    sc_trace(mVcdFile, kernel_data_V_2_6, "kernel_data_V_2_6");
    sc_trace(mVcdFile, kernel_data_V_2_7, "kernel_data_V_2_7");
    sc_trace(mVcdFile, kernel_data_V_2_12, "kernel_data_V_2_12");
    sc_trace(mVcdFile, kernel_data_V_2_13, "kernel_data_V_2_13");
    sc_trace(mVcdFile, kernel_data_V_2_14, "kernel_data_V_2_14");
    sc_trace(mVcdFile, kernel_data_V_2_15, "kernel_data_V_2_15");
    sc_trace(mVcdFile, line_buffer_Array_V_7_ce0, "line_buffer_Array_V_7_ce0");
    sc_trace(mVcdFile, line_buffer_Array_V_7_we0, "line_buffer_Array_V_7_we0");
    sc_trace(mVcdFile, line_buffer_Array_V_7_q0, "line_buffer_Array_V_7_q0");
    sc_trace(mVcdFile, line_buffer_Array_V_6_ce0, "line_buffer_Array_V_6_ce0");
    sc_trace(mVcdFile, line_buffer_Array_V_6_we0, "line_buffer_Array_V_6_we0");
    sc_trace(mVcdFile, line_buffer_Array_V_6_q0, "line_buffer_Array_V_6_q0");
    sc_trace(mVcdFile, line_buffer_Array_V_5_ce0, "line_buffer_Array_V_5_ce0");
    sc_trace(mVcdFile, line_buffer_Array_V_5_we0, "line_buffer_Array_V_5_we0");
    sc_trace(mVcdFile, line_buffer_Array_V_5_q0, "line_buffer_Array_V_5_q0");
    sc_trace(mVcdFile, line_buffer_Array_V_4_ce0, "line_buffer_Array_V_4_ce0");
    sc_trace(mVcdFile, line_buffer_Array_V_4_we0, "line_buffer_Array_V_4_we0");
    sc_trace(mVcdFile, line_buffer_Array_V_4_q0, "line_buffer_Array_V_4_q0");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln241_reg_1026, "icmp_ln241_reg_1026");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_V_data_2_V_blk_n, "data_V_data_2_V_blk_n");
    sc_trace(mVcdFile, data_V_data_3_V_blk_n, "data_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_blk_n, "res_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, and_ln191_2_reg_1035, "and_ln191_2_reg_1035");
    sc_trace(mVcdFile, res_V_data_1_V_blk_n, "res_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_2_V_blk_n, "res_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_V_data_3_V_blk_n, "res_V_data_3_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_244, "indvar_flatten_reg_244");
    sc_trace(mVcdFile, icmp_ln241_fu_266_p2, "icmp_ln241_fu_266_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op19, "io_acc_block_signal_op19");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, io_acc_block_signal_op152, "io_acc_block_signal_op152");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln241_fu_272_p2, "add_ln241_fu_272_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, and_ln191_2_fu_466_p2, "and_ln191_2_fu_466_p2");
    sc_trace(mVcdFile, pool_window_0_V_fu_472_p3, "pool_window_0_V_fu_472_p3");
    sc_trace(mVcdFile, pool_window_0_V_reg_1039, "pool_window_0_V_reg_1039");
    sc_trace(mVcdFile, pool_window_1_V_fu_480_p3, "pool_window_1_V_fu_480_p3");
    sc_trace(mVcdFile, pool_window_1_V_reg_1045, "pool_window_1_V_reg_1045");
    sc_trace(mVcdFile, pool_window_2_V_fu_488_p3, "pool_window_2_V_fu_488_p3");
    sc_trace(mVcdFile, pool_window_2_V_reg_1051, "pool_window_2_V_reg_1051");
    sc_trace(mVcdFile, pool_window_3_V_fu_496_p3, "pool_window_3_V_fu_496_p3");
    sc_trace(mVcdFile, pool_window_3_V_reg_1057, "pool_window_3_V_reg_1057");
    sc_trace(mVcdFile, icmp_ln1496_fu_504_p2, "icmp_ln1496_fu_504_p2");
    sc_trace(mVcdFile, icmp_ln1496_reg_1063, "icmp_ln1496_reg_1063");
    sc_trace(mVcdFile, icmp_ln1496_3_fu_510_p2, "icmp_ln1496_3_fu_510_p2");
    sc_trace(mVcdFile, icmp_ln1496_3_reg_1069, "icmp_ln1496_3_reg_1069");
    sc_trace(mVcdFile, pool_window_0_V_2_fu_516_p3, "pool_window_0_V_2_fu_516_p3");
    sc_trace(mVcdFile, pool_window_0_V_2_reg_1075, "pool_window_0_V_2_reg_1075");
    sc_trace(mVcdFile, pool_window_1_V_2_fu_524_p3, "pool_window_1_V_2_fu_524_p3");
    sc_trace(mVcdFile, pool_window_1_V_2_reg_1081, "pool_window_1_V_2_reg_1081");
    sc_trace(mVcdFile, pool_window_2_V_2_fu_532_p3, "pool_window_2_V_2_fu_532_p3");
    sc_trace(mVcdFile, pool_window_2_V_2_reg_1087, "pool_window_2_V_2_reg_1087");
    sc_trace(mVcdFile, pool_window_3_V_2_fu_540_p3, "pool_window_3_V_2_fu_540_p3");
    sc_trace(mVcdFile, pool_window_3_V_2_reg_1093, "pool_window_3_V_2_reg_1093");
    sc_trace(mVcdFile, icmp_ln1496_1_fu_548_p2, "icmp_ln1496_1_fu_548_p2");
    sc_trace(mVcdFile, icmp_ln1496_1_reg_1099, "icmp_ln1496_1_reg_1099");
    sc_trace(mVcdFile, icmp_ln1496_5_fu_554_p2, "icmp_ln1496_5_fu_554_p2");
    sc_trace(mVcdFile, icmp_ln1496_5_reg_1105, "icmp_ln1496_5_reg_1105");
    sc_trace(mVcdFile, pool_window_0_V_4_fu_560_p3, "pool_window_0_V_4_fu_560_p3");
    sc_trace(mVcdFile, pool_window_0_V_4_reg_1111, "pool_window_0_V_4_reg_1111");
    sc_trace(mVcdFile, pool_window_1_V_4_fu_568_p3, "pool_window_1_V_4_fu_568_p3");
    sc_trace(mVcdFile, pool_window_1_V_4_reg_1117, "pool_window_1_V_4_reg_1117");
    sc_trace(mVcdFile, pool_window_2_V_4_fu_576_p3, "pool_window_2_V_4_fu_576_p3");
    sc_trace(mVcdFile, pool_window_2_V_4_reg_1123, "pool_window_2_V_4_reg_1123");
    sc_trace(mVcdFile, pool_window_3_V_4_fu_584_p3, "pool_window_3_V_4_fu_584_p3");
    sc_trace(mVcdFile, pool_window_3_V_4_reg_1129, "pool_window_3_V_4_reg_1129");
    sc_trace(mVcdFile, icmp_ln1496_2_fu_592_p2, "icmp_ln1496_2_fu_592_p2");
    sc_trace(mVcdFile, icmp_ln1496_2_reg_1135, "icmp_ln1496_2_reg_1135");
    sc_trace(mVcdFile, icmp_ln1496_7_fu_598_p2, "icmp_ln1496_7_fu_598_p2");
    sc_trace(mVcdFile, icmp_ln1496_7_reg_1141, "icmp_ln1496_7_reg_1141");
    sc_trace(mVcdFile, pool_window_0_V_6_fu_604_p3, "pool_window_0_V_6_fu_604_p3");
    sc_trace(mVcdFile, pool_window_0_V_6_reg_1147, "pool_window_0_V_6_reg_1147");
    sc_trace(mVcdFile, pool_window_1_V_6_fu_612_p3, "pool_window_1_V_6_fu_612_p3");
    sc_trace(mVcdFile, pool_window_1_V_6_reg_1153, "pool_window_1_V_6_reg_1153");
    sc_trace(mVcdFile, pool_window_2_V_6_fu_620_p3, "pool_window_2_V_6_fu_620_p3");
    sc_trace(mVcdFile, pool_window_2_V_6_reg_1159, "pool_window_2_V_6_reg_1159");
    sc_trace(mVcdFile, pool_window_3_V_6_fu_628_p3, "pool_window_3_V_6_fu_628_p3");
    sc_trace(mVcdFile, pool_window_3_V_6_reg_1165, "pool_window_3_V_6_reg_1165");
    sc_trace(mVcdFile, icmp_ln1496_9_fu_636_p2, "icmp_ln1496_9_fu_636_p2");
    sc_trace(mVcdFile, icmp_ln1496_9_reg_1171, "icmp_ln1496_9_reg_1171");
    sc_trace(mVcdFile, icmp_ln1496_10_fu_642_p2, "icmp_ln1496_10_fu_642_p2");
    sc_trace(mVcdFile, icmp_ln1496_10_reg_1177, "icmp_ln1496_10_reg_1177");
    sc_trace(mVcdFile, icmp_ln212_fu_648_p2, "icmp_ln212_fu_648_p2");
    sc_trace(mVcdFile, icmp_ln212_reg_1183, "icmp_ln212_reg_1183");
    sc_trace(mVcdFile, icmp_ln216_fu_698_p2, "icmp_ln216_fu_698_p2");
    sc_trace(mVcdFile, select_ln222_fu_722_p3, "select_ln222_fu_722_p3");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge_i_i_reg_255, "ap_phi_reg_pp0_iter0_storemerge_i_i_reg_255");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_storemerge_i_i_reg_255, "ap_phi_reg_pp0_iter1_storemerge_i_i_reg_255");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255, "ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255");
    sc_trace(mVcdFile, add_ln225_fu_654_p2, "add_ln225_fu_654_p2");
    sc_trace(mVcdFile, select_ln227_fu_672_p3, "select_ln227_fu_672_p3");
    sc_trace(mVcdFile, add_ln220_fu_704_p2, "add_ln220_fu_704_p2");
    sc_trace(mVcdFile, ap_sig_allocacmp_sY_1_load, "ap_sig_allocacmp_sY_1_load");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, icmp_ln191_fu_418_p2, "icmp_ln191_fu_418_p2");
    sc_trace(mVcdFile, icmp_ln191_1_fu_428_p2, "icmp_ln191_1_fu_428_p2");
    sc_trace(mVcdFile, icmp_ln191_2_fu_438_p2, "icmp_ln191_2_fu_438_p2");
    sc_trace(mVcdFile, icmp_ln191_3_fu_448_p2, "icmp_ln191_3_fu_448_p2");
    sc_trace(mVcdFile, and_ln191_1_fu_460_p2, "and_ln191_1_fu_460_p2");
    sc_trace(mVcdFile, and_ln191_fu_454_p2, "and_ln191_fu_454_p2");
    sc_trace(mVcdFile, add_ln227_fu_666_p2, "add_ln227_fu_666_p2");
    sc_trace(mVcdFile, add_ln222_fu_716_p2, "add_ln222_fu_716_p2");
    sc_trace(mVcdFile, select_ln65_fu_748_p3, "select_ln65_fu_748_p3");
    sc_trace(mVcdFile, select_ln65_4_fu_760_p3, "select_ln65_4_fu_760_p3");
    sc_trace(mVcdFile, icmp_ln1496_4_fu_765_p2, "icmp_ln1496_4_fu_765_p2");
    sc_trace(mVcdFile, select_ln65_3_fu_753_p3, "select_ln65_3_fu_753_p3");
    sc_trace(mVcdFile, zext_ln65_fu_771_p1, "zext_ln65_fu_771_p1");
    sc_trace(mVcdFile, tmp_7_fu_782_p1, "tmp_7_fu_782_p1");
    sc_trace(mVcdFile, tmp_7_fu_782_p2, "tmp_7_fu_782_p2");
    sc_trace(mVcdFile, tmp_7_fu_782_p3, "tmp_7_fu_782_p3");
    sc_trace(mVcdFile, tmp_7_fu_782_p4, "tmp_7_fu_782_p4");
    sc_trace(mVcdFile, tmp_7_fu_782_p5, "tmp_7_fu_782_p5");
    sc_trace(mVcdFile, tmp_7_fu_782_p6, "tmp_7_fu_782_p6");
    sc_trace(mVcdFile, select_ln65_6_fu_819_p3, "select_ln65_6_fu_819_p3");
    sc_trace(mVcdFile, select_ln65_8_fu_831_p3, "select_ln65_8_fu_831_p3");
    sc_trace(mVcdFile, icmp_ln1496_6_fu_836_p2, "icmp_ln1496_6_fu_836_p2");
    sc_trace(mVcdFile, select_ln65_7_fu_824_p3, "select_ln65_7_fu_824_p3");
    sc_trace(mVcdFile, zext_ln65_1_fu_842_p1, "zext_ln65_1_fu_842_p1");
    sc_trace(mVcdFile, tmp_8_fu_853_p1, "tmp_8_fu_853_p1");
    sc_trace(mVcdFile, tmp_8_fu_853_p2, "tmp_8_fu_853_p2");
    sc_trace(mVcdFile, tmp_8_fu_853_p3, "tmp_8_fu_853_p3");
    sc_trace(mVcdFile, tmp_8_fu_853_p4, "tmp_8_fu_853_p4");
    sc_trace(mVcdFile, tmp_8_fu_853_p5, "tmp_8_fu_853_p5");
    sc_trace(mVcdFile, tmp_8_fu_853_p6, "tmp_8_fu_853_p6");
    sc_trace(mVcdFile, select_ln65_10_fu_890_p3, "select_ln65_10_fu_890_p3");
    sc_trace(mVcdFile, select_ln65_12_fu_902_p3, "select_ln65_12_fu_902_p3");
    sc_trace(mVcdFile, icmp_ln1496_8_fu_907_p2, "icmp_ln1496_8_fu_907_p2");
    sc_trace(mVcdFile, select_ln65_11_fu_895_p3, "select_ln65_11_fu_895_p3");
    sc_trace(mVcdFile, zext_ln65_2_fu_913_p1, "zext_ln65_2_fu_913_p1");
    sc_trace(mVcdFile, tmp_9_fu_924_p1, "tmp_9_fu_924_p1");
    sc_trace(mVcdFile, tmp_9_fu_924_p2, "tmp_9_fu_924_p2");
    sc_trace(mVcdFile, tmp_9_fu_924_p3, "tmp_9_fu_924_p3");
    sc_trace(mVcdFile, tmp_9_fu_924_p4, "tmp_9_fu_924_p4");
    sc_trace(mVcdFile, tmp_9_fu_924_p5, "tmp_9_fu_924_p5");
    sc_trace(mVcdFile, tmp_9_fu_924_p6, "tmp_9_fu_924_p6");
    sc_trace(mVcdFile, select_ln65_14_fu_961_p3, "select_ln65_14_fu_961_p3");
    sc_trace(mVcdFile, select_ln65_16_fu_973_p3, "select_ln65_16_fu_973_p3");
    sc_trace(mVcdFile, icmp_ln1496_11_fu_978_p2, "icmp_ln1496_11_fu_978_p2");
    sc_trace(mVcdFile, select_ln65_15_fu_966_p3, "select_ln65_15_fu_966_p3");
    sc_trace(mVcdFile, zext_ln65_3_fu_984_p1, "zext_ln65_3_fu_984_p1");
    sc_trace(mVcdFile, tmp_1_fu_995_p1, "tmp_1_fu_995_p1");
    sc_trace(mVcdFile, tmp_1_fu_995_p2, "tmp_1_fu_995_p2");
    sc_trace(mVcdFile, tmp_1_fu_995_p3, "tmp_1_fu_995_p3");
    sc_trace(mVcdFile, tmp_1_fu_995_p4, "tmp_1_fu_995_p4");
    sc_trace(mVcdFile, tmp_1_fu_995_p5, "tmp_1_fu_995_p5");
    sc_trace(mVcdFile, tmp_1_fu_995_p6, "tmp_1_fu_995_p6");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_242, "ap_condition_242");
    sc_trace(mVcdFile, ap_condition_271, "ap_condition_271");
    sc_trace(mVcdFile, ap_condition_267, "ap_condition_267");
    sc_trace(mVcdFile, ap_condition_748, "ap_condition_748");
#endif

    }
}

pooling2d_cl_1::~pooling2d_cl_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete line_buffer_Array_V_7_U;
    delete line_buffer_Array_V_6_U;
    delete line_buffer_Array_V_5_U;
    delete line_buffer_Array_V_4_U;
    delete myproject_axi_muxkbM_U86;
    delete myproject_axi_muxkbM_U87;
    delete myproject_axi_muxkbM_U88;
    delete myproject_axi_muxkbM_U89;
}

void pooling2d_cl_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv6_3D;
}

void pooling2d_cl_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_267.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_271.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_condition_242.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255 = select_ln222_fu_722_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255 = ap_phi_reg_pp0_iter1_storemerge_i_i_reg_255.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln241_fu_266_p2.read()))) {
        indvar_flatten_reg_244 = add_ln241_fu_272_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_244 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_267.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_fu_648_p2.read())) {
            pX_1 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln212_fu_648_p2.read())) {
            pX_1 = add_ln225_fu_654_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_748.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln216_fu_698_p2.read())) {
            pY_1 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln216_fu_698_p2.read())) {
            pY_1 = add_ln220_fu_704_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_267.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_fu_648_p2.read())) {
            sX_1 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln212_fu_648_p2.read())) {
            sX_1 = select_ln227_fu_672_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        and_ln191_2_reg_1035 = and_ln191_2_fu_466_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_255 = ap_phi_reg_pp0_iter0_storemerge_i_i_reg_255.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln191_2_fu_466_p2.read()))) {
        icmp_ln1496_10_reg_1177 = icmp_ln1496_10_fu_642_p2.read();
        icmp_ln1496_1_reg_1099 = icmp_ln1496_1_fu_548_p2.read();
        icmp_ln1496_2_reg_1135 = icmp_ln1496_2_fu_592_p2.read();
        icmp_ln1496_3_reg_1069 = icmp_ln1496_3_fu_510_p2.read();
        icmp_ln1496_5_reg_1105 = icmp_ln1496_5_fu_554_p2.read();
        icmp_ln1496_7_reg_1141 = icmp_ln1496_7_fu_598_p2.read();
        icmp_ln1496_9_reg_1171 = icmp_ln1496_9_fu_636_p2.read();
        icmp_ln1496_reg_1063 = icmp_ln1496_fu_504_p2.read();
        pool_window_0_V_2_reg_1075 = pool_window_0_V_2_fu_516_p3.read();
        pool_window_0_V_4_reg_1111 = pool_window_0_V_4_fu_560_p3.read();
        pool_window_0_V_6_reg_1147 = pool_window_0_V_6_fu_604_p3.read();
        pool_window_0_V_reg_1039 = pool_window_0_V_fu_472_p3.read();
        pool_window_1_V_2_reg_1081 = pool_window_1_V_2_fu_524_p3.read();
        pool_window_1_V_4_reg_1117 = pool_window_1_V_4_fu_568_p3.read();
        pool_window_1_V_6_reg_1153 = pool_window_1_V_6_fu_612_p3.read();
        pool_window_1_V_reg_1045 = pool_window_1_V_fu_480_p3.read();
        pool_window_2_V_2_reg_1087 = pool_window_2_V_2_fu_532_p3.read();
        pool_window_2_V_4_reg_1123 = pool_window_2_V_4_fu_576_p3.read();
        pool_window_2_V_6_reg_1159 = pool_window_2_V_6_fu_620_p3.read();
        pool_window_2_V_reg_1051 = pool_window_2_V_fu_488_p3.read();
        pool_window_3_V_2_reg_1093 = pool_window_3_V_2_fu_540_p3.read();
        pool_window_3_V_4_reg_1129 = pool_window_3_V_4_fu_584_p3.read();
        pool_window_3_V_6_reg_1165 = pool_window_3_V_6_fu_628_p3.read();
        pool_window_3_V_reg_1057 = pool_window_3_V_fu_496_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln212_reg_1183 = icmp_ln212_fu_648_p2.read();
        icmp_ln241_reg_1026 = icmp_ln241_fu_266_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        kernel_data_V_2_12 = data_V_data_0_V_dout.read();
        kernel_data_V_2_13 = data_V_data_1_V_dout.read();
        kernel_data_V_2_14 = data_V_data_2_V_dout.read();
        kernel_data_V_2_15 = data_V_data_3_V_dout.read();
        kernel_data_V_2_4 = line_buffer_Array_V_7_q0.read();
        kernel_data_V_2_5 = line_buffer_Array_V_6_q0.read();
        kernel_data_V_2_6 = line_buffer_Array_V_5_q0.read();
        kernel_data_V_2_7 = line_buffer_Array_V_4_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_reg_1183.read()))) {
        sY_1 = ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255.read();
    }
}

void pooling2d_cl_1::thread_add_ln220_fu_704_p2() {
    add_ln220_fu_704_p2 = (!pY_1.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(pY_1.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void pooling2d_cl_1::thread_add_ln222_fu_716_p2() {
    add_ln222_fu_716_p2 = (!ap_sig_allocacmp_sY_1_load.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_sig_allocacmp_sY_1_load.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void pooling2d_cl_1::thread_add_ln225_fu_654_p2() {
    add_ln225_fu_654_p2 = (!pX_1.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(pX_1.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void pooling2d_cl_1::thread_add_ln227_fu_666_p2() {
    add_ln227_fu_666_p2 = (!sX_1.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(sX_1.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void pooling2d_cl_1::thread_add_ln241_fu_272_p2() {
    add_ln241_fu_272_p2 = (!indvar_flatten_reg_244.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_flatten_reg_244.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void pooling2d_cl_1::thread_and_ln191_1_fu_460_p2() {
    and_ln191_1_fu_460_p2 = (icmp_ln191_2_fu_438_p2.read() & icmp_ln191_3_fu_448_p2.read());
}

void pooling2d_cl_1::thread_and_ln191_2_fu_466_p2() {
    and_ln191_2_fu_466_p2 = (and_ln191_1_fu_460_p2.read() & and_ln191_fu_454_p2.read());
}

void pooling2d_cl_1::thread_and_ln191_fu_454_p2() {
    and_ln191_fu_454_p2 = (icmp_ln191_fu_418_p2.read() & icmp_ln191_1_fu_428_p2.read());
}

void pooling2d_cl_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void pooling2d_cl_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pooling2d_cl_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void pooling2d_cl_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pooling2d_cl_1::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op152.read())));
}

void pooling2d_cl_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op152.read())));
}

void pooling2d_cl_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op152.read())));
}

void pooling2d_cl_1::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pooling2d_cl_1::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pooling2d_cl_1::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read()));
}

void pooling2d_cl_1::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op152.read()));
}

void pooling2d_cl_1::thread_ap_condition_242() {
    ap_condition_242 = (esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_fu_648_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln216_fu_698_p2.read()));
}

void pooling2d_cl_1::thread_ap_condition_267() {
    ap_condition_267 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void pooling2d_cl_1::thread_ap_condition_271() {
    ap_condition_271 = (esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_fu_648_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln216_fu_698_p2.read()));
}

void pooling2d_cl_1::thread_ap_condition_748() {
    ap_condition_748 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_fu_648_p2.read()));
}

void pooling2d_cl_1::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln241_fu_266_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void pooling2d_cl_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void pooling2d_cl_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_ap_phi_reg_pp0_iter0_storemerge_i_i_reg_255() {
    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_255 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void pooling2d_cl_1::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void pooling2d_cl_1::thread_ap_sig_allocacmp_sY_1_load() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln212_reg_1183.read()))) {
        ap_sig_allocacmp_sY_1_load = ap_phi_reg_pp0_iter2_storemerge_i_i_reg_255.read();
    } else {
        ap_sig_allocacmp_sY_1_load = sY_1.read();
    }
}

void pooling2d_cl_1::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_data_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0))) {
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n.read();
    } else {
        data_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_data_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_V_data_2_V_read = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_data_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0))) {
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n.read();
    } else {
        data_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_data_V_data_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_3_V_read = ap_const_logic_1;
    } else {
        data_V_data_3_V_read = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_icmp_ln1496_10_fu_642_p2() {
    icmp_ln1496_10_fu_642_p2 = (!pool_window_2_V_6_fu_620_p3.read().is_01() || !pool_window_3_V_6_fu_628_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_2_V_6_fu_620_p3.read()) < sc_biguint<16>(pool_window_3_V_6_fu_628_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_11_fu_978_p2() {
    icmp_ln1496_11_fu_978_p2 = (!select_ln65_14_fu_961_p3.read().is_01() || !select_ln65_16_fu_973_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(select_ln65_14_fu_961_p3.read()) < sc_biguint<16>(select_ln65_16_fu_973_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_1_fu_548_p2() {
    icmp_ln1496_1_fu_548_p2 = (!pool_window_0_V_2_fu_516_p3.read().is_01() || !pool_window_1_V_2_fu_524_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_0_V_2_fu_516_p3.read()) < sc_biguint<16>(pool_window_1_V_2_fu_524_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_2_fu_592_p2() {
    icmp_ln1496_2_fu_592_p2 = (!pool_window_0_V_4_fu_560_p3.read().is_01() || !pool_window_1_V_4_fu_568_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_0_V_4_fu_560_p3.read()) < sc_biguint<16>(pool_window_1_V_4_fu_568_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_3_fu_510_p2() {
    icmp_ln1496_3_fu_510_p2 = (!pool_window_2_V_fu_488_p3.read().is_01() || !pool_window_3_V_fu_496_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_2_V_fu_488_p3.read()) < sc_biguint<16>(pool_window_3_V_fu_496_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_4_fu_765_p2() {
    icmp_ln1496_4_fu_765_p2 = (!select_ln65_fu_748_p3.read().is_01() || !select_ln65_4_fu_760_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(select_ln65_fu_748_p3.read()) < sc_biguint<16>(select_ln65_4_fu_760_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_5_fu_554_p2() {
    icmp_ln1496_5_fu_554_p2 = (!pool_window_2_V_2_fu_532_p3.read().is_01() || !pool_window_3_V_2_fu_540_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_2_V_2_fu_532_p3.read()) < sc_biguint<16>(pool_window_3_V_2_fu_540_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_6_fu_836_p2() {
    icmp_ln1496_6_fu_836_p2 = (!select_ln65_6_fu_819_p3.read().is_01() || !select_ln65_8_fu_831_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(select_ln65_6_fu_819_p3.read()) < sc_biguint<16>(select_ln65_8_fu_831_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_7_fu_598_p2() {
    icmp_ln1496_7_fu_598_p2 = (!pool_window_2_V_4_fu_576_p3.read().is_01() || !pool_window_3_V_4_fu_584_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_2_V_4_fu_576_p3.read()) < sc_biguint<16>(pool_window_3_V_4_fu_584_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_8_fu_907_p2() {
    icmp_ln1496_8_fu_907_p2 = (!select_ln65_10_fu_890_p3.read().is_01() || !select_ln65_12_fu_902_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(select_ln65_10_fu_890_p3.read()) < sc_biguint<16>(select_ln65_12_fu_902_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_9_fu_636_p2() {
    icmp_ln1496_9_fu_636_p2 = (!pool_window_0_V_6_fu_604_p3.read().is_01() || !pool_window_1_V_6_fu_612_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_0_V_6_fu_604_p3.read()) < sc_biguint<16>(pool_window_1_V_6_fu_612_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln1496_fu_504_p2() {
    icmp_ln1496_fu_504_p2 = (!pool_window_0_V_fu_472_p3.read().is_01() || !pool_window_1_V_fu_480_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(pool_window_0_V_fu_472_p3.read()) < sc_biguint<16>(pool_window_1_V_fu_480_p3.read()));
}

void pooling2d_cl_1::thread_icmp_ln191_1_fu_428_p2() {
    icmp_ln191_1_fu_428_p2 = (!ap_sig_allocacmp_sY_1_load.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(ap_sig_allocacmp_sY_1_load.read() == ap_const_lv32_1);
}

void pooling2d_cl_1::thread_icmp_ln191_2_fu_438_p2() {
    icmp_ln191_2_fu_438_p2 = (!pY_1.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(pY_1.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void pooling2d_cl_1::thread_icmp_ln191_3_fu_448_p2() {
    icmp_ln191_3_fu_448_p2 = (!pX_1.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(pX_1.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void pooling2d_cl_1::thread_icmp_ln191_fu_418_p2() {
    icmp_ln191_fu_418_p2 = (!sX_1.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(sX_1.read() == ap_const_lv32_1);
}

void pooling2d_cl_1::thread_icmp_ln212_fu_648_p2() {
    icmp_ln212_fu_648_p2 = (!pX_1.read().is_01() || !ap_const_lv32_3D.is_01())? sc_lv<1>(): sc_lv<1>(pX_1.read() == ap_const_lv32_3D);
}

void pooling2d_cl_1::thread_icmp_ln216_fu_698_p2() {
    icmp_ln216_fu_698_p2 = (!pY_1.read().is_01() || !ap_const_lv32_3D.is_01())? sc_lv<1>(): sc_lv<1>(pY_1.read() == ap_const_lv32_3D);
}

void pooling2d_cl_1::thread_icmp_ln241_fu_266_p2() {
    icmp_ln241_fu_266_p2 = (!indvar_flatten_reg_244.read().is_01() || !ap_const_lv12_F04.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_244.read() == ap_const_lv12_F04);
}

void pooling2d_cl_1::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_io_acc_block_signal_op152() {
    io_acc_block_signal_op152 = (res_V_data_0_V_full_n.read() & res_V_data_1_V_full_n.read() & res_V_data_2_V_full_n.read() & res_V_data_3_V_full_n.read());
}

void pooling2d_cl_1::thread_io_acc_block_signal_op19() {
    io_acc_block_signal_op19 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read() & data_V_data_2_V_empty_n.read() & data_V_data_3_V_empty_n.read());
}

void pooling2d_cl_1::thread_line_buffer_Array_V_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_4_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_4_ce0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_4_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_4_we0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_5_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_5_ce0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_5_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_5_we0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_6_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_6_ce0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_6_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_6_we0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_7_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_7_ce0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_line_buffer_Array_V_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln241_reg_1026.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_Array_V_7_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        line_buffer_Array_V_7_we0 = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_pool_window_0_V_2_fu_516_p3() {
    pool_window_0_V_2_fu_516_p3 = esl_concat<6,10>(kernel_data_V_2_5.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_0_V_4_fu_560_p3() {
    pool_window_0_V_4_fu_560_p3 = esl_concat<6,10>(kernel_data_V_2_6.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_0_V_6_fu_604_p3() {
    pool_window_0_V_6_fu_604_p3 = esl_concat<6,10>(kernel_data_V_2_7.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_0_V_fu_472_p3() {
    pool_window_0_V_fu_472_p3 = esl_concat<6,10>(kernel_data_V_2_4.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_1_V_2_fu_524_p3() {
    pool_window_1_V_2_fu_524_p3 = esl_concat<6,10>(line_buffer_Array_V_6_q0.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_1_V_4_fu_568_p3() {
    pool_window_1_V_4_fu_568_p3 = esl_concat<6,10>(line_buffer_Array_V_5_q0.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_1_V_6_fu_612_p3() {
    pool_window_1_V_6_fu_612_p3 = esl_concat<6,10>(line_buffer_Array_V_4_q0.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_1_V_fu_480_p3() {
    pool_window_1_V_fu_480_p3 = esl_concat<6,10>(line_buffer_Array_V_7_q0.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_2_V_2_fu_532_p3() {
    pool_window_2_V_2_fu_532_p3 = esl_concat<6,10>(kernel_data_V_2_13.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_2_V_4_fu_576_p3() {
    pool_window_2_V_4_fu_576_p3 = esl_concat<6,10>(kernel_data_V_2_14.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_2_V_6_fu_620_p3() {
    pool_window_2_V_6_fu_620_p3 = esl_concat<6,10>(kernel_data_V_2_15.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_2_V_fu_488_p3() {
    pool_window_2_V_fu_488_p3 = esl_concat<6,10>(kernel_data_V_2_12.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_3_V_2_fu_540_p3() {
    pool_window_3_V_2_fu_540_p3 = esl_concat<6,10>(data_V_data_1_V_dout.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_3_V_4_fu_584_p3() {
    pool_window_3_V_4_fu_584_p3 = esl_concat<6,10>(data_V_data_2_V_dout.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_3_V_6_fu_628_p3() {
    pool_window_3_V_6_fu_628_p3 = esl_concat<6,10>(data_V_data_3_V_dout.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_pool_window_3_V_fu_496_p3() {
    pool_window_3_V_fu_496_p3 = esl_concat<6,10>(data_V_data_0_V_dout.read(), ap_const_lv10_0);
}

void pooling2d_cl_1::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void pooling2d_cl_1::thread_res_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1))) {
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n.read();
    } else {
        res_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_res_V_data_0_V_din() {
    res_V_data_0_V_din = tmp_7_fu_782_p6.read().range(21, 6);
}

void pooling2d_cl_1::thread_res_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_V_data_0_V_write = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_res_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1))) {
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n.read();
    } else {
        res_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_res_V_data_1_V_din() {
    res_V_data_1_V_din = tmp_8_fu_853_p6.read().range(21, 6);
}

void pooling2d_cl_1::thread_res_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_V_data_1_V_write = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_res_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1))) {
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n.read();
    } else {
        res_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_res_V_data_2_V_din() {
    res_V_data_2_V_din = tmp_9_fu_924_p6.read().range(21, 6);
}

void pooling2d_cl_1::thread_res_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_V_data_2_V_write = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_res_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1))) {
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n.read();
    } else {
        res_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void pooling2d_cl_1::thread_res_V_data_3_V_din() {
    res_V_data_3_V_din = tmp_1_fu_995_p6.read().range(21, 6);
}

void pooling2d_cl_1::thread_res_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(and_ln191_2_reg_1035.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_V_data_3_V_write = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_select_ln222_fu_722_p3() {
    select_ln222_fu_722_p3 = (!icmp_ln191_1_fu_428_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln191_1_fu_428_p2.read()[0].to_bool())? ap_const_lv32_0: add_ln222_fu_716_p2.read());
}

void pooling2d_cl_1::thread_select_ln227_fu_672_p3() {
    select_ln227_fu_672_p3 = (!icmp_ln191_fu_418_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln191_fu_418_p2.read()[0].to_bool())? ap_const_lv32_0: add_ln227_fu_666_p2.read());
}

void pooling2d_cl_1::thread_select_ln65_10_fu_890_p3() {
    select_ln65_10_fu_890_p3 = (!icmp_ln1496_2_reg_1135.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_2_reg_1135.read()[0].to_bool())? pool_window_1_V_4_reg_1117.read(): pool_window_0_V_4_reg_1111.read());
}

void pooling2d_cl_1::thread_select_ln65_11_fu_895_p3() {
    select_ln65_11_fu_895_p3 = (!icmp_ln1496_7_reg_1141.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_7_reg_1141.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_2);
}

void pooling2d_cl_1::thread_select_ln65_12_fu_902_p3() {
    select_ln65_12_fu_902_p3 = (!icmp_ln1496_7_reg_1141.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_7_reg_1141.read()[0].to_bool())? pool_window_3_V_4_reg_1129.read(): pool_window_2_V_4_reg_1123.read());
}

void pooling2d_cl_1::thread_select_ln65_14_fu_961_p3() {
    select_ln65_14_fu_961_p3 = (!icmp_ln1496_9_reg_1171.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_9_reg_1171.read()[0].to_bool())? pool_window_1_V_6_reg_1153.read(): pool_window_0_V_6_reg_1147.read());
}

void pooling2d_cl_1::thread_select_ln65_15_fu_966_p3() {
    select_ln65_15_fu_966_p3 = (!icmp_ln1496_10_reg_1177.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_10_reg_1177.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_2);
}

void pooling2d_cl_1::thread_select_ln65_16_fu_973_p3() {
    select_ln65_16_fu_973_p3 = (!icmp_ln1496_10_reg_1177.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_10_reg_1177.read()[0].to_bool())? pool_window_3_V_6_reg_1165.read(): pool_window_2_V_6_reg_1159.read());
}

void pooling2d_cl_1::thread_select_ln65_3_fu_753_p3() {
    select_ln65_3_fu_753_p3 = (!icmp_ln1496_3_reg_1069.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_3_reg_1069.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_2);
}

void pooling2d_cl_1::thread_select_ln65_4_fu_760_p3() {
    select_ln65_4_fu_760_p3 = (!icmp_ln1496_3_reg_1069.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_3_reg_1069.read()[0].to_bool())? pool_window_3_V_reg_1057.read(): pool_window_2_V_reg_1051.read());
}

void pooling2d_cl_1::thread_select_ln65_6_fu_819_p3() {
    select_ln65_6_fu_819_p3 = (!icmp_ln1496_1_reg_1099.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_1_reg_1099.read()[0].to_bool())? pool_window_1_V_2_reg_1081.read(): pool_window_0_V_2_reg_1075.read());
}

void pooling2d_cl_1::thread_select_ln65_7_fu_824_p3() {
    select_ln65_7_fu_824_p3 = (!icmp_ln1496_5_reg_1105.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_5_reg_1105.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_2);
}

void pooling2d_cl_1::thread_select_ln65_8_fu_831_p3() {
    select_ln65_8_fu_831_p3 = (!icmp_ln1496_5_reg_1105.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_5_reg_1105.read()[0].to_bool())? pool_window_3_V_2_reg_1093.read(): pool_window_2_V_2_reg_1087.read());
}

void pooling2d_cl_1::thread_select_ln65_fu_748_p3() {
    select_ln65_fu_748_p3 = (!icmp_ln1496_reg_1063.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1496_reg_1063.read()[0].to_bool())? pool_window_1_V_reg_1045.read(): pool_window_0_V_reg_1039.read());
}

void pooling2d_cl_1::thread_start_out() {
    start_out = real_start.read();
}

void pooling2d_cl_1::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void pooling2d_cl_1::thread_tmp_1_fu_995_p1() {
    tmp_1_fu_995_p1 = esl_zext<32,16>(pool_window_0_V_6_reg_1147.read());
}

void pooling2d_cl_1::thread_tmp_1_fu_995_p2() {
    tmp_1_fu_995_p2 = esl_zext<32,16>(pool_window_1_V_6_reg_1153.read());
}

void pooling2d_cl_1::thread_tmp_1_fu_995_p3() {
    tmp_1_fu_995_p3 = esl_zext<32,16>(pool_window_2_V_6_reg_1159.read());
}

void pooling2d_cl_1::thread_tmp_1_fu_995_p4() {
    tmp_1_fu_995_p4 = esl_zext<32,16>(pool_window_3_V_6_reg_1165.read());
}

void pooling2d_cl_1::thread_tmp_1_fu_995_p5() {
    tmp_1_fu_995_p5 = (!icmp_ln1496_11_fu_978_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_11_fu_978_p2.read()[0].to_bool())? select_ln65_15_fu_966_p3.read(): zext_ln65_3_fu_984_p1.read());
}

void pooling2d_cl_1::thread_tmp_7_fu_782_p1() {
    tmp_7_fu_782_p1 = esl_zext<32,16>(pool_window_0_V_reg_1039.read());
}

void pooling2d_cl_1::thread_tmp_7_fu_782_p2() {
    tmp_7_fu_782_p2 = esl_zext<32,16>(pool_window_1_V_reg_1045.read());
}

void pooling2d_cl_1::thread_tmp_7_fu_782_p3() {
    tmp_7_fu_782_p3 = esl_zext<32,16>(pool_window_2_V_reg_1051.read());
}

void pooling2d_cl_1::thread_tmp_7_fu_782_p4() {
    tmp_7_fu_782_p4 = esl_zext<32,16>(pool_window_3_V_reg_1057.read());
}

void pooling2d_cl_1::thread_tmp_7_fu_782_p5() {
    tmp_7_fu_782_p5 = (!icmp_ln1496_4_fu_765_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_4_fu_765_p2.read()[0].to_bool())? select_ln65_3_fu_753_p3.read(): zext_ln65_fu_771_p1.read());
}

void pooling2d_cl_1::thread_tmp_8_fu_853_p1() {
    tmp_8_fu_853_p1 = esl_zext<32,16>(pool_window_0_V_2_reg_1075.read());
}

void pooling2d_cl_1::thread_tmp_8_fu_853_p2() {
    tmp_8_fu_853_p2 = esl_zext<32,16>(pool_window_1_V_2_reg_1081.read());
}

void pooling2d_cl_1::thread_tmp_8_fu_853_p3() {
    tmp_8_fu_853_p3 = esl_zext<32,16>(pool_window_2_V_2_reg_1087.read());
}

void pooling2d_cl_1::thread_tmp_8_fu_853_p4() {
    tmp_8_fu_853_p4 = esl_zext<32,16>(pool_window_3_V_2_reg_1093.read());
}

void pooling2d_cl_1::thread_tmp_8_fu_853_p5() {
    tmp_8_fu_853_p5 = (!icmp_ln1496_6_fu_836_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_6_fu_836_p2.read()[0].to_bool())? select_ln65_7_fu_824_p3.read(): zext_ln65_1_fu_842_p1.read());
}

void pooling2d_cl_1::thread_tmp_9_fu_924_p1() {
    tmp_9_fu_924_p1 = esl_zext<32,16>(pool_window_0_V_4_reg_1111.read());
}

void pooling2d_cl_1::thread_tmp_9_fu_924_p2() {
    tmp_9_fu_924_p2 = esl_zext<32,16>(pool_window_1_V_4_reg_1117.read());
}

void pooling2d_cl_1::thread_tmp_9_fu_924_p3() {
    tmp_9_fu_924_p3 = esl_zext<32,16>(pool_window_2_V_4_reg_1123.read());
}

void pooling2d_cl_1::thread_tmp_9_fu_924_p4() {
    tmp_9_fu_924_p4 = esl_zext<32,16>(pool_window_3_V_4_reg_1129.read());
}

void pooling2d_cl_1::thread_tmp_9_fu_924_p5() {
    tmp_9_fu_924_p5 = (!icmp_ln1496_8_fu_907_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln1496_8_fu_907_p2.read()[0].to_bool())? select_ln65_11_fu_895_p3.read(): zext_ln65_2_fu_913_p1.read());
}

void pooling2d_cl_1::thread_zext_ln65_1_fu_842_p1() {
    zext_ln65_1_fu_842_p1 = esl_zext<2,1>(icmp_ln1496_1_reg_1099.read());
}

void pooling2d_cl_1::thread_zext_ln65_2_fu_913_p1() {
    zext_ln65_2_fu_913_p1 = esl_zext<2,1>(icmp_ln1496_2_reg_1135.read());
}

void pooling2d_cl_1::thread_zext_ln65_3_fu_984_p1() {
    zext_ln65_3_fu_984_p1 = esl_zext<2,1>(icmp_ln1496_9_reg_1171.read());
}

void pooling2d_cl_1::thread_zext_ln65_fu_771_p1() {
    zext_ln65_fu_771_p1 = esl_zext<2,1>(icmp_ln1496_reg_1063.read());
}

void pooling2d_cl_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln241_fu_266_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln241_fu_266_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

