// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s_HH_
#define _softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s_exp_table1.h"
#include "softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s_invert_txdS.h"

namespace ap_rtl {

struct softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<16> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_out< sc_lv<16> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<16> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<16> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<16> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_out< sc_logic > data_V_data_0_V_blk_n;
    sc_out< sc_logic > data_V_data_1_V_blk_n;
    sc_out< sc_logic > data_V_data_2_V_blk_n;
    sc_out< sc_logic > data_V_data_3_V_blk_n;
    sc_out< sc_logic > res_V_data_0_V_blk_n;
    sc_out< sc_logic > res_V_data_1_V_blk_n;
    sc_out< sc_logic > res_V_data_2_V_blk_n;
    sc_out< sc_logic > res_V_data_3_V_blk_n;


    // Module declarations
    softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s);

    ~softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s();

    sc_trace_file* mVcdFile;

    softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s_exp_table1* exp_table1_U;
    softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config12_s_invert_txdS* invert_table2_U;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state4_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<10> > exp_table1_address0;
    sc_signal< sc_logic > exp_table1_ce0;
    sc_signal< sc_lv<17> > exp_table1_q0;
    sc_signal< sc_lv<10> > invert_table2_address0;
    sc_signal< sc_logic > invert_table2_ce0;
    sc_signal< sc_lv<18> > invert_table2_q0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<16> > tmp_data_0_V_1_reg_910;
    sc_signal< sc_logic > io_acc_block_signal_op12;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > tmp_data_1_V_1_reg_915;
    sc_signal< sc_lv<16> > tmp_data_2_V_1_reg_920;
    sc_signal< sc_lv<16> > tmp_data_3_V_1_reg_925;
    sc_signal< sc_lv<16> > select_ln65_fu_319_p3;
    sc_signal< sc_lv<16> > select_ln65_reg_930;
    sc_signal< sc_lv<16> > select_ln65_1_fu_333_p3;
    sc_signal< sc_lv<16> > select_ln65_1_reg_936;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<10> > y_V_1_fu_640_p3;
    sc_signal< sc_lv<10> > y_V_1_reg_947;
    sc_signal< sc_lv<10> > y_V_2_fu_674_p3;
    sc_signal< sc_lv<10> > y_V_2_reg_952;
    sc_signal< sc_lv<10> > y_V_3_fu_708_p3;
    sc_signal< sc_lv<10> > y_V_3_reg_957;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_962;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op157;
    sc_signal< bool > ap_block_state11_pp0_stage2_iter2;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_962_pp0_iter1_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_973;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_973_pp0_iter1_reg;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_984;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_984_pp0_iter2_reg;
    sc_signal< sc_lv<17> > exp_res_3_V_reg_995;
    sc_signal< sc_lv<17> > exp_res_3_V_reg_995_pp0_iter2_reg;
    sc_signal< sc_lv<26> > sext_ln241_fu_889_p1;
    sc_signal< sc_lv<26> > sext_ln241_reg_1006;
    sc_signal< sc_lv<16> > tmp_data_0_V_reg_1011;
    sc_signal< sc_lv<16> > tmp_data_1_V_reg_1016;
    sc_signal< sc_lv<16> > tmp_data_2_V_reg_1021;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<64> > zext_ln225_fu_609_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln225_1_fu_716_p1;
    sc_signal< sc_lv<64> > zext_ln225_2_fu_720_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln225_3_fu_724_p1;
    sc_signal< sc_lv<64> > zext_ln235_fu_884_p1;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< sc_lv<18> > grp_fu_266_p0;
    sc_signal< sc_lv<17> > grp_fu_266_p1;
    sc_signal< sc_lv<26> > zext_ln1118_fu_894_p1;
    sc_signal< sc_lv<26> > zext_ln1118_1_fu_898_p1;
    sc_signal< sc_lv<26> > zext_ln1118_2_fu_902_p1;
    sc_signal< sc_lv<26> > zext_ln1118_3_fu_906_p1;
    sc_signal< sc_lv<26> > grp_fu_266_p2;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_313_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_313_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_313_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_319_p1;
    sc_signal< sc_lv<16> > select_ln65_fu_319_p2;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_327_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_327_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_327_p2;
    sc_signal< sc_lv<16> > select_ln65_1_fu_333_p1;
    sc_signal< sc_lv<16> > select_ln65_1_fu_333_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_2_fu_341_p2;
    sc_signal< sc_lv<16> > x_max_V_fu_345_p3;
    sc_signal< sc_lv<17> > sext_ln703_fu_351_p1;
    sc_signal< sc_lv<17> > sext_ln703_1_fu_354_p1;
    sc_signal< sc_lv<17> > sub_ln1193_fu_358_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_372_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_364_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_380_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_398_p2;
    sc_signal< sc_lv<17> > sext_ln703_2_fu_410_p1;
    sc_signal< sc_lv<17> > sub_ln1193_1_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_427_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_419_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_435_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_453_p2;
    sc_signal< sc_lv<17> > sext_ln703_3_fu_465_p1;
    sc_signal< sc_lv<17> > sub_ln1193_2_fu_468_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_482_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_474_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_490_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_508_p2;
    sc_signal< sc_lv<17> > sext_ln703_4_fu_520_p1;
    sc_signal< sc_lv<17> > sub_ln1193_3_fu_523_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_537_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_529_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_545_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_563_p2;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_392_p2;
    sc_signal< sc_lv<10> > tmp_fu_575_p4;
    sc_signal< sc_lv<1> > and_ln786_fu_386_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_404_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_585_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_593_p3;
    sc_signal< sc_lv<10> > y_V_fu_601_p3;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_447_p2;
    sc_signal< sc_lv<10> > tmp_7_fu_614_p4;
    sc_signal< sc_lv<1> > and_ln786_1_fu_441_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_459_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_624_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_632_p3;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_502_p2;
    sc_signal< sc_lv<10> > tmp_9_fu_648_p4;
    sc_signal< sc_lv<1> > and_ln786_2_fu_496_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_514_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_658_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_666_p3;
    sc_signal< sc_lv<1> > xor_ln340_8_fu_557_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_682_p4;
    sc_signal< sc_lv<1> > and_ln786_3_fu_551_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_569_p2;
    sc_signal< sc_lv<10> > select_ln340_6_fu_692_p3;
    sc_signal< sc_lv<10> > select_ln388_3_fu_700_p3;
    sc_signal< sc_lv<18> > p_Val2_5_fu_728_p1;
    sc_signal< sc_lv<18> > p_Val2_6_fu_731_p1;
    sc_signal< sc_lv<18> > p_Val2_7_fu_734_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_740_p3;
    sc_signal< sc_lv<18> > p_Val2_8_fu_756_p1;
    sc_signal< sc_lv<18> > p_Val2_9_fu_759_p1;
    sc_signal< sc_lv<18> > p_Val2_10_fu_762_p2;
    sc_signal< sc_lv<1> > p_Result_10_fu_768_p3;
    sc_signal< sc_lv<18> > p_Val2_11_fu_748_p3;
    sc_signal< sc_lv<18> > p_Val2_12_fu_776_p3;
    sc_signal< sc_lv<19> > lhs_V_fu_784_p1;
    sc_signal< sc_lv<19> > rhs_V_fu_788_p1;
    sc_signal< sc_lv<19> > ret_V_fu_792_p2;
    sc_signal< sc_lv<18> > p_Val2_14_fu_806_p2;
    sc_signal< sc_lv<1> > p_Result_12_fu_812_p3;
    sc_signal< sc_lv<1> > p_Result_11_fu_798_p3;
    sc_signal< sc_lv<1> > xor_ln786_4_fu_820_p2;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_838_p2;
    sc_signal< sc_lv<1> > xor_ln340_9_fu_832_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_850_p4;
    sc_signal< sc_lv<1> > underflow_fu_826_p2;
    sc_signal< sc_lv<1> > or_ln340_4_fu_844_p2;
    sc_signal< sc_lv<10> > select_ln340_10_fu_860_p3;
    sc_signal< sc_lv<10> > select_ln388_4_fu_868_p3;
    sc_signal< sc_lv<10> > y_V_4_fu_876_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_idle_pp0_1to2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage3;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<18> ap_const_lv18_1FFFF;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln786_1_fu_441_p2();
    void thread_and_ln786_2_fu_496_p2();
    void thread_and_ln786_3_fu_551_p2();
    void thread_and_ln786_fu_386_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state10_pp0_stage1_iter2();
    void thread_ap_block_state11_pp0_stage2_iter2();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage3_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state8_pp0_stage3_iter1();
    void thread_ap_block_state9_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_idle_pp0_1to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_exp_table1_address0();
    void thread_exp_table1_ce0();
    void thread_grp_fu_266_p0();
    void thread_grp_fu_266_p1();
    void thread_grp_fu_266_p2();
    void thread_icmp_ln1496_1_fu_327_p0();
    void thread_icmp_ln1496_1_fu_327_p1();
    void thread_icmp_ln1496_1_fu_327_p2();
    void thread_icmp_ln1496_2_fu_341_p2();
    void thread_icmp_ln1496_fu_313_p0();
    void thread_icmp_ln1496_fu_313_p1();
    void thread_icmp_ln1496_fu_313_p2();
    void thread_invert_table2_address0();
    void thread_invert_table2_ce0();
    void thread_io_acc_block_signal_op12();
    void thread_io_acc_block_signal_op157();
    void thread_lhs_V_fu_784_p1();
    void thread_or_ln340_1_fu_459_p2();
    void thread_or_ln340_2_fu_514_p2();
    void thread_or_ln340_3_fu_569_p2();
    void thread_or_ln340_4_fu_844_p2();
    void thread_or_ln340_fu_404_p2();
    void thread_p_Result_10_fu_768_p3();
    void thread_p_Result_11_fu_798_p3();
    void thread_p_Result_12_fu_812_p3();
    void thread_p_Result_s_fu_740_p3();
    void thread_p_Val2_10_fu_762_p2();
    void thread_p_Val2_11_fu_748_p3();
    void thread_p_Val2_12_fu_776_p3();
    void thread_p_Val2_14_fu_806_p2();
    void thread_p_Val2_5_fu_728_p1();
    void thread_p_Val2_6_fu_731_p1();
    void thread_p_Val2_7_fu_734_p2();
    void thread_p_Val2_8_fu_756_p1();
    void thread_p_Val2_9_fu_759_p1();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_ret_V_fu_792_p2();
    void thread_rhs_V_fu_788_p1();
    void thread_select_ln340_10_fu_860_p3();
    void thread_select_ln340_2_fu_624_p3();
    void thread_select_ln340_4_fu_658_p3();
    void thread_select_ln340_6_fu_692_p3();
    void thread_select_ln340_fu_585_p3();
    void thread_select_ln388_1_fu_632_p3();
    void thread_select_ln388_2_fu_666_p3();
    void thread_select_ln388_3_fu_700_p3();
    void thread_select_ln388_4_fu_868_p3();
    void thread_select_ln388_fu_593_p3();
    void thread_select_ln65_1_fu_333_p1();
    void thread_select_ln65_1_fu_333_p2();
    void thread_select_ln65_1_fu_333_p3();
    void thread_select_ln65_fu_319_p1();
    void thread_select_ln65_fu_319_p2();
    void thread_select_ln65_fu_319_p3();
    void thread_sext_ln241_fu_889_p1();
    void thread_sext_ln703_1_fu_354_p1();
    void thread_sext_ln703_2_fu_410_p1();
    void thread_sext_ln703_3_fu_465_p1();
    void thread_sext_ln703_4_fu_520_p1();
    void thread_sext_ln703_fu_351_p1();
    void thread_sub_ln1193_1_fu_413_p2();
    void thread_sub_ln1193_2_fu_468_p2();
    void thread_sub_ln1193_3_fu_523_p2();
    void thread_sub_ln1193_fu_358_p2();
    void thread_tmp_10_fu_372_p3();
    void thread_tmp_11_fu_419_p3();
    void thread_tmp_12_fu_427_p3();
    void thread_tmp_13_fu_474_p3();
    void thread_tmp_14_fu_482_p3();
    void thread_tmp_15_fu_529_p3();
    void thread_tmp_16_fu_537_p3();
    void thread_tmp_6_fu_850_p4();
    void thread_tmp_7_fu_614_p4();
    void thread_tmp_8_fu_364_p3();
    void thread_tmp_9_fu_648_p4();
    void thread_tmp_fu_575_p4();
    void thread_tmp_s_fu_682_p4();
    void thread_underflow_fu_826_p2();
    void thread_x_max_V_fu_345_p3();
    void thread_xor_ln340_1_fu_453_p2();
    void thread_xor_ln340_2_fu_508_p2();
    void thread_xor_ln340_3_fu_563_p2();
    void thread_xor_ln340_4_fu_838_p2();
    void thread_xor_ln340_5_fu_392_p2();
    void thread_xor_ln340_6_fu_447_p2();
    void thread_xor_ln340_7_fu_502_p2();
    void thread_xor_ln340_8_fu_557_p2();
    void thread_xor_ln340_9_fu_832_p2();
    void thread_xor_ln340_fu_398_p2();
    void thread_xor_ln786_1_fu_435_p2();
    void thread_xor_ln786_2_fu_490_p2();
    void thread_xor_ln786_3_fu_545_p2();
    void thread_xor_ln786_4_fu_820_p2();
    void thread_xor_ln786_fu_380_p2();
    void thread_y_V_1_fu_640_p3();
    void thread_y_V_2_fu_674_p3();
    void thread_y_V_3_fu_708_p3();
    void thread_y_V_4_fu_876_p3();
    void thread_y_V_fu_601_p3();
    void thread_zext_ln1118_1_fu_898_p1();
    void thread_zext_ln1118_2_fu_902_p1();
    void thread_zext_ln1118_3_fu_906_p1();
    void thread_zext_ln1118_fu_894_p1();
    void thread_zext_ln225_1_fu_716_p1();
    void thread_zext_ln225_2_fu_720_p1();
    void thread_zext_ln225_3_fu_724_p1();
    void thread_zext_ln225_fu_609_p1();
    void thread_zext_ln235_fu_884_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
