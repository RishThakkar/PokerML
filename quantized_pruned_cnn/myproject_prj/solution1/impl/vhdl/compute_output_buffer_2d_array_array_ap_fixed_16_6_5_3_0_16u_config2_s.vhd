-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_16u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC;
    res_stream_V_data_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_8_V_full_n : IN STD_LOGIC;
    res_stream_V_data_8_V_write : OUT STD_LOGIC;
    res_stream_V_data_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_9_V_full_n : IN STD_LOGIC;
    res_stream_V_data_9_V_write : OUT STD_LOGIC;
    res_stream_V_data_10_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_10_V_full_n : IN STD_LOGIC;
    res_stream_V_data_10_V_write : OUT STD_LOGIC;
    res_stream_V_data_11_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_11_V_full_n : IN STD_LOGIC;
    res_stream_V_data_11_V_write : OUT STD_LOGIC;
    res_stream_V_data_12_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_12_V_full_n : IN STD_LOGIC;
    res_stream_V_data_12_V_write : OUT STD_LOGIC;
    res_stream_V_data_13_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_13_V_full_n : IN STD_LOGIC;
    res_stream_V_data_13_V_write : OUT STD_LOGIC;
    res_stream_V_data_14_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_14_V_full_n : IN STD_LOGIC;
    res_stream_V_data_14_V_write : OUT STD_LOGIC;
    res_stream_V_data_15_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_15_V_full_n : IN STD_LOGIC;
    res_stream_V_data_15_V_write : OUT STD_LOGIC;
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_4_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_5_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_6_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_7_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_8_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_10_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_11_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_12_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_13_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_14_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_15_V_blk_n : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_16u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_2_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal and_ln289_2_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_data_V_2_20_ret_reg_815 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_19_ret_reg_820 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_18_ret_reg_825 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_11_ret_reg_830 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_10_ret_reg_835 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_9_ret_reg_840 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_2_ret_reg_845 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_1_ret_reg_850 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_0_ret_reg_855 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_3_ret_reg_860 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_4_ret_reg_865 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_5_ret_reg_870 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_6_ret_reg_875 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_7_ret_reg_880 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_8_ret_reg_885 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_12_ret_reg_890 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_13_ret_reg_895 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_14_ret_reg_900 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_15_ret_reg_905 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_16_ret_reg_910 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_17_ret_reg_915 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_21_ret_reg_920 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_22_ret_reg_925 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_23_ret_reg_930 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_24_ret_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_25_ret_reg_940 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_26_ret_reg_945 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln289_2_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln328_fu_682_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln328_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln317_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln323_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_reg_972 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_data_1_V_reg_977 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_982 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_987 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_992 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_997 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_1002 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_1007 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_8_V_reg_1012 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_9_V_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_10_V_reg_1022 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_11_V_reg_1027 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_12_V_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_13_V_reg_1037 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_14_V_reg_1042 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_15_V_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start : STD_LOGIC;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_done : STD_LOGIC;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_idle : STD_LOGIC;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ready : STD_LOGIC;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_start : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_done : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_idle : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ready : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ce : STD_LOGIC;
    signal storemerge_reg_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal add_ln321_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal io_acc_block_signal_op158 : STD_LOGIC;
    signal ap_block_state13 : BOOLEAN;
    signal tmp_fu_604_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_748_fu_624_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_7_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_8_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_156 : BOOLEAN;
    signal ap_condition_1649 : BOOLEAN;
    signal ap_condition_1653 : BOOLEAN;
    signal ap_condition_1648 : BOOLEAN;
    signal ap_condition_1659 : BOOLEAN;

    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start,
        ap_done => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_done,
        ap_idle => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_idle,
        ap_ready => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ready,
        data_0_V_read => kernel_data_V_2_0_ret_reg_855,
        data_1_V_read => kernel_data_V_2_1_ret_reg_850,
        data_2_V_read => kernel_data_V_2_2_ret_reg_845,
        data_3_V_read => kernel_data_V_2_3_ret_reg_860,
        data_4_V_read => kernel_data_V_2_4_ret_reg_865,
        data_5_V_read => kernel_data_V_2_5_ret_reg_870,
        data_6_V_read => kernel_data_V_2_6_ret_reg_875,
        data_7_V_read => kernel_data_V_2_7_ret_reg_880,
        data_8_V_read => kernel_data_V_2_8_ret_reg_885,
        data_9_V_read => kernel_data_V_2_9_ret_reg_840,
        data_10_V_read => kernel_data_V_2_10_ret_reg_835,
        data_11_V_read => kernel_data_V_2_11_ret_reg_830,
        data_12_V_read => kernel_data_V_2_12_ret_reg_890,
        data_13_V_read => kernel_data_V_2_13_ret_reg_895,
        data_14_V_read => kernel_data_V_2_14_ret_reg_900,
        data_15_V_read => kernel_data_V_2_15_ret_reg_905,
        data_16_V_read => kernel_data_V_2_16_ret_reg_910,
        data_17_V_read => kernel_data_V_2_17_ret_reg_915,
        data_18_V_read => kernel_data_V_2_18_ret_reg_825,
        data_19_V_read => kernel_data_V_2_19_ret_reg_820,
        data_20_V_read => kernel_data_V_2_20_ret_reg_815,
        data_21_V_read => kernel_data_V_2_21_ret_reg_920,
        data_22_V_read => kernel_data_V_2_22_ret_reg_925,
        data_23_V_read => kernel_data_V_2_23_ret_reg_930,
        data_24_V_read => kernel_data_V_2_24_ret_reg_935,
        data_25_V_read => kernel_data_V_2_25_ret_reg_940,
        data_26_V_read => kernel_data_V_2_26_ret_reg_945,
        ap_return_0 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_14,
        ap_return_15 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_15,
        ap_ce => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ce);

    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_start,
        ap_done => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_done,
        ap_idle => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_idle,
        ap_ready => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ready,
        in_elem_data_0_V_read => in_elem_data_0_V_read,
        in_elem_data_1_V_read => in_elem_data_1_V_read,
        in_elem_data_2_V_read => in_elem_data_2_V_read,
        kernel_window_3_V_read => kernel_data_V_2_3,
        kernel_window_4_V_read => kernel_data_V_2_4,
        kernel_window_5_V_read => kernel_data_V_2_5,
        kernel_window_6_V_read => kernel_data_V_2_6,
        kernel_window_7_V_read => kernel_data_V_2_7,
        kernel_window_8_V_read => kernel_data_V_2_8,
        kernel_window_12_V_read => kernel_data_V_2_12,
        kernel_window_13_V_read => kernel_data_V_2_13,
        kernel_window_14_V_read => kernel_data_V_2_14,
        kernel_window_15_V_read => kernel_data_V_2_15,
        kernel_window_16_V_read => kernel_data_V_2_16,
        kernel_window_17_V_read => kernel_data_V_2_17,
        kernel_window_21_V_read => kernel_data_V_2_21,
        kernel_window_22_V_read => kernel_data_V_2_22,
        kernel_window_23_V_read => kernel_data_V_2_23,
        kernel_window_24_V_read => kernel_data_V_2_24,
        kernel_window_25_V_read => kernel_data_V_2_25,
        kernel_window_26_V_read => kernel_data_V_2_26,
        ap_return_0 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_0,
        ap_return_1 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_1,
        ap_return_2 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_2,
        ap_return_3 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_3,
        ap_return_4 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_4,
        ap_return_5 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_5,
        ap_return_6 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_6,
        ap_return_7 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_7,
        ap_return_8 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_8,
        ap_return_9 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_9,
        ap_return_10 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_10,
        ap_return_11 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_11,
        ap_return_12 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_12,
        ap_return_13 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_13,
        ap_return_14 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_14,
        ap_return_15 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_15,
        ap_return_16 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_16,
        ap_return_17 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_17,
        ap_return_18 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_18,
        ap_return_19 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_19,
        ap_return_20 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_20,
        ap_return_21 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_21,
        ap_return_22 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_22,
        ap_return_23 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_23,
        ap_return_24 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_24,
        ap_return_25 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_25,
        ap_return_26 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_26,
        ap_ce => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = and_ln289_2_fu_652_p2))) then 
                    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_156)) then
                if ((icmp_ln313_fu_658_p2 = ap_const_lv1_1)) then 
                    pX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_658_p2 = ap_const_lv1_0)) then 
                    pX_3 <= add_ln326_fu_664_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_1653)) then 
                    pY_3 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_1649)) then 
                    pY_3 <= add_ln321_fu_708_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((icmp_ln313_reg_954 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    sX_3 <= select_ln328_reg_958;
                elsif ((ap_const_boolean_1 = ap_condition_1648)) then 
                    sX_3 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    storemerge_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1659)) then
                if ((icmp_ln317_reg_963 = ap_const_lv1_1)) then 
                    storemerge_reg_192 <= ap_const_lv32_0;
                elsif ((icmp_ln317_reg_963 = ap_const_lv1_0)) then 
                    storemerge_reg_192 <= select_ln323_reg_967;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then
                and_ln289_2_reg_950 <= and_ln289_2_fu_652_p2;
                icmp_ln313_reg_954 <= icmp_ln313_fu_658_p2;
                kernel_data_V_2_0_ret_reg_855 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_0;
                kernel_data_V_2_10_ret_reg_835 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_4;
                kernel_data_V_2_11_ret_reg_830 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_5;
                kernel_data_V_2_12 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_15;
                kernel_data_V_2_12_ret_reg_890 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_15;
                kernel_data_V_2_13 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_16;
                kernel_data_V_2_13_ret_reg_895 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_16;
                kernel_data_V_2_14 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_17;
                kernel_data_V_2_14_ret_reg_900 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_17;
                kernel_data_V_2_15 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_18;
                kernel_data_V_2_15_ret_reg_905 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_18;
                kernel_data_V_2_16 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_19;
                kernel_data_V_2_16_ret_reg_910 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_19;
                kernel_data_V_2_17 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_20;
                kernel_data_V_2_17_ret_reg_915 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_20;
                kernel_data_V_2_18_ret_reg_825 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_6;
                kernel_data_V_2_19_ret_reg_820 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_7;
                kernel_data_V_2_1_ret_reg_850 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_1;
                kernel_data_V_2_20_ret_reg_815 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_8;
                kernel_data_V_2_21 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_21;
                kernel_data_V_2_21_ret_reg_920 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_21;
                kernel_data_V_2_22 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_22;
                kernel_data_V_2_22_ret_reg_925 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_22;
                kernel_data_V_2_23 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_23;
                kernel_data_V_2_23_ret_reg_930 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_23;
                kernel_data_V_2_24 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_24;
                kernel_data_V_2_24_ret_reg_935 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_24;
                kernel_data_V_2_25 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_25;
                kernel_data_V_2_25_ret_reg_940 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_25;
                kernel_data_V_2_26 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_26;
                kernel_data_V_2_26_ret_reg_945 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_26;
                kernel_data_V_2_2_ret_reg_845 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_2;
                kernel_data_V_2_3 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_9;
                kernel_data_V_2_3_ret_reg_860 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_9;
                kernel_data_V_2_4 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_10;
                kernel_data_V_2_4_ret_reg_865 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_10;
                kernel_data_V_2_5 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_11;
                kernel_data_V_2_5_ret_reg_870 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_11;
                kernel_data_V_2_6 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_12;
                kernel_data_V_2_6_ret_reg_875 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_12;
                kernel_data_V_2_7 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_13;
                kernel_data_V_2_7_ret_reg_880 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_13;
                kernel_data_V_2_8 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_14;
                kernel_data_V_2_8_ret_reg_885 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_14;
                kernel_data_V_2_9_ret_reg_840 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (icmp_ln313_fu_658_p2 = ap_const_lv1_1))) then
                icmp_ln317_reg_963 <= icmp_ln317_fu_702_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce) and (icmp_ln313_reg_954 = ap_const_lv1_1))) then
                sY_3 <= storemerge_reg_192;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln317_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (icmp_ln313_fu_658_p2 = ap_const_lv1_1))) then
                select_ln323_reg_967 <= select_ln323_fu_726_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln313_fu_658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then
                select_ln328_reg_958 <= select_ln328_fu_682_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then
                tmp_data_0_V_reg_972 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_0;
                tmp_data_10_V_reg_1022 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_10;
                tmp_data_11_V_reg_1027 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_11;
                tmp_data_12_V_reg_1032 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_12;
                tmp_data_13_V_reg_1037 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_13;
                tmp_data_14_V_reg_1042 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_14;
                tmp_data_15_V_reg_1047 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_15;
                tmp_data_1_V_reg_977 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_1;
                tmp_data_2_V_reg_982 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_2;
                tmp_data_3_V_reg_987 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_3;
                tmp_data_4_V_reg_992 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_4;
                tmp_data_5_V_reg_997 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_5;
                tmp_data_6_V_reg_1002 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_6;
                tmp_data_7_V_reg_1007 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_7;
                tmp_data_8_V_reg_1012 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_8;
                tmp_data_9_V_reg_1017 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_return_9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, io_acc_block_signal_op158)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln321_fu_708_p2 <= std_logic_vector(unsigned(pY_3) + unsigned(ap_const_lv32_1));
    add_ln323_fu_720_p2 <= std_logic_vector(unsigned(sY_3) + unsigned(ap_const_lv32_1));
    add_ln326_fu_664_p2 <= std_logic_vector(unsigned(pX_3) + unsigned(ap_const_lv32_1));
    add_ln328_fu_676_p2 <= std_logic_vector(unsigned(sX_3) + unsigned(ap_const_lv32_1));
    and_ln289_1_fu_646_p2 <= (icmp_ln289_8_fu_634_p2 and icmp_ln289_7_fu_614_p2);
    and_ln289_2_fu_652_p2 <= (and_ln289_fu_640_p2 and and_ln289_1_fu_646_p2);
    and_ln289_fu_640_p2 <= (icmp_ln289_fu_584_p2 and icmp_ln289_1_fu_594_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);

    ap_block_state13_assign_proc : process(and_ln289_2_reg_950, io_acc_block_signal_op158)
    begin
                ap_block_state13 <= ((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950));
    end process;


    ap_condition_156_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
                ap_condition_156 <= ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce));
    end process;


    ap_condition_1648_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln313_fu_658_p2)
    begin
                ap_condition_1648 <= ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_ln313_fu_658_p2 = ap_const_lv1_1));
    end process;


    ap_condition_1649_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln313_fu_658_p2, icmp_ln317_fu_702_p2)
    begin
                ap_condition_1649 <= ((icmp_ln317_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_ln313_fu_658_p2 = ap_const_lv1_1));
    end process;


    ap_condition_1653_assign_proc : process(icmp_ln313_reg_954, icmp_ln317_reg_963, ap_CS_fsm_state2)
    begin
                ap_condition_1653 <= ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln317_reg_963 = ap_const_lv1_1) and (icmp_ln313_reg_954 = ap_const_lv1_1));
    end process;


    ap_condition_1659_assign_proc : process(ap_ce, icmp_ln313_reg_954, ap_CS_fsm_state2)
    begin
                ap_condition_1659 <= ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce) and (icmp_ln313_reg_954 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce) and (ap_start = ap_const_logic_1))) then 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ce <= ap_const_logic_1;
        else 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_start <= ap_const_logic_1;
        else 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_3u_config2_s_fu_234_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_203_ap_start_reg;
    icmp_ln289_1_fu_594_p2 <= "1" when (sY_3 = ap_const_lv32_2) else "0";
    icmp_ln289_7_fu_614_p2 <= "1" when (signed(tmp_fu_604_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_8_fu_634_p2 <= "1" when (signed(tmp_748_fu_624_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_584_p2 <= "1" when (sX_3 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_658_p2 <= "1" when (pX_3 = ap_const_lv32_1F) else "0";
    icmp_ln317_fu_702_p2 <= "1" when (pY_3 = ap_const_lv32_1F) else "0";
    io_acc_block_signal_op158 <= (res_stream_V_data_9_V_full_n and res_stream_V_data_8_V_full_n and res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_15_V_full_n and res_stream_V_data_14_V_full_n and res_stream_V_data_13_V_full_n and res_stream_V_data_12_V_full_n and res_stream_V_data_11_V_full_n and res_stream_V_data_10_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= tmp_data_0_V_reg_972;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_10_V_blk_n_assign_proc : process(res_stream_V_data_10_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_10_V_blk_n <= res_stream_V_data_10_V_full_n;
        else 
            res_stream_V_data_10_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_10_V_din <= tmp_data_10_V_reg_1022;

    res_stream_V_data_10_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_10_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_10_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_11_V_blk_n_assign_proc : process(res_stream_V_data_11_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_11_V_blk_n <= res_stream_V_data_11_V_full_n;
        else 
            res_stream_V_data_11_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_11_V_din <= tmp_data_11_V_reg_1027;

    res_stream_V_data_11_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_11_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_11_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_12_V_blk_n_assign_proc : process(res_stream_V_data_12_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_12_V_blk_n <= res_stream_V_data_12_V_full_n;
        else 
            res_stream_V_data_12_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_12_V_din <= tmp_data_12_V_reg_1032;

    res_stream_V_data_12_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_12_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_12_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_13_V_blk_n_assign_proc : process(res_stream_V_data_13_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_13_V_blk_n <= res_stream_V_data_13_V_full_n;
        else 
            res_stream_V_data_13_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_13_V_din <= tmp_data_13_V_reg_1037;

    res_stream_V_data_13_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_13_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_13_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_14_V_blk_n_assign_proc : process(res_stream_V_data_14_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_14_V_blk_n <= res_stream_V_data_14_V_full_n;
        else 
            res_stream_V_data_14_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_14_V_din <= tmp_data_14_V_reg_1042;

    res_stream_V_data_14_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_14_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_14_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_15_V_blk_n_assign_proc : process(res_stream_V_data_15_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_15_V_blk_n <= res_stream_V_data_15_V_full_n;
        else 
            res_stream_V_data_15_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_15_V_din <= tmp_data_15_V_reg_1047;

    res_stream_V_data_15_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_15_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_15_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= tmp_data_1_V_reg_977;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= tmp_data_2_V_reg_982;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= tmp_data_3_V_reg_987;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(res_stream_V_data_4_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= tmp_data_4_V_reg_992;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(res_stream_V_data_5_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= tmp_data_5_V_reg_997;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(res_stream_V_data_6_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= tmp_data_6_V_reg_1002;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(res_stream_V_data_7_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= tmp_data_7_V_reg_1007;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_8_V_blk_n_assign_proc : process(res_stream_V_data_8_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_8_V_blk_n <= res_stream_V_data_8_V_full_n;
        else 
            res_stream_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_8_V_din <= tmp_data_8_V_reg_1012;

    res_stream_V_data_8_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_9_V_blk_n_assign_proc : process(res_stream_V_data_9_V_full_n, ap_CS_fsm_state13, and_ln289_2_reg_950)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_9_V_blk_n <= res_stream_V_data_9_V_full_n;
        else 
            res_stream_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_9_V_din <= tmp_data_9_V_reg_1017;

    res_stream_V_data_9_V_write_assign_proc : process(ap_CS_fsm_state13, and_ln289_2_reg_950, ap_ce, io_acc_block_signal_op158)
    begin
        if ((not(((io_acc_block_signal_op158 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_950))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_950))) then 
            res_stream_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_726_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_1_fu_594_p2(0) = '1') else 
        add_ln323_fu_720_p2;
    select_ln328_fu_682_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_fu_584_p2(0) = '1') else 
        add_ln328_fu_676_p2;
    tmp_748_fu_624_p4 <= pX_3(31 downto 1);
    tmp_fu_604_p4 <= pY_3(31 downto 1);
end behav;
